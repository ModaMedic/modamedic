{"version":3,"sources":["first_logo.png","ImagesOrth/ACL.jpg","ImagesOrth/REVERSETSR.jpg","ImagesOrth/Hip.png","ImagesOrth/Ankle.jpg","ImagesOrth/Elbow.jpg","ImagesOrth/Back.jpg","ImagesOrth/Neck.jpg","ImagesOrth/INSTRUCTIONS.PNG","Logo.js","Search.js","ExportCSV.js","Table.js","TableAns.js","Graph.js","TablePer.js","SleepGraph.js","GraphAns.js","PatientData.js","DisplayButton.js","PatientSearch.js","NavBar.js","MessagesPage.js","Questionnaire/SurveyComponent.jsx","Questionnaire/QuestionnaireManger.js","PatientSearchNew.js","InstructionsSurgery.js","ExercisesPage.js","App.js","AddUser.js","Login.js","HomeLogin.js","Home.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","src","require","style","height","marginleft","marginRight","alt","Popup","Component","className","onClick","this","props","closePopup","id","text","React","ExportCSV","csvData","fileName","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","data","Blob","FileSaver","exportToCSV","Table","state","steps","distance","calories","weather","sleep","dataArr","table","exportCSV","handleChange","bind","event","target","name","value","checked","setState","ready","i","noData","length","values","j","dateOStr","week","dates","weekly","day","Date","date","getDay","sun","sat","getTime","toLocaleDateString","month","monthly","avgO","צעדים","מרחק","קלוריות","light","deep","total","sum","counter","showDaily","ValidTime","dateStr","replace","push","firstTime","k","time","dayOfWeek","sunday","saturday","sort","arr","Object","entries","key","key1","last","Math","min","d","setHours","num","floor","toFixed","o","sundayO","firstDay","getFullYear","getMonth","firstDayO","line","width","align","TableAns","dateO","slice","includes","Graph","sort_by_key","array","a","b","x","y","points","oDay","Data","year","dataX","download","TablePer","dic","QuestionnaireID","Score","SleepGraph","pointsD","pointsL","pointsT","lineD","lineL","lineT","colors","GraphAns","PatientData","q2","q3","q4","q5","user","showPopup","showPopupQ","new_date","Questionnaires","quest1","quest2","quest3","quest4","quest5","quest6","changeDate","togglePopup","handleSubmit","togglePopupQ","handleSubmitQ","preventDefault","axios","post","UserID","DateOfSurgery","changedSurgeryDate","headers","sessionStorage","getItem","then","res","window","alert","bmi","parseFloat","sDate","undefined","weekday","gender","pNumber","smoke","sType","weight","today","birthday","age","first","charAt","substring","onSubmit","onChange","PopupQ","DisplayButton","graph","styleLabel","fontSize","color","margin","clean","tempDic","temp","arrSteps","arrDis","arrCal","arrWeat","arrSleep","arr1","arr2","arr3","arr4","arr5","arr6","High","periodicAnswers","dailyA","dailyQ","perQ","NavBar","userInfo","pass","pass2","diff","isLogOut","isMessage","isPatientInfo","isInstructions","isExercises","isEdit","logout","change","privateInfoShow","changeToEdit","updateUser","isQuestionnaires","url","response","token","message","getInfo","get","currUser","removeItem","localStorage","toggleUserInfo","iconType","location","pathname","isDoctor","class","size","Navbar","bg","variant","fixed","goToSearch","goToQuestionnaires","goToMessages","goToExercises","goToInstructions","to","NavDropdown","title","Item","as","Brand","required","DoctorInfo","userName","fName","First_Name","lName","Last_Name","bday","BirthDate","phone","Phone_Number","handleChangeInfo","handleSubmitInfo","bDay","now","dateOfSurgery","height_double","Number","String","pow","put","bDate","toISOString","split","substr","Card","Header","ListGroup","onReset","handleReset","maxLength","pattern","max","float","position","UserInfo","Gender","Smoke","surgeryType","SurgeryType","education","Education","Height","Weight","BMI","onSelectGender","onSelectSmoke","onSelectSurgeryType","onSelectEducation","selectedIndex","options","1","2","3","4","5","6","surgeryDateDisplay","patientListItems","genderOptions","surgeryOptions","smokeOptions","educationOptions","surgeryDate","MessagesPage","messages","content","fetchMessagesPatient","fetchMessagesDoctor","prevProps","prevState","snapshot","patientUserId","reverse","patientId","encodeURIComponent","mId","console","log","MessageId","delete","count","dt2","forEach","dt1","UTC","getDate","addMessage","placeholder","marginLeft","striped","bordered","hover","map","toLocaleString","FromFirstName","FromLastName","textAlign","Content","removeMessage","borderColor","Survey1","applyTheme","SurveyComponent","json","questionnaireId","match","params","$","getQuestionnaire","sendAnswersToServer","sendParsedResultToServer","QuestionnaireEnglishText","description","QuestionnaireText","questions","Questions","elements","singleQuestion","QuestionText","Type","isRequired","choices","Answers","answer","answerID","answerText","hasNone","colCount","result","showID","showWrongUser","showQ","showChange","register","wrongA","serveryResult","parseInt","totalAnswers","prototype","hasOwnProperty","call","question","QuestionID","answers","Array","isArray","AnswerID","widgets","survey","onComplete","add","JSON","stringify","href","model","showQuestionNumbers","QuestionnaireManger","questionnairesArr","questionnairesArrDoctor","presentQuestionnaire","questionnairesArrTemp","q","alignRight","alignLeft","textWeight","scope","changeQuest","PatientSearchNew","first_date","setMonth","three_month","end_date","start_date","sleeping_hours","todayDate","getRequest","selectUser","getDoctorRequest","getPatientRequest","getUrl","start_time","end_time","numOfUsers","da","docs","questionnaire","responseQ","MAP","areas","shape","coords","preFillColor","fillColor","lineWidth","InstructionsSurgery","onFileChange","selectedFile","files","downloadFile","instruction","InstructionId","method","responseType","URL","createObjectURL","link","document","createElement","setAttribute","Title","body","appendChild","click","onFileUpload","FormData","append","fileData","instructions","instructionsForGrid","headerNames","categoryToImage","instructionsByCategory","showInstructions","newInstructionCategory","newInstructionTitle","categories","getInstructions","changePdfToShow","getInitialState","load","clicked","clickedOutside","moveOnImage","enterArea","leaveArea","moveOnArea","getTipPosition","selectFile","upload","uploadFile","onSelectCategoryChosen","hoveredArea","msg","moveMsg","area","category","focusOnInstructions","getElementById","scrollIntoView","evt","nativeEvent","layerX","layerY","top","center","left","respone","instructionsArr","groupArrayOfObjects","list","reduce","rv","pdfToShow","label","file","onUploadProgress","formData","selectedFiles","currentFile","progress","round","loaded","catch","eId","confirm","optionItems","keys","role","aria-valuenow","aria-valuemin","aria-valuemax","disabled","Grid","container","spacing","item","xs","renderUploadFile","onLoad","strokeColor","CardMedia","component","image","Category","removeInstruction","ExercisesPage","exercises","exercisesGrid","newExerciseUrl","newExerciseCategory","getExercises","exercisesForGrid","addExercise","urlId","searchParams","Video","group","r","opts","playerVars","autoplay","backgroundColor","keyName","keyIndex","exercise","videoId","onReady","_onReady","removeExercise","ExerciseId","pdfjs","GlobalWorkerOptions","workerSrc","version","App","optionsPName","namesDiv","isFetchingNames","users","pName","encrypName","fetchNamesForResearch","handlePName","names","trim","uniqueNames","from","Set","usersByName","cards","Body","checkIfNotSearchNeeded","searchPatient","getActiveComponent","initialState","password","questionsID","questionsText","answerUserQuestion","quesionChosen","code","questionnairesID","questionnairesText","questionnairesChosen","AddUser","questionnaires","onSelectQuesionChosen","onSelectQuestionnairesChosen","selected","chosen","selectQuestionnaire","initialQuestions","initQuestionsID","initQuestionsText","fetch","results","obj","initQuestionnairesID","initQuestionnairesText","initQuestionnaires","Password","Code","VerificationQuestion","VerificationAnswer","reload","BMI_NUMBER","componentDidMount","questionnairesOption","Button","floatButtom","isPatient","for","minLength","minlength","Tooltip","IconButton","handleOnChange","Login","ID","wrong","doctor","patient","remember","setItem","sumbit","forget","handle","changePass","qID","response1","dateLong","HomeLogin","path","Home","basename","exact","render","Boolean","hostname","ReactDOM","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.58c0cdd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/first_logo.4c4417d4.png\";","module.exports = __webpack_public_path__ + \"static/media/ACL.b8e24ffb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/REVERSETSR.fd7b932b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hip.b1fa9622.png\";","module.exports = __webpack_public_path__ + \"static/media/Ankle.717456b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Elbow.986fd0d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Back.b7b8521b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Neck.363fa28f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/INSTRUCTIONS.a467ee60.PNG\";","import React from \"react\"\r\n\r\nfunction Logo(){\r\n    const style ={\r\n        height: \"25vmin\"\r\n    };\r\n\r\n    return (\r\n        <img src={require(\"./first_logo.png\")} style={{ height: \"25vmin\", marginleft: \"center\",marginRight: \"center\"}} alt=\"logo\" />\r\n    )\r\n}\r\n\r\nexport default Logo","import React, {Component} from \"react\"\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nclass SearchPatient extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            optionsPName: [],\r\n            namesDiv: [],\r\n            isFetchingNames: false,\r\n            users: [],\r\n            pName:'',\r\n            showPopup: false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.fetchNames = this.fetchNames.bind(this);\r\n        this.handlePName = this.handlePName.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchNames()\r\n            .then(() => console.log(\"Fetch names successfully\"));\r\n    }\r\n\r\n    async fetchNames(){\r\n        var list = [];\r\n        var users = [];\r\n        var namesDiv = [];\r\n        this.setState({isFetchingNames: true});\r\n        var response = await axios.get(\r\n            \" https://moda-medic.herokuapp.com/auth/doctors/metrics/getUsers\",\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n        if(response.data.data){\r\n            var names = [];\r\n            for(var i = 0; i < response.data.data.length; i++){\r\n                let user = response.data.data[i];\r\n                namesDiv.push({first: user.First_Name, last: user.Last_Name});\r\n                users.push(user);\r\n                names.push(user.First_Name.trim() + \" \" + user.Last_Name.trim())\r\n            }\r\n            names = names.sort();\r\n            var uniqueNames = Array.from(new Set(names));\r\n            for(i = 0; i < uniqueNames.length; i++){\r\n                list.push(<option key={uniqueNames[i]}>{uniqueNames[i]}</option>);\r\n            }\r\n        }\r\n        this.setState({\r\n            isFetchingNames: false,\r\n            optionsPName: list,\r\n            namesDiv: namesDiv,\r\n            users: users\r\n        });\r\n    }\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    handlePName(event) {\r\n        this.setState({pName: event.target.value});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        if(event){\r\n            event.preventDefault()\r\n        }\r\n\r\n        let usersByName = [];\r\n        this.state.users.forEach(user => {\r\n            if(this.state.pName.toLocaleLowerCase() === `${user.First_Name.trim()} ${user.Last_Name.trim()}`.toLocaleLowerCase()) {\r\n                console.log(`found user ${user}`);\r\n                usersByName.push(user);\r\n            }\r\n        });\r\n        let cards = [];\r\n        for(let i = 0; i < usersByName.length; i++){\r\n            let user = usersByName[i];\r\n            let dateC = new Date(user.BirthDate).toLocaleDateString('en-GB', {day: 'numeric', month: 'numeric', year:\"numeric\"});\r\n            cards.push(\r\n                <Card className=\"card\" key={user.UserID}  onClick={() => {\r\n                    sessionStorage.setItem(\"patientUserId\", user.UserID);\r\n                    this.togglePopup();\r\n                }}>\r\n                    <Card.Body className=\"cardBody\">שם מלא: {this.state.pName.trim()} </Card.Body>\r\n                    <Card.Body className=\"cardBody\">תאריך לידה: {dateC}</Card.Body>\r\n                </Card>\r\n            );\r\n        }\r\n        this.setState({\r\n            text: cards\r\n        });\r\n        this.togglePopup();\r\n    }\r\n\r\n    render() {\r\n        require(\"./search.css\");\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <datalist id=\"first-list\">{this.state.optionsPName}</datalist>\r\n                    <div className=\"search\">\r\n                        <label className=\"lSearch\">\r\n                            חפש מטופל:\r\n                        </label>\r\n                        <input className=\"iSearch\"\r\n                               id=\"pname\"\r\n                               type=\"text\"\r\n                               name=\"pName\"\r\n                               value={this.state.pName}\r\n                               placeholder=\"שם פרטי ומשפחה\"\r\n                               onChange={this.handlePName}\r\n                               list=\"first-list\"\r\n                               required\r\n                        />\r\n                        <button className=\"bSearch\">\r\n                            חפש\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <br />\r\n                {this.state.showPopup ?\r\n                    <Popup\r\n                        text={this.state.text}\r\n                        closePopup={this.togglePopup.bind(this)}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPatient\r\n\r\nclass Popup extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='popup'>\r\n                <div className='popup_inner' >\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                    <h4>:אנא בחר מבין הרשומות הבאות</h4>\r\n                    {this.props.text}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n//import Button from 'react-bootstrap/Button';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport \"./ExportCSV.css\"\r\n\r\nexport const ExportCSV = ({csvData, fileName}) => {\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const exportToCSV = (csvData, fileName) => {\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <button className=\"b\" onClick={(e) => exportToCSV(csvData,fileName)}>יצא לאקסל</button>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport {ExportCSV} from \"./ExportCSV\";\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            steps: props.steps,\r\n            distance : props.distance,\r\n            calories: props.calories,\r\n            weather: props.weather,\r\n            sleep: props.sleep,\r\n            dataArr: props.dataArr,\r\n            table: [],\r\n            exportCSV: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({[name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        require(\"./Table.css\");\r\n        if(this.props.ready){\r\n            var noData = true;\r\n            var i\r\n            for(i = 0; i < this.props.dataArr.length; i++){\r\n                if(this.props.dataArr[i].values.length > 0){\r\n                    noData = false\r\n                }\r\n            }\r\n            if(!noData){\r\n                var table = {};\r\n                var j, week = false;\r\n                var dates = [];\r\n                var dateO, dateOStr;\r\n                if(this.props.weekly){\r\n                    dateO = new Date(this.props.date);\r\n                    var day = dateO.getDay();\r\n                    var sun = new Date(this.props.date - day * 86400000);\r\n                    var sat = new Date(sun.getTime() + 518400000);\r\n                    dateOStr = sun.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + sat.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                }\r\n                if(this.props.monthly){\r\n                    dateO = new Date(this.props.date);\r\n                    dateOStr = dateO.toLocaleDateString('en-GB', {month: 'short'});\r\n                }\r\n                var avgO = {};\r\n                avgO[\"before\"] = {צעדים: {}, מרחק: {}, קלוריות: {}, weather: {}, light: {}, deep: {}, total: {}};\r\n                avgO[\"after\"] = {צעדים: {}, מרחק: {}, קלוריות: {}, weather: {}, light: {}, deep: {}, total: {}};\r\n                avgO[\"before\"][\"צעדים\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"מרחק\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"קלוריות\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"weather\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"light\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"deep\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"total\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"צעדים\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"מרחק\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"קלוריות\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"weather\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"light\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"deep\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"total\"] = {sum: 0, counter: 0};\r\n                for(i = 0; i < this.props.dataArr.length; i++){\r\n                    for(j = 0; j < this.props.dataArr[i].values.length; j++){\r\n                        if(this.props.showDaily){\r\n                            var date = new Date(this.props.dataArr[i].values[j].ValidTime);\r\n                            var dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/ /g, '-');\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                dates.push(this.props.dataArr[i].values[j].ValidTime);\r\n                            }\r\n                            if(this.props.dataArr[i].name === \"שעות שינה\"){\r\n                            var deep = 0, light = 0, total = 0, firstTime = 0;\r\n                                for(var k = 0; k < this.props.dataArr[i].values[j][\"Data\"].length; k++){\r\n                                    if(k === 0){\r\n                                        firstTime = this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                    }\r\n                                    else if( firstTime === this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"]){\r\n                                        break;\r\n                                    }\r\n                                    var time = this.props.dataArr[i].values[j][\"Data\"][k][\"EndTime\"] - this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                    time = time / 3600000;\r\n                                    if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Light sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_LIGHT\"){\r\n                                        light = light + time;\r\n                                    }\r\n                                    else if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Deep sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_DEEP\"){\r\n                                        deep = deep + time;\r\n                                    }\r\n                                    total = total + time;\r\n                                }\r\n                                if(!table[dateStr]){\r\n                                    table[dateStr] = {};\r\n                                }\r\n                                table[dateStr][\"light\"] = light;\r\n                                table[dateStr][\"deep\"] = deep;\r\n                                table[dateStr][\"total\"] = total;\r\n                                continue;\r\n                            }\r\n                            table[dateStr][this.props.dataArr[i].name] = this.props.dataArr[i].values[j];\r\n                        }\r\n                        else if(this.props.weekly){\r\n                            date = new Date(this.props.dataArr[i].values[j].ValidTime);\r\n                            var dayOfWeek = date.getDay();\r\n                            var sunday = new Date(this.props.dataArr[i].values[j].ValidTime - dayOfWeek * 86400000);\r\n                            var saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                            if(dateOStr === dateStr){\r\n                                if(this.props.dataArr[i].name === \"שעות שינה\"){\r\n                                    let deep = 0, light = 0, total = 0, firstTime = 0;\r\n                                    for(k = 0; k < this.props.dataArr[i].values[j][\"Data\"].length; k++){\r\n                                        if(k === 0){\r\n                                            firstTime = this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                        }\r\n                                        else if( firstTime === this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"]){\r\n                                            break;\r\n                                        }\r\n                                        time = this.props.dataArr[i].values[j][\"Data\"][k][\"EndTime\"] - this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                        time = time / 3600000;\r\n                                        if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Light sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_LIGHT\"){\r\n                                            light = light + time;\r\n                                        }\r\n                                        else if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Deep sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_DEEP\"){\r\n                                            deep = deep + time;\r\n                                        }\r\n                                        total = total + time;\r\n                                    }\r\n                                    if(this.props.dataArr[i].values[j].ValidTime < this.props.date){\r\n                                        avgO[\"before\"][\"light\"][\"sum\"] += light;\r\n                                        avgO[\"before\"][\"deep\"][\"sum\"] += deep;\r\n                                        avgO[\"before\"][\"total\"][\"sum\"] += total;\r\n                                        avgO[\"before\"][\"light\"][\"counter\"] ++;\r\n                                        avgO[\"before\"][\"deep\"][\"counter\"] ++;\r\n                                        avgO[\"before\"][\"total\"][\"counter\"] ++;\r\n                                    }\r\n                                    else{\r\n                                        avgO[\"after\"][\"light\"][\"sum\"] += light;\r\n                                        avgO[\"after\"][\"deep\"][\"sum\"] += deep;\r\n                                        avgO[\"after\"][\"total\"][\"sum\"] += total;\r\n                                        avgO[\"after\"][\"light\"][\"counter\"] ++;\r\n                                        avgO[\"after\"][\"deep\"][\"counter\"] ++;\r\n                                        avgO[\"after\"][\"total\"][\"counter\"] ++;\r\n                                    }\r\n                                    continue;\r\n                                }\r\n                                if(this.props.dataArr[i].values[j].ValidTime < this.props.date){\r\n                                    if(this.props.dataArr[i].name === \"מזג האוויר\"){\r\n                                        avgO[\"before\"][\"weather\"][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                        avgO[\"before\"][\"weather\"][\"counter\"] ++;\r\n                                        continue;\r\n                                    }\r\n                                    avgO[\"before\"][this.props.dataArr[i].name][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                    avgO[\"before\"][this.props.dataArr[i].name][\"counter\"] ++;\r\n                                }\r\n                                else{\r\n                                    if(this.props.dataArr[i].name === \"מזג האוויר\"){\r\n                                        avgO[\"after\"][\"weather\"][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                        avgO[\"after\"][\"weather\"][\"counter\"] ++;\r\n                                        continue;\r\n                                    }\r\n                                    avgO[\"after\"][this.props.dataArr[i].name][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                    avgO[\"after\"][this.props.dataArr[i].name][\"counter\"] ++;\r\n                                }\r\n                                if(!week){\r\n                                    dates.push(this.props.dataArr[i].values[j].ValidTime);\r\n                                    week = true;\r\n                                }\r\n                                continue;\r\n                            }\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                dates.push(this.props.dataArr[i].values[j].ValidTime);\r\n                            }\r\n                            if(table[dateStr][this.props.dataArr[i].name] == null){\r\n                                table[dateStr][this.props.dataArr[i].name] = {};\r\n                                table[dateStr][this.props.dataArr[i].name][\"counter\"] = 0;\r\n                                table[dateStr][this.props.dataArr[i].name][\"sum\"] = 0;\r\n                            }\r\n                            if(this.props.dataArr[i].name === \"שעות שינה\"){\r\n                                let deep = 0, light = 0, total = 0, firstTime = 0;\r\n                                for(k = 0; k < this.props.dataArr[i].values[j][\"Data\"].length; k++){\r\n                                    if(k === 0){\r\n                                        firstTime = this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                    }\r\n                                    else if( firstTime === this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"]){\r\n                                        break;\r\n                                    }\r\n                                    time = this.props.dataArr[i].values[j][\"Data\"][k][\"EndTime\"] - this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                    time = time / 3600000;\r\n                                    if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Light sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_LIGHT\"){\r\n                                        light = light + time;\r\n                                    }\r\n                                    else if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Deep sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_DEEP\"){\r\n                                        deep = deep + time;\r\n                                    }\r\n                                    total = total + time;\r\n                                }\r\n                                if(!table[dateStr]){\r\n                                    table[dateStr] = {};\r\n                                }\r\n                                if(!table[dateStr][\"total\"]){\r\n                                    table[dateStr][\"light\"] = {};\r\n                                    table[dateStr][\"deep\"] = {};\r\n                                    table[dateStr][\"total\"] = {};\r\n                                    table[dateStr][\"light\"][\"counter\"] = 0;\r\n                                    table[dateStr][\"deep\"][\"counter\"] = 0;\r\n                                    table[dateStr][\"total\"][\"counter\"] = 0;\r\n                                    table[dateStr][\"light\"][\"sum\"] = 0;\r\n                                    table[dateStr][\"deep\"][\"sum\"] = 0;\r\n                                    table[dateStr][\"total\"][\"sum\"] = 0;\r\n                                }\r\n                                table[dateStr][\"light\"][\"sum\"] += light;\r\n                                table[dateStr][\"deep\"][\"sum\"] += deep;\r\n                                table[dateStr][\"total\"][\"sum\"] += total;\r\n                                table[dateStr][\"light\"][\"counter\"]++;\r\n                                table[dateStr][\"deep\"][\"counter\"]++;\r\n                                table[dateStr][\"total\"][\"counter\"]++;\r\n                                continue;\r\n                            }\r\n                            table[dateStr][this.props.dataArr[i].name][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                            table[dateStr][this.props.dataArr[i].name][\"counter\"]++;\r\n                        }\r\n                        else if(this.props.monthly){\r\n                            date = new Date(this.props.dataArr[i].values[j].ValidTime);;\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                            if(dateOStr === dateStr){\r\n                                if(this.props.dataArr[i].name === \"שעות שינה\"){\r\n                                    let deep = 0, light = 0, total = 0, firstTime = 0;\r\n                                    for(k = 0; k < this.props.dataArr[i].values[j][\"Data\"].length; k++){\r\n                                        if(k === 0){\r\n                                            firstTime = this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                        }\r\n                                        else if( firstTime === this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"]){\r\n                                            break;\r\n                                        }\r\n                                        time = this.props.dataArr[i].values[j][\"Data\"][k][\"EndTime\"] - this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                        time = time / 3600000;\r\n                                        if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Light sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_LIGHT\"){\r\n                                            light = light + time;\r\n                                        }\r\n                                        else  if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Deep sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_DEEP\"){\r\n                                            deep = deep + time;\r\n                                        }\r\n                                        total = total + time;\r\n                                    }\r\n                                    if(this.props.dataArr[i].values[j].ValidTime < this.props.date){\r\n                                        avgO[\"before\"][\"light\"][\"sum\"] += light;\r\n                                        avgO[\"before\"][\"deep\"][\"sum\"] += deep;\r\n                                        avgO[\"before\"][\"total\"][\"sum\"] += total;\r\n                                        avgO[\"before\"][\"light\"][\"counter\"] ++;\r\n                                        avgO[\"before\"][\"deep\"][\"counter\"] ++;\r\n                                        avgO[\"before\"][\"total\"][\"counter\"] ++;\r\n                                    }\r\n                                    else{\r\n                                        avgO[\"after\"][\"light\"][\"sum\"] += light;\r\n                                        avgO[\"after\"][\"deep\"][\"sum\"] += deep;\r\n                                        avgO[\"after\"][\"total\"][\"sum\"] += total;\r\n                                        avgO[\"after\"][\"light\"][\"counter\"] ++;\r\n                                        avgO[\"after\"][\"deep\"][\"counter\"] ++;\r\n                                        avgO[\"after\"][\"total\"][\"counter\"] ++;\r\n                                    }\r\n                                    continue;\r\n                                }\r\n                                if(this.props.dataArr[i].values[j].ValidTime < this.props.date){\r\n                                    if(this.props.dataArr[i].name === \"מזג האוויר\"){\r\n                                        avgO[\"before\"][\"weather\"][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                        avgO[\"before\"][\"weather\"][\"counter\"] ++;\r\n                                        continue;\r\n                                    }\r\n                                    avgO[\"before\"][this.props.dataArr[i].name][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                    avgO[\"before\"][this.props.dataArr[i].name][\"counter\"] ++;\r\n                                }\r\n                                else{\r\n                                    if(this.props.dataArr[i].name === \"מזג האוויר\"){\r\n                                        avgO[\"after\"][\"weather\"][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                        avgO[\"after\"][\"weather\"][\"counter\"] ++;\r\n                                        continue;\r\n                                    }\r\n                                    avgO[\"after\"][this.props.dataArr[i].name][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                                    avgO[\"after\"][this.props.dataArr[i].name][\"counter\"] ++;\r\n                                }\r\n                                if(!week){\r\n                                    dates.push(this.props.dataArr[i].values[j].ValidTime);\r\n                                    week = true;\r\n                                }\r\n                                continue;\r\n                            }\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                dates.push(this.props.dataArr[i].values[j].ValidTime );\r\n                            }\r\n                            if(table[dateStr][this.props.dataArr[i].name] == null){\r\n                                table[dateStr][this.props.dataArr[i].name] = {};\r\n                                table[dateStr][this.props.dataArr[i].name][\"counter\"] = 0;\r\n                                table[dateStr][this.props.dataArr[i].name][\"sum\"] = 0;\r\n                            }\r\n                            if(this.props.dataArr[i].name === \"שעות שינה\"){\r\n                                let deep = 0, light = 0, total = 0, firstTime = 0;\r\n                                for(k = 0; k < this.props.dataArr[i].values[j][\"Data\"].length; k++){\r\n                                    if(k === 0){\r\n                                        firstTime = this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                    }\r\n                                    else if( firstTime === this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"]){\r\n                                        break;\r\n                                    }\r\n                                    time = this.props.dataArr[i].values[j][\"Data\"][k][\"EndTime\"] - this.props.dataArr[i].values[j][\"Data\"][k][\"StartTime\"];\r\n                                    time = time / 3600000;\r\n                                    if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Light sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_LIGHT\"){\r\n                                        light = light + time;\r\n                                    }\r\n                                    else if(this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"Deep sleep\" || this.props.dataArr[i].values[j][\"Data\"][k][\"State\"] === \"SLEEP_DEEP\"){\r\n                                        deep = deep + time;\r\n                                    }\r\n                                    total = total + time;\r\n                                }\r\n                                if(!table[dateStr]){\r\n                                    table[dateStr] = {};\r\n                                }\r\n                                if(!table[dateStr][\"total\"]){\r\n                                    table[dateStr][\"light\"] = {};\r\n                                    table[dateStr][\"deep\"] = {};\r\n                                    table[dateStr][\"total\"] = {};\r\n                                    table[dateStr][\"light\"][\"counter\"] = 0;\r\n                                    table[dateStr][\"deep\"][\"counter\"] = 0;\r\n                                    table[dateStr][\"total\"][\"counter\"] = 0;\r\n                                    table[dateStr][\"light\"][\"sum\"] = 0;\r\n                                    table[dateStr][\"deep\"][\"sum\"] = 0;\r\n                                    table[dateStr][\"total\"][\"sum\"] = 0;\r\n                                }\r\n                                table[dateStr][\"light\"][\"sum\"] += light;\r\n                                table[dateStr][\"deep\"][\"sum\"] += deep;\r\n                                table[dateStr][\"total\"][\"sum\"] += total;\r\n                                table[dateStr][\"light\"][\"counter\"]++;\r\n                                table[dateStr][\"deep\"][\"counter\"]++;\r\n                                table[dateStr][\"total\"][\"counter\"]++;\r\n                                continue;\r\n                            }\r\n                            table[dateStr][this.props.dataArr[i].name][\"sum\"] += this.props.dataArr[i].values[j][\"Data\"];\r\n                            table[dateStr][this.props.dataArr[i].name][\"counter\"]++;\r\n                        }\r\n                    }\r\n                }\r\n                dates = dates.sort();\r\n                var arr = [];\r\n                if(this.props.weekly || this.props.monthly){\r\n                    for (let [key,] of Object.entries(table)) {\r\n                        for (let [key1,] of Object.entries(table[key])) {\r\n                            table[key][key1][\"Data\"] = table[key][key1][\"sum\"] / table[key][key1][\"counter\"];\r\n                        }\r\n                    }\r\n                }\r\n                var exportCSV = [];\r\n                var last = Math.min();\r\n                for(i = 0; i < dates.length; i++){\r\n                    date = new Date(dates[i]);\r\n                    dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/ /g, '-')\r\n                    if(this.props.showDaily){\r\n                        var d = new Date(dates[i]);\r\n                        d.setHours(0,0,0,0);\r\n                        var num = Math.floor((d.getTime() - this.props.date) / 86400000);\r\n                        if(num < 0){\r\n                            num++;\r\n                        }\r\n                        if(last === num){\r\n                            num++;\r\n                        }\r\n                        last = num;\r\n                        if(!this.props.date){\r\n                            num = \"-\"\r\n                        }\r\n                        table[dateStr][\"num\"] = num;\r\n                        arr.push(\r\n                            <tr key={dateStr}>\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{num}</td> : <td className=\"after\">{num}</td>}\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{dateStr}</td> : <td className=\"after\">{dateStr}</td>}\r\n                                { this.props.steps ? (table[dateStr][\"צעדים\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"צעדים\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"צעדים\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                { this.props.distance ? (table[dateStr][\"מרחק\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"מרחק\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"מרחק\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                { this.props.calories ? (table[dateStr][\"קלוריות\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"קלוריות\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"קלוריות\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                { this.props.weather ? (table[dateStr][\"מזג האוויר\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"מזג האוויר\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"מזג האוויר\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                { this.props.sleep ? (table[dateStr][\"light\"] >= 0 ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"light\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"light\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                { this.props.sleep ? (table[dateStr][\"deep\"] >= 0 ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"deep\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"deep\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                { this.props.sleep ? (table[dateStr][\"total\"] >= 0 ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"total\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"total\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    else if(this.props.weekly || this.props.monthly){\r\n                        var o = new Date(this.props.date);\r\n                        d = new Date(dates[i]);\r\n                        d.setHours(0,0,0,0);\r\n                        if(this.props.weekly){\r\n                            var sundayO = new Date(o.getTime() - o.getDay() * 86400000);\r\n                            sundayO.setHours(0,0,0,0);\r\n                            dayOfWeek = date.getDay();\r\n                            sunday = new Date(date.getTime() - dayOfWeek * 86400000);\r\n                            sunday.setHours(0,0,0,0);\r\n                            saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                            num = Math.floor((sunday.getTime() - sundayO.getTime()) / 604800000);\r\n                        }\r\n                        else{\r\n                            var firstDay = new Date(d.getFullYear(), d.getMonth(), 1);\r\n                            var firstDayO = new Date(o.getFullYear(), o.getMonth(), 1);\r\n                            num = Math.floor((firstDay.getTime() - firstDayO.getTime()) / 2419200000);\r\n                            if(num < 0){\r\n                                num++;\r\n                            }\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        }\r\n                        if(last === num){\r\n                            num++;\r\n                        }\r\n                        last = num;\r\n                        if(!this.props.date){\r\n                            num = \"-\"\r\n                        }\r\n                        if(dateStr === dateOStr){\r\n                            arr.push(\r\n                                <tr key={dateStr + \"before\"}>\r\n                                    <td className=\"before\">{0}</td>\r\n                                    <td className=\"before\">{dateStr}</td>\r\n                                    { this.props.steps ? (avgO[\"before\"][\"צעדים\"][\"counter\"] ? (<td className=\"before\">{ (avgO[\"before\"][\"צעדים\"][\"sum\"] / avgO[\"before\"][\"צעדים\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"before\">-</td>) : null}\r\n                                    { this.props.distance ? (avgO[\"before\"][\"מרחק\"][\"counter\"] ? (<td className=\"before\">{ (avgO[\"before\"][\"מרחק\"][\"sum\"] / avgO[\"before\"][\"מרחק\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"before\">-</td>) : null}\r\n                                    { this.props.calories ? (avgO[\"before\"][\"קלוריות\"][\"counter\"] ? (<td className=\"before\">{ (avgO[\"before\"][\"קלוריות\"][\"sum\"] / avgO[\"before\"][\"קלוריות\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"before\">-</td>) : null}\r\n                                    { this.props.weather ? (avgO[\"before\"][\"weather\"][\"counter\"] ? (<td className=\"before\">{ (avgO[\"before\"][\"weather\"][\"sum\"] / avgO[\"before\"][\"weather\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"before\">-</td>) : null}\r\n                                    { this.props.sleep ? (avgO[\"before\"][\"light\"][\"counter\"] ? (<td className=\"before\">{ (avgO[\"before\"][\"light\"][\"sum\"] / avgO[\"before\"][\"light\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"before\">-</td>) : null}\r\n                                    { this.props.sleep ? (avgO[\"before\"][\"deep\"][\"counter\"] ? (<td className=\"before\">{ (avgO[\"before\"][\"deep\"][\"sum\"] / avgO[\"before\"][\"deep\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"before\">-</td>) : null}\r\n                                    { this.props.sleep ? (avgO[\"before\"][\"total\"][\"counter\"] ? (<td className=\"before\">{ (avgO[\"before\"][\"total\"][\"sum\"] / avgO[\"before\"][\"total\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"before\">-</td>) : null}\r\n                                </tr>\r\n                            )\r\n                            arr.push(\r\n                                <tr key={dateStr + \"after\"}>\r\n                                    <td className=\"after\">{0}</td>\r\n                                    <td className=\"after\">{dateStr}</td>\r\n                                    { this.props.steps ? (avgO[\"after\"][\"צעדים\"][\"counter\"] ? (<td className=\"after\">{ (avgO[\"after\"][\"צעדים\"][\"sum\"] / avgO[\"after\"][\"צעדים\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"after\">-</td>) : null}\r\n                                    { this.props.distance ? (avgO[\"after\"][\"מרחק\"][\"counter\"] ? (<td className=\"after\">{ (avgO[\"after\"][\"מרחק\"][\"sum\"] / avgO[\"after\"][\"מרחק\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"after\">-</td>) : null}\r\n                                    { this.props.calories ? (avgO[\"after\"][\"קלוריות\"][\"counter\"] ? (<td className=\"after\">{ (avgO[\"after\"][\"קלוריות\"][\"sum\"] / avgO[\"after\"][\"קלוריות\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"after\">-</td>) : null}\r\n                                    { this.props.weather ? (avgO[\"after\"][\"weather\"][\"counter\"] ? (<td className=\"after\">{ (avgO[\"after\"][\"weather\"][\"sum\"] / avgO[\"after\"][\"weather\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"after\">-</td>) : null}\r\n                                    { this.props.sleep ? (avgO[\"after\"][\"light\"][\"counter\"] ? (<td className=\"after\">{ (avgO[\"after\"][\"light\"][\"sum\"] / avgO[\"after\"][\"light\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"after\">-</td>) : null}\r\n                                    { this.props.sleep ? (avgO[\"after\"][\"deep\"][\"counter\"] ? (<td className=\"after\">{ (avgO[\"after\"][\"deep\"][\"sum\"] / avgO[\"after\"][\"deep\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"after\">-</td>) : null}\r\n                                    { this.props.sleep ? (avgO[\"after\"][\"total\"][\"counter\"] ? (<td className=\"after\">{ (avgO[\"after\"][\"total\"][\"sum\"] / avgO[\"after\"][\"total\"][\"counter\"]).toFixed(2)}</td> ) : <td className=\"after\">-</td>) : null}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                        else{\r\n                            table[dateStr][\"num\"] = num;\r\n                            arr.push(\r\n                                <tr key={dateStr}>\r\n                                     {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{num}</td> : <td className=\"after\">{num}</td>}\r\n                                    {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{dateStr}</td> : <td className=\"after\">{dateStr}</td>}\r\n                                    { this.props.steps ? (table[dateStr][\"צעדים\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"צעדים\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"צעדים\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                    { this.props.distance ? (table[dateStr][\"מרחק\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"מרחק\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"מרחק\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                    { this.props.calories ? (table[dateStr][\"קלוריות\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"קלוריות\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"קלוריות\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                    { this.props.weather ? (table[dateStr][\"מזג האוויר\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"מזג האוויר\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"מזג האוויר\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                    { this.props.sleep ? (table[dateStr][\"light\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"light\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"light\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                    { this.props.sleep ? (table[dateStr][\"deep\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"deep\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"deep\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                    { this.props.sleep ? (table[dateStr][\"total\"] ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"total\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"total\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>) ) : null}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    }\r\n                    var line = {};\r\n                    line[\"תאריך\"] = dateStr;\r\n                    var z = 0;\r\n                    if(dateStr === dateOStr){\r\n                        if(this.props.date){\r\n                            if(this.props.weekly){\r\n                                line[\"מספר שבוע\"] = z;\r\n                            }\r\n                            else{\r\n                                line[\"מספר חודש\"] = z;\r\n                            }\r\n                        }\r\n                        if(this.props.steps && avgO[\"before\"][\"צעדים\"][\"counter\"]){\r\n                            line[\"צעדים\"] = (avgO[\"before\"][\"צעדים\"][\"sum\"] / avgO[\"before\"][\"צעדים\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.distance && avgO[\"before\"][\"מרחק\"][\"counter\"]){\r\n                            line[\"מרחק\"] = (avgO[\"before\"][\"מרחק\"][\"sum\"] / avgO[\"before\"][\"מרחק\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.calories && avgO[\"before\"][\"קלוריות\"][\"counter\"]){\r\n                            line[\"קלוריות\"] = (avgO[\"before\"][\"קלוריות\"][\"sum\"] / avgO[\"before\"][\"קלוריות\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.weather && avgO[\"before\"][\"weather\"][\"counter\"]){\r\n                            line[\"מזג האוויר\"] = (avgO[\"before\"][\"weather\"][\"sum\"] / avgO[\"before\"][\"weather\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.sleep && avgO[\"before\"][\"light\"][\"counter\"]){\r\n                            line[\"שעות שינה קלה\"] = (avgO[\"before\"][\"light\"][\"sum\"] / avgO[\"before\"][\"light\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.sleep && avgO[\"before\"][\"deep\"][\"counter\"]){\r\n                            line[\"שעות שינה עמוקה\"] = (avgO[\"before\"][\"deep\"][\"sum\"] / avgO[\"before\"][\"deep\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.sleep && avgO[\"before\"][\"total\"][\"counter\"]){\r\n                            line[\"סך כל שעות השינה\"] = (avgO[\"before\"][\"total\"][\"sum\"] / avgO[\"before\"][\"total\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        exportCSV.push(line);\r\n                        line = {};\r\n                        if(this.props.date){\r\n                            if(this.props.weekly){\r\n                                line[\"מספר שבוע\"] = z;\r\n                            }\r\n                            else{\r\n                                line[\"מספר חודש\"] = z;\r\n                            }\r\n                        }\r\n                        line[\"תאריך\"] = dateStr;\r\n                        if(this.props.steps && avgO[\"after\"][\"צעדים\"][\"counter\"]){\r\n                            line[\"צעדים\"] = (avgO[\"after\"][\"צעדים\"][\"sum\"] / avgO[\"after\"][\"צעדים\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.distance && avgO[\"after\"][\"מרחק\"][\"counter\"]){\r\n                            line[\"מרחק\"] = (avgO[\"after\"][\"מרחק\"][\"sum\"] / avgO[\"after\"][\"מרחק\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.calories && avgO[\"after\"][\"קלוריות\"][\"counter\"]){\r\n                            line[\"קלוריות\"] = (avgO[\"after\"][\"קלוריות\"][\"sum\"] / avgO[\"after\"][\"קלוריות\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.weather && avgO[\"after\"][\"weather\"][\"counter\"]){\r\n                            line[\"מזג האוויר\"] = (avgO[\"after\"][\"weather\"][\"sum\"] / avgO[\"after\"][\"weather\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.sleep && avgO[\"after\"][\"light\"][\"counter\"]){\r\n                            line[\"שעות שינה קלה\"] = (avgO[\"after\"][\"light\"][\"sum\"] / avgO[\"after\"][\"light\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.sleep && avgO[\"after\"][\"deep\"][\"counter\"]){\r\n                            line[\"שעות שינה עמוקה\"] = (avgO[\"after\"][\"deep\"][\"sum\"] / avgO[\"after\"][\"deep\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(this.props.sleep && avgO[\"after\"][\"total\"][\"counter\"]){\r\n                            line[\"סך כל שעות השינה\"] = (avgO[\"after\"][\"total\"][\"sum\"] / avgO[\"after\"][\"total\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        exportCSV.push(line);\r\n                        continue;\r\n                    }\r\n                    if(this.props.date){\r\n                        if(this.props.showDaily){\r\n                            line[\"מספר יום\"] = table[dateStr][\"num\"]\r\n                        }\r\n                        else if(this.props.weekly){\r\n                            line[\"מספר שבוע\"] = table[dateStr][\"num\"]\r\n                        }\r\n                        else{\r\n                            line[\"מספר חודש\"] = table[dateStr][\"num\"]\r\n                        }\r\n                    }\r\n                    if(this.props.steps && table[dateStr][\"צעדים\"]){\r\n                        line[\"צעדים\"] = table[dateStr][\"צעדים\"][\"Data\"];\r\n                    }\r\n                    if(this.props.distance && table[dateStr][\"מרחק\"]){\r\n                        line[\"מרחק\"] = table[dateStr][\"מרחק\"][\"Data\"];\r\n                    }\r\n                    if(this.props.calories && table[dateStr][\"קלוריות\"]){\r\n                        line[\"קלוריות\"] = table[dateStr][\"קלוריות\"][\"Data\"];\r\n                    }\r\n                    if(this.props.weather && table[dateStr][\"מזג האוויר\"]){\r\n                        line[\"מזג האוויר\"] = table[dateStr][\"מזג האוויר\"][\"Data\"];\r\n                    }\r\n                    if(this.props.sleep && table[dateStr][\"light\"] && this.props.showDaily){\r\n                        line[\"שעות שינה קלה\"] = table[dateStr][\"light\"];\r\n                        line[\"שעות שינה עמוקה\"] = table[dateStr][\"deep\"];\r\n                        line[\"סך כל שעות השינה\"] = table[dateStr][\"total\"];\r\n                        \r\n                    }\r\n                    if(this.props.sleep && table[dateStr][\"light\"] && !this.props.showDaily){\r\n                        line[\"שעות שינה קלה\"] = table[dateStr][\"light\"][\"Data\"];\r\n                        line[\"שעות שינה עמוקה\"] = table[dateStr][\"deep\"][\"Data\"];\r\n                        line[\"סך כל שעות השינה\"] = table[dateStr][\"total\"][\"Data\"];\r\n                    }\r\n                    exportCSV.push(line);\r\n                }\r\n                \r\n            } \r\n            else{\r\n                noData = true;\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                {this.props.ready ? <div className=\"center\">\r\n                    {noData ? <h4>לא קיים מידע על המשתמש</h4> :\r\n                        <table style={{width: \"100%\"}} id=\"mdd\" className=\"tabels\" align=\"center\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    { this.props.dataArr.length > 0 && this.props.showDaily ? <th>מספר יום</th> : null}\r\n                                    { this.props.dataArr.length > 0 && this.props.weekly ? <th>מספר שבוע</th> : null} \r\n                                    { this.props.dataArr.length > 0 && this.props.monthly ? <th>מספר חודש</th> : null}     \r\n                                    { this.props.dataArr.length > 0 ? <th>תאריך</th> : null}\r\n                                    { this.props.steps ? <th>צעדים</th> : null }\r\n                                    { this.props.distance ? <th>מרחק</th> : null }\r\n                                    { this.props.calories ? <th>קלוריות</th> : null }\r\n                                    { this.props.weather ? <th>מזג האוויר</th> : null }\r\n                                    { this.props.sleep ? <th>שעות שינה קלה</th> : null }\r\n                                    { this.props.sleep ? <th>שעות שינה עמוקה</th> : null }\r\n                                    { this.props.sleep ? <th>סך כל שעות השינה</th> : null }\r\n                                </tr>\r\n                                {arr}\r\n                            </tbody>\r\n                        </table>}\r\n                    { this.props.dataArr.length > 0 && !noData ? <ExportCSV csvData={exportCSV} fileName={this.props.name + \" מדדים\"}/> : null}\r\n                    \r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table","import React, {Component} from \"react\"\r\nimport {ExportCSV} from \"./ExportCSV\"\r\nimport \"./Table.css\"\r\n\r\n\r\nclass TableAns extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({[name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n    \r\n    \r\n\r\n\r\n    render() {\r\n        if(this.props.ready){\r\n            var noData = false;\r\n            if(this.props.data.length > 0){\r\n                var i, week = false;\r\n                var arr = []\r\n                var dates = []\r\n                let data = this.props.data;\r\n                var table = {};\r\n                var exportCSV = [];\r\n                var dateO = new Date(this.props.date), dateOStr;\r\n                var avgO = {};\r\n                avgO[\"before\"] = {sum: 0, counter: 0, text: \"\"};\r\n                avgO[\"after\"] = {sum: 0, counter: 0, text: \"\"};\r\n                if(this.props.weekly){\r\n                    var day = dateO.getDay();\r\n                    var sun = new Date(this.props.date - day * 86400000);\r\n                    var sat = new Date(sun.getTime() + 518400000);\r\n                    dateOStr = sun.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + sat.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                }\r\n                if(this.props.monthly){\r\n                    dateOStr = dateO.toLocaleDateString('en-GB', {month: 'short'});\r\n                }\r\n                var last = Math.min();\r\n                for(i = 0; i < data.length; i++){\r\n                    if(this.props.showDaily){\r\n                        var date = new Date(data[i].ValidTime);\r\n                        var dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/ /g, '-');\r\n                        var text = \"\";\r\n                        for(var j = 0 ; j < data[i][\"Answers\"][1][\"AnswerID\"].length; j++){\r\n                            if(data[i][\"Answers\"][1][\"AnswerID\"][j] === 0){\r\n                                text = text + \"לא נטלתי, \"\r\n                            }\r\n                            else if(data[i][\"Answers\"][1][\"AnswerID\"][j] === 1){\r\n                                text = text + \"בסיסית, \"\r\n                            }\r\n                            else if(data[i][\"Answers\"][1][\"AnswerID\"][j] === 2){\r\n                                text = text + \"מתקדמת, \"\r\n                            }\r\n                            else if(data[i][\"Answers\"][1][\"AnswerID\"][j] === 3){\r\n                                text = text + \"נרקוטית, \"\r\n                            }\r\n                        }\r\n                        text = text.slice(0, -2);\r\n                        var d = new Date(data[i].ValidTime);\r\n                        d.setHours(0,0,0,0);\r\n                        dateO.setHours(0,0,0,0);\r\n                        var num = Math.floor((d.getTime() - this.props.date) / 86400000);\r\n                        if(num < 0){\r\n                            num++;\r\n                        }\r\n                        if(last === num){\r\n                            num++;\r\n                        }\r\n                        last = num;\r\n                        if(!this.props.date){\r\n                            num = \"-\"\r\n                        }\r\n                        arr.push(\r\n                            <tr key={i}>\r\n                                {(data[i].ValidTime < this.props.date || !this.props.date) ? <td className=\"before\">{num}</td> : <td className=\"after\">{num}</td>}\r\n                                {(data[i].ValidTime < this.props.date || !this.props.date) ? <td className=\"before\">{dateStr}</td> : <td className=\"after\">{dateStr}</td>}\r\n                                {(data[i].ValidTime < this.props.date || !this.props.date) ? <td className=\"before\">{data[i][\"Answers\"][0][\"AnswerID\"][0]}</td> : <td className=\"after\">{data[i][\"Answers\"][0][\"AnswerID\"][0]}</td>}\r\n                                {(data[i].ValidTime < this.props.date || !this.props.date) ? <td className=\"before\">{text}</td> : <td className=\"after\">{text}</td>}\r\n                            </tr>\r\n                        )\r\n                        var line = {};\r\n                        line[\"מספר יום\"] = num;\r\n                        line[\"תאריך\"] = dateStr;\r\n                        line[\"רמת כאב\"] = data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                        line[\"תרופה\"] = text;\r\n                        exportCSV.push(line);\r\n                    }\r\n                    else if(this.props.weekly){\r\n                        date = new Date(data[i].ValidTime)\r\n                        var dayOfWeek = date.getDay();\r\n                        var sunday = new Date(data[i].ValidTime - dayOfWeek * 86400000);\r\n                        var saturday = new Date(sunday.getTime() + 518400000);\r\n                        dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                                avgO[\"before\"][\"counter\"]++;\r\n                                for(j = 0; j < data[i][\"Answers\"][1][\"AnswerID\"].length; j++){\r\n                                    if(!avgO[\"before\"][\"text\"].includes(\"לא נטלתי\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 0){\r\n                                        avgO[\"before\"][\"text\"] += \"לא נטלתי, \"\r\n                                    }\r\n                                    else if(!avgO[\"before\"][\"text\"].includes(\"בסיסית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 1){\r\n                                        avgO[\"before\"][\"text\"] += \"בסיסית, \"\r\n                                    }\r\n                                    else if(!avgO[\"before\"][\"text\"].includes(\"מתקדמת\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 2){\r\n                                        avgO[\"before\"][\"text\"] += \"מתקדמת, \"\r\n                                    }\r\n                                    else if(!avgO[\"before\"][\"text\"].includes(\"נרקוטית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 3){\r\n                                        avgO[\"before\"][\"text\"] += \"נרקוטית, \"\r\n                                    }\r\n                                }\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                                avgO[\"after\"][\"counter\"]++;\r\n                                for(j = 0; j < data[i][\"Answers\"][1][\"AnswerID\"].length; j++){\r\n                                    if(!avgO[\"after\"][\"text\"].includes(\"לא נטלתי\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 0){\r\n                                        avgO[\"after\"][\"text\"] += \"לא נטלתי, \"\r\n                                    }\r\n                                    else if(!avgO[\"after\"][\"text\"].includes(\"בסיסית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 1){\r\n                                        avgO[\"after\"][\"text\"] += \"בסיסית, \"\r\n                                    }\r\n                                    else if(!avgO[\"after\"][\"text\"].includes(\"מתקדמת\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 2){\r\n                                        avgO[\"after\"][\"text\"] += \"מתקדמת, \"\r\n                                    }\r\n                                    else if(!avgO[\"after\"][\"text\"].includes(\"נרקוטית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 3){\r\n                                        avgO[\"after\"][\"text\"] += \"נרקוטית, \"\r\n                                    }\r\n                                }\r\n                            }\r\n                            if(!week){\r\n                                dates.push(data[i].ValidTime);\r\n                                week = true;\r\n                            }\r\n                            continue;\r\n                        }\r\n                        if(table[dateStr] == null){\r\n                            table[dateStr] = {};\r\n                            table[dateStr][\"sum\"] = 0;\r\n                            table[dateStr][\"counter\"] = 0;\r\n                            table[dateStr][\"text\"] = \"\";\r\n                            dates.push(data[i].ValidTime);\r\n                        }\r\n                        table[dateStr][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                        table[dateStr][\"counter\"]++;\r\n                        for(j = 0 ; j < data[i][\"Answers\"][1][\"AnswerID\"].length; j++){\r\n                            if(!table[dateStr][\"text\"].includes(\"לא נטלתי\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 0){\r\n                                table[dateStr][\"text\"] += \"לא נטלתי, \"\r\n                            }\r\n                            else if(!table[dateStr][\"text\"].includes(\"בסיסית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 1){\r\n                                table[dateStr][\"text\"] += \"בסיסית, \"\r\n                            }\r\n                            else if(!table[dateStr][\"text\"].includes(\"מתקדמת\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 2){\r\n                                table[dateStr][\"text\"] += \"מתקדמת, \"\r\n                            }\r\n                            else if(!table[dateStr][\"text\"].includes(\"נרקוטית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 3){\r\n                                table[dateStr][\"text\"] += \"נרקוטית, \"\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n                    else if(this.props.monthly){\r\n                        date = new Date(data[i].ValidTime)\r\n                        dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                                avgO[\"before\"][\"counter\"]++;\r\n                                for(j = 0; j < data[i][\"Answers\"][1][\"AnswerID\"].length; j++){\r\n                                    if(!avgO[\"before\"][\"text\"].includes(\"לא נטלתי\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 0){\r\n                                        avgO[\"before\"][\"text\"] += \"לא נטלתי, \"\r\n                                    }\r\n                                    else if(!avgO[\"before\"][\"text\"].includes(\"בסיסית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 1){\r\n                                        avgO[\"before\"][\"text\"] += \"בסיסית, \"\r\n                                    }\r\n                                    else if(!avgO[\"before\"][\"text\"].includes(\"מתקדמת\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 2){\r\n                                        avgO[\"before\"][\"text\"] += \"מתקדמת, \"\r\n                                    }\r\n                                    else if(!avgO[\"before\"][\"text\"].includes(\"נרקוטית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 3){\r\n                                        avgO[\"before\"][\"text\"] += \"נרקוטית, \"\r\n                                    }\r\n                                }\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                                avgO[\"after\"][\"counter\"]++;\r\n                                for(j = 0; j < data[i][\"Answers\"][1][\"AnswerID\"].length; j++){\r\n                                    if(!avgO[\"after\"][\"text\"].includes(\"לא נטלתי\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 0){\r\n                                        avgO[\"after\"][\"text\"] += \"לא נטלתי, \"\r\n                                    }\r\n                                    else if(!avgO[\"after\"][\"text\"].includes(\"בסיסית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 1){\r\n                                        avgO[\"after\"][\"text\"] += \"בסיסית, \"\r\n                                    }\r\n                                    else if(!avgO[\"after\"][\"text\"].includes(\"מתקדמת\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 2){\r\n                                        avgO[\"after\"][\"text\"] += \"מתקדמת, \"\r\n                                    }\r\n                                    else if(!avgO[\"after\"][\"text\"].includes(\"נרקוטית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 3){\r\n                                        avgO[\"after\"][\"text\"] += \"נרקוטית, \"\r\n                                    }\r\n                                }\r\n                            }\r\n                            if(!week){\r\n                                dates.push(data[i].ValidTime);\r\n                                week = true;\r\n                            }\r\n                            continue;\r\n                        }\r\n                        if(table[dateStr] == null){\r\n                            table[dateStr] = {};\r\n                            table[dateStr][\"sum\"] = 0;\r\n                            table[dateStr][\"counter\"] = 0;\r\n                            table[dateStr][\"text\"] = \"\";\r\n                            dates.push(data[i].ValidTime);\r\n                        }\r\n                        table[dateStr][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                        table[dateStr][\"counter\"]++;\r\n                        for(j = 0 ; j < data[i][\"Answers\"][1][\"AnswerID\"].length; j++){\r\n                            if(!table[dateStr][\"text\"].includes(\"לא נטלתי\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 0){\r\n                                table[dateStr][\"text\"] += \"לא נטלתי, \"\r\n                            }\r\n                            else if(!table[dateStr][\"text\"].includes(\"בסיסית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 1){\r\n                                table[dateStr][\"text\"] += \"בסיסית, \"\r\n                            }\r\n                            else if(!table[dateStr][\"text\"].includes(\"מתקדמת\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 2){\r\n                                table[dateStr][\"text\"] += \"מתקדמת, \"\r\n                            }\r\n                            else if(!table[dateStr][\"text\"].includes(\"נרקוטית\") && data[i][\"Answers\"][1][\"AnswerID\"][j] === 3){\r\n                                table[dateStr][\"text\"] += \"נרקוטית, \"\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                dates = dates.sort();\r\n                if(this.props.weekly || this.props.monthly){\r\n                    for (let [key,] of Object.entries(table)) {\r\n                        table[key][\"Data\"] = table[key][\"sum\"] / table[key][\"counter\"];\r\n                    }\r\n                    var o = new Date(this.props.date);\r\n                    for(i = 0; i < dates.length; i++){\r\n                        date = new Date(dates[i]);\r\n                        d = new Date(dates[i]);\r\n                        d.setHours(0,0,0,0);\r\n                        if(this.props.weekly){\r\n                            var sundayO = new Date(o.getTime() - o.getDay() * 86400000);\r\n                            sundayO.setHours(0,0,0,0);\r\n                            dayOfWeek = date.getDay();\r\n                            sunday = new Date(date.getTime() - dayOfWeek * 86400000);\r\n                            sunday.setHours(0,0,0,0);\r\n                            saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                            num = Math.floor((sunday.getTime() - sundayO.getTime()) / 604800000);\r\n                        }\r\n                        else{\r\n                            var firstDay = new Date(d.getFullYear(), d.getMonth(), 1);\r\n                            var firstDayO = new Date(o.getFullYear(), o.getMonth(), 1);\r\n                            num = Math.floor((firstDay.getTime() - firstDayO.getTime()) / 2419200000);\r\n                            if(num < 0){\r\n                                num++;\r\n                            }\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        }\r\n                        if(last === num){\r\n                            num++;\r\n                        }\r\n                        last = num;\r\n                        if(!this.props.date){\r\n                            num = \"-\"\r\n                        }\r\n                        if(dateStr === dateOStr){\r\n                            avgO[\"before\"][\"text\"] =  avgO[\"before\"][\"text\"].slice(0, -2);\r\n                            avgO[\"after\"][\"text\"] =  avgO[\"after\"][\"text\"].slice(0, -2);\r\n                            arr.push(\r\n                                <tr key={dateStr + \"before\"}>\r\n                                    <td className=\"before\">{num}</td>\r\n                                    <td className=\"before\">{dateStr}</td>\r\n                                    {avgO[\"before\"][\"counter\"] ? <td className=\"before\">{(avgO[\"before\"][\"sum\"] / avgO[\"before\"][\"counter\"]).toFixed(2)}</td> : <td className=\"before\">-</td>}\r\n                                    {avgO[\"before\"][\"counter\"] ? <td className=\"before\">{avgO[\"before\"][\"text\"]}</td> : <td className=\"before\">-</td>}\r\n                                </tr>\r\n                            )\r\n                            arr.push(\r\n                                <tr key={dateStr + \"after\"}>\r\n                                    <td className=\"after\">{num}</td>\r\n                                    <td className=\"after\">{dateStr}</td>\r\n                                    {avgO[\"after\"][\"counter\"] ? <td className=\"after\">{(avgO[\"after\"][\"sum\"] / avgO[\"after\"][\"counter\"]).toFixed(2)}</td> : <td className=\"after\">-</td>}\r\n                                    {avgO[\"after\"][\"counter\"] ? <td className=\"after\">{avgO[\"after\"][\"text\"]}</td> : <td className=\"after\">-</td>}\r\n                                </tr>\r\n                            )\r\n                            var z = 0;\r\n                            line = {};\r\n                            if(this.props.date){\r\n                                if(this.props.weekly){\r\n                                    line[\"מספר שבוע\"] = z;\r\n                                }\r\n                                else{\r\n                                    line[\"מספר חודש\"] = z;\r\n                                }\r\n                            }\r\n                            line[\"תאריך\"] = dateStr;\r\n                            line[\"רמת כאב\"] = (avgO[\"before\"][\"sum\"] / avgO[\"before\"][\"counter\"]).toFixed(2);\r\n                            line[\"תרופות שהיו בשימוש\"] = avgO[\"before\"][\"text\"];\r\n                            exportCSV.push(line);\r\n                            line = {};\r\n                            if(this.props.date){\r\n                                if(this.props.weekly){\r\n                                    line[\"מספר שבוע\"] = z;\r\n                                }\r\n                                else{\r\n                                    line[\"מספר חודש\"] = z;\r\n                                }\r\n                            }\r\n                            line[\"תאריך\"] = dateStr;\r\n                            line[\"רמת כאב\"] = (avgO[\"after\"][\"sum\"] / avgO[\"after\"][\"counter\"]).toFixed(2);\r\n                            line[\"תרופות שהיו בשימוש\"] = avgO[\"after\"][\"text\"];\r\n                            exportCSV.push(line);\r\n                            continue;\r\n                        }\r\n                        table[dateStr][\"text\"] =  table[dateStr][\"text\"].slice(0, -2);\r\n                        arr.push(\r\n                            <tr key={dateStr}>\r\n                                 {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{num}</td> : <td className=\"after\">{num}</td>}\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{dateStr}</td> : <td className=\"after\">{dateStr}</td>}\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{table[dateStr][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{table[dateStr][\"Data\"].toFixed(2)}</td>}\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{table[dateStr][\"text\"]}</td> : <td className=\"after\">{table[dateStr][\"text\"]}</td>}\r\n                            </tr>\r\n                        )\r\n                        line = {};\r\n                        if(this.props.date){\r\n                            if(this.props.weekly){\r\n                                line[\"מספר שבוע\"] = num;\r\n                            }\r\n                            else{\r\n                                line[\"מספר חודש\"] = num;\r\n                            }\r\n                        }\r\n                        line[\"תאריך\"] = dateStr;\r\n                        line[\"רמת כאב\"] = table[dateStr];\r\n                        if(this.props.showDaily){\r\n                            line[\"תרופה\"] = text;\r\n                        }\r\n                        else{\r\n                            line[\"תרופות שהיו בשימוש\"] =  table[dateStr][\"text\"];\r\n                        }\r\n                        exportCSV.push(line);\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                noData = true;\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                {this.props.ready ? <div>{noData ? <h4>לא קיים מידע על המשתמש</h4> :\r\n                    <div className=\"center\">\r\n                    <table style={{width: \"100%\"}} id=\"daily\" className=\"tabels\">\r\n                        <tbody>\r\n                            <tr>\r\n                                { this.props.showDaily ? <th>מספר יום</th> : null}\r\n                                { this.props.weekly ? <th>מספר שבוע</th> : null} \r\n                                { this.props.monthly ? <th>מספר חודש</th> : null}\r\n                                <th>תאריך</th>\r\n                                <th>רמת כאב</th>\r\n                                {this.props.showDaily ? <th>תרופה</th> : <th>תרופות שהיו בשימוש</th>}\r\n                            </tr>\r\n                            {arr}\r\n                        </tbody>\r\n                    </table>\r\n                    <ExportCSV csvData={exportCSV} fileName={this.props.name + \" שאלון יומי\"}/>\r\n                    </div>}  </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableAns","import React, {Component} from \"react\"\r\n//import LineChart from 'react-linechart';\r\nimport {LineChart} from 'react-chartkick'\r\nimport 'chart.js'\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.sort_by_key = function(array, key)\r\n        {\r\n         return array.sort(function(a, b)\r\n         {\r\n          var x = a[key]; var y = b[key];\r\n          return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n         });\r\n        }\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({[name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.ready){\r\n            var noData = false;\r\n            if(this.props.data && this.props.data.length > 0){\r\n                var data = this.sort_by_key(this.props.data, \"Timestamp\")\r\n                var points = {};\r\n                var min  = 0, week = false;\r\n                var oDay = new Date(this.props.date);\r\n                var line = {};\r\n                var table = {};\r\n                var dates = [];\r\n                var dateO, dateOStr;\r\n                if(this.props.weekly){\r\n                    dateO = new Date(this.props.date);\r\n                    var day = dateO.getDay();\r\n                    var sun = new Date(this.props.date - day * 86400000);\r\n                    var sat = new Date(sun.getTime() + 518400000);\r\n                    dateOStr = sun.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + sat.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                }\r\n                if(this.props.monthly){\r\n                    dateO = new Date(this.props.date);\r\n                    dateOStr = dateO.toLocaleDateString('en-GB', {month: 'short'});\r\n                }\r\n                var avgO = {};\r\n                avgO[\"before\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"]= {sum: 0, counter: 0};\r\n                for(var i = 0; i < data.length; i++){\r\n                    if(data[i].Data < 0){\r\n                        min = -1;\r\n                    }\r\n                    if(this.props.showDaily){\r\n                        var date = new Date(data[i].ValidTime)\r\n                        var dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short', year:\"numeric\"}).replace(/ /g, '-')\r\n                        if(date <= oDay){\r\n                            points[dateStr] = data[i].Data.toFixed(2);\r\n                        }\r\n                        if(date >= oDay){\r\n                            line[dateStr] = data[i].Data.toFixed(2)\r\n                        }\r\n                    }\r\n                    else if(this.props.weekly){\r\n                        date = new Date(data[i].ValidTime);\r\n                        var dayOfWeek = date.getDay();\r\n                        var sunday = new Date(data[i].ValidTime - dayOfWeek * 86400000);\r\n                        var saturday = new Date(sunday.getTime() + 518400000);\r\n                        dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"sum\"] += data[i].Data;\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"sum\"] += data[i].Data; \r\n                            }\r\n                            if(!week){\r\n                                week = true;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                        }\r\n                        else{ \r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                table[dateStr][\"counter\"] = 0;\r\n                                table[dateStr][\"sum\"] = 0;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                            table[dateStr][\"sum\"] += data[i].Data;\r\n                            table[dateStr][\"counter\"]++;\r\n                        }\r\n                    }\r\n                    else if(this.props.monthly){\r\n                        date = new Date(data[i].ValidTime);;\r\n                        dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"sum\"] += data[i].Data;\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"sum\"] += data[i].Data; \r\n                            }\r\n                            if(!week){\r\n                                week = true;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                table[dateStr][\"counter\"] = 0;\r\n                                table[dateStr][\"sum\"] = 0;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                            table[dateStr][\"sum\"] += data[i].Data;\r\n                            table[dateStr][\"counter\"]++;\r\n                        }\r\n                    }\r\n                }\r\n                dates = dates.sort();\r\n                if(this.props.weekly || this.props.monthly){\r\n                    for (i = 0; i < dates.length; i++) {\r\n                        date = new Date(dates[i]);\r\n                        if(this.props.weekly){\r\n                            dayOfWeek = date.getDay();\r\n                            sunday = new Date(date.getTime() - dayOfWeek * 86400000);\r\n                            saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                        }\r\n                        else{\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        }\r\n                        if(dateStr === dateOStr){\r\n                            points[dateStr] = (avgO[\"before\"][\"sum\"] /  avgO[\"before\"][\"counter\"]).toFixed(2);\r\n                            line[dateStr] = (avgO[\"after\"][\"sum\"] /  avgO[\"after\"][\"counter\"]).toFixed(2);\r\n                            continue;\r\n                        }\r\n                        if(date <= oDay){\r\n                            points[dateStr] = (table[dateStr][\"sum\"] /  table[dateStr][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(date >= oDay){\r\n                            line[dateStr] = (table[dateStr][\"sum\"] /  table[dateStr][\"counter\"]).toFixed(2);\r\n                        }\r\n                    }\r\n                }\r\n                var dataX = [\r\n                    {\"name\": \"לפני הניתוח\", \"data\": points},\r\n                    {\"name\": \"אחרי הניתוח\", \"data\": line}\r\n                ];\r\n            }\r\n            else{\r\n                noData = true;\r\n            }\r\n        }\r\n\t\treturn (\r\n            <div>\r\n                {this.props.ready ? <div>\r\n                    <div className=\"App\">\r\n                        <h1>{this.props.name}</h1>\r\n                        {noData ? <h4>לא קיים מידע על המשתמש</h4> : <LineChart download={true} data={dataX} min={min} />}\r\n                    </div>\t\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Graph","import React, {Component} from \"react\"\r\nimport {ExportCSV} from \"./ExportCSV\"\r\n//import \"./TablePer.css\"\r\n\r\n\r\nclass TablePer extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({[name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n    \r\n    \r\n\r\n\r\n    render() {\r\n        require(\"./Table.css\");\r\n        if(this.props.ready){\r\n            var noData = true;\r\n            for(var  i = 0; i < this.props.data.length; i++){\r\n                if( this.props.data[i].data.length > 0 ){\r\n                    noData = false;\r\n                }\r\n            }\r\n            if(!noData){\r\n                var table = {};\r\n                var data = this.props.data;\r\n                var j, week = false;\r\n                var dates = [];\r\n                var dic = {};\r\n                var dateO, dateOStr;\r\n                var avgO = {};\r\n                avgO[\"before\"] = {\"1\": {}, \"2\": {}, \"3\": {}, \"4\": {}, \"5\": {}, \"6\": 0};\r\n                avgO[\"after\"] = {\"1\": {}, \"2\": {}, \"3\": {}, \"4\": {}, \"5\": {}, \"6\": 0};\r\n                avgO[\"before\"][\"1\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"2\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"3\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"4\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"5\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"6\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"1\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"2\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"3\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"4\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"5\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"6\"] = {sum: 0, counter: 0};\r\n                if(this.props.weekly){\r\n                    dateO = new Date(this.props.date);\r\n                    var day = dateO.getDay();\r\n                    var sun = new Date(this.props.date - day * 86400000);\r\n                    var sat = new Date(sun.getTime() + 518400000);\r\n                    dateOStr = sun.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + sat.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                }\r\n                if(this.props.monthly){\r\n                    dateO = new Date(this.props.date);\r\n                    dateOStr = dateO.toLocaleDateString('en-GB', {month: 'short'});\r\n                }\r\n                for(i = 0; i < data.length; i++){\r\n                    for(j = 0; j < data[i].data.length; j++){\r\n                        if(this.props.showDaily){\r\n                            var date = new Date(data[i].data[j].ValidTime)\r\n                            var dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/ /g, '-')\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                dates.push(data[i].data[j].ValidTime);\r\n                            }\r\n                            table[dateStr][data[i].data[j].QuestionnaireID] = data[i].data[j].Score;\r\n                            dic[data[i].data[j].QuestionnaireID] = true;\r\n                        }\r\n                        else if(this.props.weekly){\r\n                            dic[data[i].data[j].QuestionnaireID] = true;\r\n                            date = new Date(data[i].data[j].ValidTime)\r\n                            var dayOfWeek = date.getDay();\r\n                            var sunday = new Date(data[i].data[j].ValidTime - dayOfWeek * 86400000);\r\n                            var saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                            if(dateOStr === dateStr){\r\n                                if(data[i].data[j].ValidTime < this.props.date){\r\n                                    avgO[\"before\"][data[i].data[j].QuestionnaireID][\"sum\"] += data[i].data[j].Score;\r\n                                    avgO[\"before\"][data[i].data[j].QuestionnaireID][\"counter\"]++;\r\n                                }\r\n                                else{\r\n                                    avgO[\"after\"][data[i].data[j].QuestionnaireID][\"sum\"] += data[i].data[j].Score;\r\n                                    avgO[\"after\"][data[i].data[j].QuestionnaireID][\"counter\"]++;\r\n                                }\r\n                                if(!week){\r\n                                    dates.push(data[i].data[j].ValidTime);\r\n                                    week = true;\r\n                                }\r\n                                continue;\r\n                            }\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                dates.push(data[i].data[j].ValidTime);\r\n                            }\r\n                            if(table[dateStr][data[i].data[j].QuestionnaireID] == null){\r\n                                table[dateStr][data[i].data[j].QuestionnaireID] = {};\r\n                                table[dateStr][data[i].data[j].QuestionnaireID][\"sum\"] = 0;\r\n                                table[dateStr][data[i].data[j].QuestionnaireID][\"counter\"] = 0;\r\n                            }\r\n                            table[dateStr][data[i].data[j].QuestionnaireID][\"sum\"] += data[i].data[j].Score;\r\n                            table[dateStr][data[i].data[j].QuestionnaireID][\"counter\"]++;\r\n                            dic[data[i].data[j].QuestionnaireID] = true;\r\n                        }\r\n                        else if(this.props.monthly){\r\n                            dic[data[i].data[j].QuestionnaireID] = true;\r\n                            date = new Date(data[i].data[j].ValidTime)\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                            if(dateOStr === dateStr){\r\n                                if(data[i].data[j].ValidTime < this.props.date){\r\n                                    avgO[\"before\"][data[i].data[j].QuestionnaireID][\"sum\"] += data[i].data[j].Score;\r\n                                    avgO[\"before\"][data[i].data[j].QuestionnaireID][\"counter\"]++;\r\n                                }\r\n                                else{\r\n                                    avgO[\"after\"][data[i].data[j].QuestionnaireID][\"sum\"] += data[i].data[j].Score;\r\n                                    avgO[\"after\"][data[i].data[j].QuestionnaireID][\"counter\"]++;\r\n                                }\r\n                                if(!week){\r\n                                    dates.push(data[i].data[j].ValidTime);\r\n                                    week = true;\r\n                                }\r\n                                continue;\r\n                            }\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                dates.push(data[i].data[j].ValidTime);\r\n                            }\r\n                            if(table[dateStr][data[i].data[j].QuestionnaireID] == null){\r\n                                table[dateStr][data[i].data[j].QuestionnaireID] = {};\r\n                                table[dateStr][data[i].data[j].QuestionnaireID][\"sum\"] = 0;\r\n                                table[dateStr][data[i].data[j].QuestionnaireID][\"counter\"] = 0;\r\n                            }\r\n                            table[dateStr][data[i].data[j].QuestionnaireID][\"sum\"] += data[i].data[j].Score;\r\n                            table[dateStr][data[i].data[j].QuestionnaireID][\"counter\"]++;\r\n                            dic[data[i].data[j].QuestionnaireID] = true;\r\n                        }\r\n                    }\r\n                }\r\n                dates = dates.sort();\r\n                var arr = [], exportCSV = [];\r\n                if(this.props.weekly || this.props.monthly){\r\n                    for (let [key,] of Object.entries(table)) {\r\n                        for (let [key1,] of Object.entries(table[key])) {\r\n                            table[key][key1][\"Data\"] = table[key][key1][\"sum\"] / table[key][key1][\"counter\"];\r\n                        }\r\n                    }\r\n                }\r\n                var last = Math.min();\r\n                for(i = 0; i < dates.length; i++){\r\n                    var line = {};\r\n                    date = new Date(dates[i]);\r\n                    dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/ /g, '-');\r\n                    if(this.props.showDaily){\r\n                        var d = new Date(dates[i]);\r\n                        d.setHours(0,0,0,0);\r\n                        var num = Math.floor((d.getTime() - this.props.date) / 86400000);\r\n                        if(num < 0){\r\n                            num++;\r\n                        }\r\n                        if(last === num){\r\n                            num++;\r\n                        }\r\n                        last = num;\r\n                        if(!this.props.date){\r\n                            num = \"-\"\r\n                        }\r\n                        table[dateStr][\"num\"] = num;\r\n                        arr.push(\r\n                            <tr key={dateStr}>\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{num}</td> : <td className=\"after\">{num}</td>}\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{dateStr}</td> : <td className=\"after\">{dateStr}</td>}\r\n                                { dic[\"1\"] ? ((table[dateStr][\"1\"] >= 0 || table[dateStr][\"1\"] < 0) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"1\"]}</td> : <td className=\"after\">{ table[dateStr][\"1\"]}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"2\"] ? ((table[dateStr][\"2\"] >= 0 || table[dateStr][\"2\"] < 0) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"2\"]}</td> : <td className=\"after\">{ table[dateStr][\"2\"]}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"3\"] ? ((table[dateStr][\"3\"] >= 0 || table[dateStr][\"3\"] < 0) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"3\"]}</td> : <td className=\"after\">{ table[dateStr][\"3\"]}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"4\"] ? ((table[dateStr][\"4\"] >= 0 || table[dateStr][\"4\"] < 0) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"4\"]}</td> : <td className=\"after\">{ table[dateStr][\"4\"]}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"5\"] ? ((table[dateStr][\"5\"] >= 0 || table[dateStr][\"5\"] < 0) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"5\"]}</td> : <td className=\"after\">{ table[dateStr][\"5\"]}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"6\"] ? ((table[dateStr][\"6\"] >= 0 || table[dateStr][\"6\"] < 0) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"6\"]}</td> : <td className=\"after\">{ table[dateStr][\"6\"]}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                            </tr>\r\n                        );\r\n                    }\r\n                    else if(this.props.weekly || this.props.monthly){\r\n                        var o = new Date(this.props.date);\r\n                        d = new Date(dates[i]);\r\n                        d.setHours(0,0,0,0);\r\n                        if(this.props.weekly){\r\n                            var sundayO = new Date(o.getTime() - o.getDay() * 86400000);\r\n                            sundayO.setHours(0,0,0,0);\r\n                            dayOfWeek = date.getDay();\r\n                            sunday = new Date(date.getTime() - dayOfWeek * 86400000);\r\n                            sunday.setHours(0,0,0,0);\r\n                            saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \"-\" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                            num = Math.floor((sunday.getTime() - sundayO.getTime()) / 604800000);\r\n                        }\r\n                        else{\r\n                            var firstDay = new Date(d.getFullYear(), d.getMonth(), 1);\r\n                            var firstDayO = new Date(o.getFullYear(), o.getMonth(), 1);\r\n                            num = Math.floor((firstDay.getTime() - firstDayO.getTime()) / 2419200000);\r\n                            if(num < 0){\r\n                                num++;\r\n                            }\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        }\r\n                        if(last === num){\r\n                            num++;\r\n                        }\r\n                        last = num;\r\n                        if(!this.props.date){\r\n                            num = \"-\"\r\n                        }\r\n                        if(dateStr === dateOStr){\r\n                            arr.push(\r\n                                <tr key={dateStr + \"before\"}>\r\n                                    <td className=\"before\">{0}</td>\r\n                                    <td className=\"before\">{dateStr}</td>\r\n                                    { dic[\"1\"] ? (avgO[\"before\"][\"1\"][\"counter\"] ? <td className=\"before\"> {(avgO[\"before\"][\"1\"][\"sum\"] / avgO[\"before\"][\"1\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"before\"> - </td>) : null}\r\n                                    { dic[\"2\"] ? (avgO[\"before\"][\"2\"][\"counter\"] ? <td className=\"before\"> {(avgO[\"before\"][\"2\"][\"sum\"] / avgO[\"before\"][\"2\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"before\"> - </td>) : null}\r\n                                    { dic[\"3\"] ? (avgO[\"before\"][\"3\"][\"counter\"] ? <td className=\"before\"> {(avgO[\"before\"][\"3\"][\"sum\"] / avgO[\"before\"][\"3\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"before\"> - </td>) : null}\r\n                                    { dic[\"4\"] ? (avgO[\"before\"][\"4\"][\"counter\"] ? <td className=\"before\"> {(avgO[\"before\"][\"4\"][\"sum\"] / avgO[\"before\"][\"4\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"before\"> - </td>) : null}\r\n                                    { dic[\"5\"] ? (avgO[\"before\"][\"5\"][\"counter\"] ? <td className=\"before\"> {(avgO[\"before\"][\"5\"][\"sum\"] / avgO[\"before\"][\"5\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"before\"> - </td>) : null}\r\n                                    { dic[\"6\"] ? (avgO[\"before\"][\"6\"][\"counter\"] ? <td className=\"before\"> {(avgO[\"before\"][\"6\"][\"sum\"] / avgO[\"before\"][\"6\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"before\"> - </td>) : null}\r\n                                    </tr>\r\n                            )\r\n                            arr.push(\r\n                                <tr key={dateStr + \"after\"}>\r\n                                    <td className=\"after\">{0}</td>\r\n                                    <td className=\"after\">{dateStr}</td>\r\n                                    { dic[\"1\"] ? (avgO[\"after\"][\"1\"][\"counter\"] ? <td className=\"after\"> {(avgO[\"after\"][\"1\"][\"sum\"] / avgO[\"after\"][\"1\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"after\"> - </td>) : null}\r\n                                    { dic[\"2\"] ? (avgO[\"after\"][\"2\"][\"counter\"] ? <td className=\"after\"> {(avgO[\"after\"][\"2\"][\"sum\"] / avgO[\"after\"][\"2\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"after\"> - </td>) : null}\r\n                                    { dic[\"3\"] ? (avgO[\"after\"][\"3\"][\"counter\"] ? <td className=\"after\"> {(avgO[\"after\"][\"3\"][\"sum\"] / avgO[\"after\"][\"3\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"after\"> - </td>) : null}\r\n                                    { dic[\"4\"] ? (avgO[\"after\"][\"4\"][\"counter\"] ? <td className=\"after\"> {(avgO[\"after\"][\"4\"][\"sum\"] / avgO[\"after\"][\"4\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"after\"> - </td>) : null}\r\n                                    { dic[\"5\"] ? (avgO[\"after\"][\"5\"][\"counter\"] ? <td className=\"after\"> {(avgO[\"after\"][\"5\"][\"sum\"] / avgO[\"after\"][\"5\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"after\"> - </td>) : null}\r\n                                    { dic[\"6\"] ? (avgO[\"after\"][\"6\"][\"counter\"] ? <td className=\"after\"> {(avgO[\"after\"][\"6\"][\"sum\"] / avgO[\"after\"][\"6\"][\"counter\"]).toFixed(2)} </td>  : <td className=\"after\"> - </td>) : null}\r\n                                    </tr>\r\n                            )\r\n                            line = {};\r\n                            var z  = 0;\r\n                            if(this.props.date){\r\n                                if(this.props.weekly){\r\n                                    line[\"מספר שבוע\"] = z;\r\n                                }\r\n                                else{\r\n                                    line[\"מספר חודש\"] = z;\r\n                                }\r\n                            }\r\n                            line[\"תאריך\"] = dateStr;\r\n                            if(dic[\"1\"] && avgO[\"before\"][\"1\"][\"counter\"]){\r\n                                line[\"Oswestry Disability Index\"] = (avgO[\"before\"][\"1\"][\"sum\"] / avgO[\"before\"][\"1\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"2\"] && avgO[\"before\"][\"2\"][\"counter\"]){\r\n                                line[\"Neck Disability Index\"] = (avgO[\"before\"][\"2\"][\"sum\"] / avgO[\"before\"][\"2\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"3\"] && avgO[\"before\"][\"3\"][\"counter\"]){\r\n                                line[\"Lower Extremity Functional Scale\"] = (avgO[\"before\"][\"3\"][\"sum\"] / avgO[\"before\"][\"3\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"41\"] && avgO[\"before\"][\"4\"][\"counter\"]){\r\n                                line[\"Oswestry low back pain\"] = (avgO[\"before\"][\"4\"][\"sum\"] / avgO[\"before\"][\"4\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"5\"] && avgO[\"before\"][\"5\"][\"counter\"]){\r\n                                line[\"EQ-5D\"] = (avgO[\"before\"][\"5\"][\"sum\"] / avgO[\"before\"][\"5\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"6\"] && avgO[\"before\"][\"6\"][\"counter\"]){\r\n                                line[\"EQ-5D\"] = (avgO[\"before\"][\"6\"][\"sum\"] / avgO[\"before\"][\"6\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            exportCSV.push(line);\r\n                            line = {};\r\n                            if(this.props.date){\r\n                                if(this.props.weekly){\r\n                                    line[\"מספר שבוע\"] = z;\r\n                                }\r\n                                else{\r\n                                    line[\"מספר חודש\"] = z;\r\n                                }\r\n                            }\r\n                            line[\"תאריך\"] = dateStr;\r\n                            if(dic[\"1\"] && avgO[\"after\"][\"1\"][\"counter\"]){\r\n                                line[\"Oswestry Disability Index\"] = (avgO[\"after\"][\"1\"][\"sum\"] / avgO[\"after\"][\"1\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"2\"] && avgO[\"after\"][\"2\"][\"counter\"]){\r\n                                line[\"Neck Disability Index\"] = (avgO[\"after\"][\"2\"][\"sum\"] / avgO[\"after\"][\"2\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"3\"] && avgO[\"after\"][\"3\"][\"counter\"]){\r\n                                line[\"Lower Extremity Functional Scale\"] = (avgO[\"after\"][\"3\"][\"sum\"] / avgO[\"after\"][\"3\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"41\"] && avgO[\"after\"][\"4\"][\"counter\"]){\r\n                                line[\"Oswestry low back pain\"] = (avgO[\"after\"][\"4\"][\"sum\"] / avgO[\"after\"][\"4\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"5\"] && avgO[\"after\"][\"5\"][\"counter\"]){\r\n                                line[\"EQ-5D\"] = (avgO[\"after\"][\"5\"][\"sum\"] / avgO[\"after\"][\"5\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            if(dic[\"6\"] && avgO[\"after\"][\"6\"][\"counter\"]){\r\n                                line[\"EQ-5D\"] = (avgO[\"after\"][\"6\"][\"sum\"] / avgO[\"after\"][\"6\"][\"counter\"]).toFixed(2);\r\n                            }\r\n                            exportCSV.push(line);\r\n                            continue;\r\n                        }\r\n                        arr.push(\r\n                            <tr key={dateStr}>\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{num}</td> : <td className=\"after\">{num}</td>}\r\n                                {(dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{dateStr}</td> : <td className=\"after\">{dateStr}</td>}\r\n                                { dic[\"1\"] ? ((table[dateStr][\"1\"] && (table[dateStr][\"1\"][\"Data\"] >= 0 || table[dateStr][\"1\"][\"Data\"] < 0)) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"1\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"1\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"2\"] ? ((table[dateStr][\"2\"] && (table[dateStr][\"2\"][\"Data\"] >= 0 || table[dateStr][\"2\"][\"Data\"] < 0)) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"2\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"2\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"3\"] ? ((table[dateStr][\"3\"] && (table[dateStr][\"3\"][\"Data\"] >= 0 || table[dateStr][\"3\"][\"Data\"] < 0)) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"3\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"3\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"4\"] ? ((table[dateStr][\"4\"] && (table[dateStr][\"4\"][\"Data\"] >= 0 || table[dateStr][\"4\"][\"Data\"] < 0)) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"4\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"4\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"5\"] ? ((table[dateStr][\"5\"] && (table[dateStr][\"5\"][\"Data\"] >= 0 || table[dateStr][\"5\"][\"Data\"] < 0)) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"5\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"5\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                                { dic[\"6\"] ? ((table[dateStr][\"6\"] && (table[dateStr][\"6\"][\"Data\"] >= 0 || table[dateStr][\"6\"][\"Data\"] < 0)) ? ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">{ table[dateStr][\"6\"][\"Data\"].toFixed(2)}</td> : <td className=\"after\">{ table[dateStr][\"6\"][\"Data\"].toFixed(2)}</td>) : ((dates[i] < this.props.date || !this.props.date) ? <td className=\"before\">-</td> : <td className=\"after\">-</td>)) : null }\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    line = {};\r\n                    if(this.props.date){\r\n                        if(this.props.showDaily){\r\n                            line[\"מספר יום\"] = num;\r\n                        }\r\n                        else if(this.props.weekly){\r\n                            line[\"מספר שבוע\"] = num;\r\n                        }\r\n                        else{\r\n                            line[\"מספר חודש\"] = num;\r\n                        }\r\n                    }\r\n                    line[\"תאריך\"] = dateStr;\r\n                    if(this.props.showDaily){\r\n                        if(dic[\"1\"] && (table[dateStr][\"1\"] > 0 || table[dateStr][\"1\"] <= 0)){\r\n                            line[\"Oswestry Disability Index\"] = table[dateStr][\"1\"];\r\n                        }\r\n                        if(dic[\"2\"] && (table[dateStr][\"2\"] > 0 || table[dateStr][\"2\"] <= 0)){\r\n                            line[\"Neck Disability Index\"] = table[dateStr][\"2\"];\r\n                        }\r\n                        if(dic[\"3\"] && (table[dateStr][\"3\"] > 0 || table[dateStr][\"3\"] <= 0)){\r\n                            line[\"Lower Extremity Functional Scale\"] = table[dateStr][\"3\"];\r\n                        }\r\n                        if(dic[\"4\"] && (table[dateStr][\"4\"] > 0 || table[dateStr][\"4\"] <= 0)){\r\n                            line[\"Oswestry low back pain\"] = table[dateStr][\"4\"];\r\n                        }\r\n                        if(dic[\"5\"] && (table[dateStr][\"5\"] > 0 || table[dateStr][\"5\"] <= 0)){\r\n                            line[\"EQ-5D\"] = table[dateStr][\"5\"];\r\n                        }\r\n                        if(dic[\"6\"] && (table[dateStr][\"6\"] > 0 || table[dateStr][\"6\"] <= 0)){\r\n                            line[\"EQ-5D scale\"] = table[dateStr][\"6\"];\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(dic[\"1\"] && table[dateStr][\"1\"] && table[dateStr][\"1\"][\"counter\"]){\r\n                            line[\"Oswestry Disability Index\"] = table[dateStr][\"1\"][\"Data\"].toFixed(2);\r\n                        }\r\n                        if(dic[\"2\"] && table[dateStr][\"2\"] && table[dateStr][\"2\"][\"counter\"]){\r\n                            line[\"Neck Disability Index\"] = table[dateStr][\"2\"][\"Data\"].toFixed(2);\r\n                        }\r\n                        if(dic[\"3\"] && table[dateStr][\"3\"] && table[dateStr][\"3\"][\"counter\"]){\r\n                            line[\"Lower Extremity Functional Scale\"] = table[dateStr][\"3\"][\"Data\"].toFixed(2);\r\n                        }\r\n                        if(dic[\"4\"] && table[dateStr][\"4\"] && table[dateStr][\"4\"][\"counter\"]){\r\n                            line[\"Oswestry low back pain\"] = table[dateStr][\"4\"][\"Data\"].toFixed(2);\r\n                        }\r\n                        if(dic[\"5\"] && table[dateStr][\"5\"] && table[dateStr][\"5\"][\"counter\"]){\r\n                            line[\"EQ-5D\"] = table[dateStr][\"5\"][\"Data\"].toFixed(2);\r\n                        }\r\n                        if(dic[\"6\"] && table[dateStr][\"6\"] && table[dateStr][\"6\"][\"counter\"]){\r\n                            line[\"EQ-5D scale\"] = table[dateStr][\"6\"][\"Data\"].toFixed(2);\r\n                        }\r\n                    }\r\n                    exportCSV.push(line);\r\n\r\n                }\r\n            }\r\n            else{\r\n                noData = true;\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                {this.props.ready ?  <div>{noData ? <h4>לא קיים מידע על המשתמש</h4> :\r\n                    <div>\r\n                        <table style={{width: \"100%\"}} id=\"per\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    { this.props.showDaily ? <th>מספר יום</th> : null}\r\n                                    { this.props.weekly ? <th>מספר שבוע</th> : null} \r\n                                    { this.props.monthly ? <th>מספר חודש</th> : null}  \r\n                                    { this.props.data.length > 0 ? <th>תאריך</th> : null}\r\n                                    { dic[\"1\"] ? <th>Oswestry Disability Index</th> : null }\r\n                                    { dic[\"2\"] ? <th>Neck Disability Index</th> : null }\r\n                                    { dic[\"3\"] ? <th>Lower Extremity Functional Scale</th> : null }\r\n                                    { dic[\"4\"] ? <th>Oswestry low back pain</th> : null }\r\n                                    { dic[\"5\"] ? <th>EQ-5D</th> : null }\r\n                                    { dic[\"6\"] ? <th>EQ-5D scale</th> : null }\r\n                                </tr>\r\n                                {arr}\r\n                            </tbody>\r\n                        </table>\r\n                        <ExportCSV csvData={exportCSV} fileName={this.props.name + \" שאלונים תקופתיים\"}/>\r\n                    </div>}</div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TablePer","import React, {Component} from \"react\"\r\n//import LineChart from 'react-linechart';\r\nimport {LineChart} from 'react-chartkick'\r\nimport 'chart.js'\r\n\r\nclass SleepGraph extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.sort_by_key = function(array, key)\r\n        {\r\n         return array.sort(function(a, b)\r\n         {\r\n          var x = a[key]; var y = b[key];\r\n          return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n         });\r\n        }\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({[name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        if(this.props.ready){\r\n            var noData = false;\r\n            if(this.props.data && this.props.data.length > 0){\r\n                var data = this.sort_by_key(this.props.data, \"ValidTime\")\r\n                var pointsD = {}, pointsL = {}, pointsT = {};\r\n                var oDay = new Date(this.props.date);\r\n                var lineD = {}, lineL = {}, lineT = {};\r\n                var table = {};\r\n                var dates = [];\r\n                var dateO, dateOStr, week = false;\r\n                if(this.props.weekly){\r\n                    dateO = new Date(this.props.date);\r\n                    var day = dateO.getDay();\r\n                    var sun = new Date(this.props.date - day * 86400000);\r\n                    var sat = new Date(sun.getTime() + 518400000);\r\n                    dateOStr = sun.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + sat.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                }\r\n                if(this.props.monthly){\r\n                    dateO = new Date(this.props.date);\r\n                    dateOStr = dateO.toLocaleDateString('en-GB', {month: 'short'});\r\n                }\r\n                var avgO = {};\r\n                avgO[\"before\"] = {light: {}, deep: {}, total: {}};\r\n                avgO[\"after\"] = {light: {}, deep: {}, total: {}};\r\n                avgO[\"before\"][\"light\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"deep\"] = {sum: 0, counter: 0};\r\n                avgO[\"before\"][\"total\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"total\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"deep\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"][\"light\"] = {sum: 0, counter: 0};\r\n                for(var i = 0; i < data.length; i++){\r\n                    var date = new Date(data[i].ValidTime);\r\n                    var deep = 0, light = 0, total = 0, firstTime;\r\n                    for(var k = 0; k < data[i][\"Data\"].length; k++){\r\n                        if(k === 0){\r\n                            firstTime = data[i][\"Data\"][k][\"StartTime\"];\r\n                        }\r\n                        else if( firstTime === data[i][\"Data\"][k][\"StartTime\"]){\r\n                            break;\r\n                        }\r\n                        var time = data[i][\"Data\"][k][\"EndTime\"] - data[i][\"Data\"][k][\"StartTime\"];\r\n                        time = time / 3600000;\r\n                        if(data[i][\"Data\"][k][\"State\"] === \"Light sleep\"){\r\n                            light = light + time;\r\n                        }\r\n                        else{\r\n                            deep = deep + time;\r\n                        }\r\n                        total = total + time;\r\n                    }\r\n                    if(this.props.showDaily){\r\n                        var dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/ /g, '-');\r\n                        if(date <= oDay){\r\n                            pointsD[dateStr] = deep.toFixed(2);\r\n                            pointsL[dateStr] = light.toFixed(2);\r\n                            pointsT[dateStr] = total.toFixed(2);\r\n                        }\r\n                        if(date >= oDay){\r\n                            lineD[dateStr] = deep.toFixed(2);\r\n                            lineL[dateStr] = light.toFixed(2);\r\n                            lineT[dateStr] = total.toFixed(2);\r\n                        }\r\n                    }\r\n                    else if(this.props.weekly){\r\n                        date = new Date(data[i].ValidTime);\r\n                        var dayOfWeek = date.getDay();\r\n                        var sunday = new Date(data[i].ValidTime - dayOfWeek * 86400000);\r\n                        var saturday = new Date(sunday.getTime() + 518400000);\r\n                        dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"light\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"light\"][\"sum\"] += light;\r\n                                avgO[\"before\"][\"deep\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"deep\"][\"sum\"] += deep;\r\n                                avgO[\"before\"][\"total\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"total\"][\"sum\"] += total;\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"light\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"light\"][\"sum\"] += light;\r\n                                avgO[\"after\"][\"deep\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"deep\"][\"sum\"] += deep;\r\n                                avgO[\"after\"][\"total\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"total\"][\"sum\"] += total;\r\n                            }\r\n                            if(!week){\r\n                                week = true;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                table[dateStr][\"light\"] = {};\r\n                                table[dateStr][\"deep\"] = {};\r\n                                table[dateStr][\"total\"] = {};\r\n                                table[dateStr][\"light\"][\"counter\"] = 0;\r\n                                table[dateStr][\"light\"][\"sum\"] = 0;\r\n                                table[dateStr][\"deep\"][\"counter\"] = 0;\r\n                                table[dateStr][\"deep\"][\"sum\"] = 0;\r\n                                table[dateStr][\"total\"][\"counter\"] = 0;\r\n                                table[dateStr][\"total\"][\"sum\"] = 0;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                            table[dateStr][\"light\"][\"counter\"]++;\r\n                            table[dateStr][\"light\"][\"sum\"] += light;\r\n                            table[dateStr][\"deep\"][\"counter\"]++;\r\n                            table[dateStr][\"deep\"][\"sum\"] += deep;\r\n                            table[dateStr][\"total\"][\"counter\"]++;\r\n                            table[dateStr][\"total\"][\"sum\"] += total;\r\n                        }\r\n                    }\r\n                    else if(this.props.monthly){\r\n                        date = new Date(data[i].ValidTime);;\r\n                        dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"light\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"light\"][\"sum\"] += light;\r\n                                avgO[\"before\"][\"deep\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"deep\"][\"sum\"] += deep;\r\n                                avgO[\"before\"][\"total\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"total\"][\"sum\"] += total;\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"light\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"light\"][\"sum\"] += light;\r\n                                avgO[\"after\"][\"deep\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"deep\"][\"sum\"] += deep;\r\n                                avgO[\"after\"][\"total\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"total\"][\"sum\"] += total;\r\n                            }\r\n                            if(!week){\r\n                                week = true;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                table[dateStr][\"light\"] = {};\r\n                                table[dateStr][\"deep\"] = {};\r\n                                table[dateStr][\"total\"] = {};\r\n                                table[dateStr][\"light\"][\"counter\"] = 0;\r\n                                table[dateStr][\"light\"][\"sum\"] = 0;\r\n                                table[dateStr][\"deep\"][\"counter\"] = 0;\r\n                                table[dateStr][\"deep\"][\"sum\"] = 0;\r\n                                table[dateStr][\"total\"][\"counter\"] = 0;\r\n                                table[dateStr][\"total\"][\"sum\"] = 0;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                            table[dateStr][\"light\"][\"counter\"]++;\r\n                            table[dateStr][\"light\"][\"sum\"] += light;\r\n                            table[dateStr][\"deep\"][\"counter\"]++;\r\n                            table[dateStr][\"deep\"][\"sum\"] += deep;\r\n                            table[dateStr][\"total\"][\"counter\"]++;\r\n                            table[dateStr][\"total\"][\"sum\"] += total;\r\n                        }\r\n                    }\r\n                }\r\n                dates = dates.sort();\r\n                if(this.props.weekly || this.props.monthly){\r\n                    for (i = 0; i < dates.length; i++) {\r\n                        date = new Date(dates[i]);\r\n                        if(this.props.weekly){\r\n                            dayOfWeek = date.getDay();\r\n                            sunday = new Date(date.getTime() - dayOfWeek * 86400000);\r\n                            saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                        }\r\n                        else{\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        }\r\n                        if(dateStr === dateOStr){\r\n                            pointsD[dateStr] = (avgO[\"before\"][\"deep\"][\"sum\"] /  avgO[\"before\"][\"deep\"][\"counter\"]).toFixed(2);\r\n                            pointsL[dateStr] = (avgO[\"before\"][\"light\"][\"sum\"] /  avgO[\"before\"][\"light\"][\"counter\"]).toFixed(2);\r\n                            pointsT[dateStr] = (avgO[\"before\"][\"total\"][\"sum\"] /  avgO[\"before\"][\"total\"][\"counter\"]).toFixed(2);\r\n                            lineD[dateStr] = (avgO[\"after\"][\"deep\"][\"sum\"] /  avgO[\"after\"][\"deep\"][\"counter\"]).toFixed(2);\r\n                            lineL[dateStr] = (avgO[\"after\"][\"light\"][\"sum\"] /  avgO[\"after\"][\"light\"][\"counter\"]).toFixed(2);\r\n                            lineT[dateStr] = (avgO[\"after\"][\"total\"][\"sum\"] /  avgO[\"after\"][\"total\"][\"counter\"]).toFixed(2);\r\n                            continue;\r\n                        }\r\n                        if(date <= oDay){\r\n                            pointsD[dateStr] = (table[dateStr][\"deep\"][\"sum\"] /  table[dateStr][\"deep\"][\"counter\"]).toFixed(2);\r\n                            pointsL[dateStr] = (table[dateStr][\"light\"][\"sum\"] /  table[dateStr][\"light\"][\"counter\"]).toFixed(2);\r\n                            pointsT[dateStr] = (table[dateStr][\"total\"][\"sum\"] /  table[dateStr][\"total\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(date >= oDay){\r\n                            lineD[dateStr] = (table[dateStr][\"deep\"][\"sum\"] /  table[dateStr][\"deep\"][\"counter\"]).toFixed(2);\r\n                            lineL[dateStr] = (table[dateStr][\"light\"][\"sum\"] /  table[dateStr][\"light\"][\"counter\"]).toFixed(2);\r\n                            lineT[dateStr] =(table[dateStr][\"total\"][\"sum\"] /  table[dateStr][\"total\"][\"counter\"]).toFixed(2);\r\n                        }\r\n                    }\r\n                }\r\n                var dataX = [\r\n                    {\"name\": \"שעות שינה קלה לפני הניתוח\", \"data\": pointsL},\r\n                    {\"name\": \"שעות שינה עמוקה לפני הניתוח\", \"data\": pointsD},\r\n                    {\"name\": \"סך כל שעות השינה לפני הניתוח\", \"data\": pointsT},\r\n                    {\"name\": \"שעות שינה קלה אחרי הניתוח\", \"data\": lineL},\r\n                    {\"name\": \"שעות שינה עמוקה אחרי הניתוח\", \"data\": lineD},\r\n                    {\"name\": \"סך כל שעות השינה אחרי הניתוח\", \"data\": lineT},\r\n                ];\r\n            }\r\n            else{\r\n                noData = true;\r\n            }\r\n        }\r\n\t\treturn (\r\n            <div>\r\n                {this.props.ready ? <div>\r\n                    <div className=\"App\">\r\n                        <h1>{this.props.name}</h1>\r\n                        {noData ? <h4>לא קיים מידע על המשתמש</h4> : <LineChart download={true} data={dataX} colors={[\"#010C6B\", \"#7C0000\", \"#0D4E00\", \"#77CCEE\" ,\"#F78989\", \"#B5FFA2\"]} min={0}/>}\r\n                    </div>\t\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SleepGraph","import React, {Component} from \"react\"\r\n//import LineChart from 'react-linechart';\r\nimport { LineChart} from 'react-chartkick'\r\nimport 'chart.js'\r\n\r\nclass GraphAns extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.sort_by_key = function(array, key)\r\n        {\r\n         return array.sort(function(a, b)\r\n         {\r\n          var x = a[key]; var y = b[key];\r\n          return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n         });\r\n        }\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({[name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        if(this.props.ready){\r\n            var noData = false;\r\n            if(this.props.data.length > 0){\r\n                var data = this.sort_by_key(this.props.data, \"ValidTime\")\r\n                var points = {};\r\n                var oDay = new Date(this.props.date);\r\n                var line = {};\r\n                var table = {};\r\n                var dates = [];\r\n                var week = false;\r\n                var dateO, dateOStr;\r\n                if(this.props.weekly){\r\n                    dateO = new Date(this.props.date);\r\n                    var day = dateO.getDay();\r\n                    var sun = new Date(this.props.date - day * 86400000);\r\n                    var sat = new Date(sun.getTime() + 518400000);\r\n                    dateOStr = sun.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + sat.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                }\r\n                if(this.props.monthly){\r\n                    dateO = new Date(this.props.date);\r\n                    dateOStr = dateO.toLocaleDateString('en-GB', {month: 'short'});\r\n                }\r\n                var avgO = {};\r\n                avgO[\"before\"] = {sum: 0, counter: 0};\r\n                avgO[\"after\"]= {sum: 0, counter: 0};\r\n                for(var i = 0; i < data.length; i++){\r\n                    if(this.props.showDaily){\r\n                        var date = new Date(data[i].ValidTime)\r\n                        var dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short', year:\"numeric\"}).replace(/ /g, '-')\r\n                        if(date <= oDay){\r\n                            points[dateStr] = data[i][\"Answers\"][0][\"AnswerID\"][0].toFixed(2);\r\n                        }\r\n                        if(date >= oDay){\r\n                            line[dateStr] = data[i][\"Answers\"][0][\"AnswerID\"][0].toFixed(2);\r\n                        }\r\n                    }\r\n                    else if(this.props.weekly){\r\n                        date = new Date(data[i].ValidTime);\r\n                        var dayOfWeek = date.getDay();\r\n                        var sunday = new Date(data[i].ValidTime - dayOfWeek * 86400000);\r\n                        var saturday = new Date(sunday.getTime() + 518400000);\r\n                        dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0]; \r\n                            }\r\n                            if(!week){\r\n                                week = true;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                table[dateStr][\"counter\"] = 0;\r\n                                table[dateStr][\"sum\"] = 0;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                            table[dateStr][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                            table[dateStr][\"counter\"]++;\r\n                        }\r\n                    }\r\n                    else if(this.props.monthly){\r\n                        date = new Date(data[i].ValidTime);;\r\n                        dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        if(dateOStr === dateStr){\r\n                            if(data[i].ValidTime < this.props.date){\r\n                                avgO[\"before\"][\"counter\"]++;\r\n                                avgO[\"before\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                            }\r\n                            else{\r\n                                avgO[\"after\"][\"counter\"]++;\r\n                                avgO[\"after\"][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0]; \r\n                            }\r\n                            if(!week){\r\n                                week = true;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(table[dateStr] == null){\r\n                                table[dateStr] = {};\r\n                                table[dateStr][\"counter\"] = 0;\r\n                                table[dateStr][\"sum\"] = 0;\r\n                                dates.push(data[i].ValidTime);\r\n                            }\r\n                            table[dateStr][\"sum\"] += data[i][\"Answers\"][0][\"AnswerID\"][0];\r\n                            table[dateStr][\"counter\"]++;\r\n                        }\r\n                    }\r\n                }\r\n                dates = dates.sort();\r\n                if(this.props.weekly || this.props.monthly){\r\n                    for (i = 0; i < dates.length; i++) {\r\n                        date = new Date(dates[i]);\r\n                        if(this.props.weekly){\r\n                            dayOfWeek = date.getDay();\r\n                            sunday = new Date(date.getTime() - dayOfWeek * 86400000);\r\n                            saturday = new Date(sunday.getTime() + 518400000);\r\n                            dateStr = sunday.toLocaleDateString('en-GB', {day: 'numeric'}) + \" - \" + saturday.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'});\r\n                        }\r\n                        else{\r\n                            dateStr = date.toLocaleDateString('en-GB', {month: 'short'});\r\n                        }\r\n                        if(dateStr === dateOStr){\r\n                            points[dateStr] = (avgO[\"before\"][\"sum\"] /  avgO[\"before\"][\"counter\"]).toFixed(2);\r\n                            line[dateStr] = (avgO[\"after\"][\"sum\"] /  avgO[\"after\"][\"counter\"]).toFixed(2);\r\n                            continue;\r\n                        }\r\n                        if(date <= oDay){\r\n                            points[dateStr] = (table[dateStr][\"sum\"] / table[dateStr][\"counter\"]).toFixed(2);\r\n                        }\r\n                        if(date >= oDay){\r\n                            line[dateStr] = (table[dateStr][\"sum\"] / table[dateStr][\"counter\"]).toFixed(2);\r\n                        }\r\n                    }\r\n                }\r\n                var dataX = [\r\n                    {\"name\": \"לפני הניתוח\", \"data\": points},\r\n                    {\"name\": \"אחרי הניתוח\", \"data\": line}\r\n                ];\r\n            }\r\n            else{\r\n                noData = true;\r\n            }\r\n        }\r\n\t\treturn (\r\n            <div>\r\n                {this.props.ready ? <div>\r\n                    <div className=\"App\">\r\n                        <h1>{this.props.name}</h1>\r\n                        {noData ? <h4>לא קיים מידע על המשתמש</h4> : <LineChart download={true} data={dataX} min={0} />}\r\n                    </div>\t\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GraphAns","import React, {Component} from \"react\"\r\nimport axios from 'axios';\r\n\r\nclass PatientData extends Component {\r\n    constructor(props) {\r\n        super()\r\n        var q2 = false, q3 = false, q4 = false, q5 = false;\r\n        for(var i = 0; i < props.user[\"Questionnaires\"].length; i++){\r\n            if(props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 1){\r\n                q2= true;\r\n            }\r\n            else if(props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 2){\r\n                q3= true;\r\n            }\r\n            else if(props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 3){\r\n                q4= true;\r\n            }\r\n            else if(props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 5){\r\n                q5= true;\r\n            }\r\n        }\r\n        this.state = {\r\n           user: props.user,\r\n           showPopup: false,\r\n           showPopupQ: false,\r\n           new_date: \"\",\r\n           Questionnaires: [],\r\n           quest1: false,\r\n           quest2: q2,\r\n           quest3: q3,\r\n           quest4: q4,\r\n           quest5: q5,\r\n           quest6: false\r\n        }\r\n        this.changeDate = this.changeDate.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.togglePopupQ = this.togglePopupQ.bind(this);\r\n        this.handleSubmitQ = this.handleSubmitQ.bind(this)\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        let date = (new Date(this.state.new_date)).getTime();\r\n        let id = this.props.user[\"UserID\"];\r\n        axios.post(' https://moda-medic.herokuapp.com/auth/usersAll/changeDateOfSurgery',\r\n        {\r\n            UserID: id,\r\n            DateOfSurgery: date,\r\n            changedSurgeryDate: true\r\n        },            \r\n        { \r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': sessionStorage.getItem(\"token\")\r\n            }\r\n        }).then(res => {\r\n            window.alert(\"התאריך שונה בהצלחה\")\r\n            this.togglePopup();\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmitQ(e){\r\n        e.preventDefault();\r\n        var Questionnaires =[];\r\n        if(this.state.quest2){\r\n            Questionnaires.push({\r\n                \"QuestionnaireID\": 1,\r\n                \"QuestionnaireText\": \"תפקוד גב תחתון\"\r\n            })\r\n        }\r\n        if(this.state.quest3){\r\n            Questionnaires.push({\r\n                \"QuestionnaireID\": 2,\r\n                \"QuestionnaireText\": \"תפקוד צוואר\"\r\n            })\r\n        }\r\n        if(this.state.quest4){\r\n            Questionnaires.push({\r\n                \"QuestionnaireID\": 3,\r\n                \"QuestionnaireText\": \"תפקוד גף תחתון\"\r\n            })\r\n        }\r\n        if(this.state.quest5){\r\n            Questionnaires.push({\r\n                \"QuestionnaireID\": 5,\r\n                \"QuestionnaireText\": \"איכות חיים\"\r\n            });\r\n        }           \r\n        let id = this.props.user[\"UserID\"];\r\n        axios.post(' https://moda-medic.herokuapp.com/auth/usersAll/changeUserQuestionnaire',\r\n        {\r\n            UserID: id,\r\n            Questionnaires: Questionnaires\r\n        },            \r\n        { \r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': sessionStorage.getItem(\"token\")\r\n            }\r\n        }).then(res => {\r\n           window.alert(\"השאלונים שונו בהצלחה\");\r\n           this.togglePopupQ();\r\n        });\r\n    }\r\n\r\n    changeQuest(){\r\n        this.togglePopupQ();\r\n    }\r\n\r\n    changeDate(){\r\n        this.togglePopup();\r\n    }\r\n\r\n    togglePopupQ() {\r\n        this.setState({\r\n          showPopupQ: !this.state.showPopupQ\r\n        });\r\n\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n          showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    render() {\r\n        require(\"./PatientData.css\");\r\n        let name = this.props.user[\"First_Name\"] + \" \" + this.props.user[\"Last_Name\"];\r\n        let bmi = parseFloat(this.props.user[\"BMI\"]).toFixed(1);\r\n        var sDate = \"\";\r\n        if(this.props.user[\"DateOfSurgery\"]){\r\n            sDate = (new Date(this.props.user[\"DateOfSurgery\"])).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\r\n        }\r\n        else{\r\n            sDate = \"לא נקבע יום ניתוח\";\r\n        }\r\n        let gender = this.props.user[\"Gender\"];\r\n        let height = this.props.user[\"Height\"];\r\n        let pNumber = this.props.user[\"Phone_Number\"];\r\n        let smoke = this.props.user[\"Smoke\"];\r\n        let sType = this.props.user[\"SurgeryType\"];\r\n        let weight = this.props.user[\"Weight\"];\r\n        var today = new Date();\r\n        var birthday = new Date(this.props.user[\"BirthDate\"]);\r\n        var age = Math.floor((today.getTime() - birthday.getTime())/ 31536000000)\r\n        var Questionnaires = \"\";\r\n        var first = true;\r\n        for(var i = 0; i < this.props.user[\"Questionnaires\"].length; i++){\r\n            if(this.props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] !== 0 && this.props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] !== 6){\r\n                if(!first){\r\n                    Questionnaires +=\", \"\r\n                }\r\n                else{\r\n                    first = false;\r\n                }\r\n                if(!Questionnaires.includes(this.props.user[\"Questionnaires\"][i][\"QuestionnaireText\"])){\r\n                    Questionnaires += this.props.user[\"Questionnaires\"][i][\"QuestionnaireText\"];\r\n                }\r\n            }\r\n        }\r\n        if(Questionnaires.charAt(Questionnaires.length - 1) === \" \"){\r\n            Questionnaires = Questionnaires.substring(0, Questionnaires.length - 2);\r\n        }\r\n        var className = \"g\";\r\n        if(this.props.table){\r\n            className = \"t\"\r\n        }\r\n\t\treturn (\r\n            <div id=\"data\" className={className}>\r\n                <div className=\"line\">\r\n                    <label className=\"label\">שם:</label>\r\n                    <label className=\"labelData\">{name}</label>\r\n                    <label className=\"label\">מספר טלפון:</label>\r\n                    <label className=\"labelData\">{pNumber}</label>\r\n                </div>\r\n                <div className=\"line\">\r\n                    <label className=\"label\">מין:</label>\r\n                    <label className=\"labelData\">{gender}</label>\r\n                    <label className=\"label\">משקל:</label>\r\n                    <label className=\"labelData\">{weight}</label>\r\n                    <label className=\"label\">גובה:</label>\r\n                    <label className=\"labelData\">{height}</label>\r\n                    <label className=\"label\">גיל:</label>\r\n                    <label className=\"labelData\">{age}</label>\r\n                    <label className=\"label\">BMI:</label>\r\n                    <label className=\"labelData\">{bmi}</label>\r\n                    <label className=\"labelData\">{smoke}</label>\r\n                    \r\n                </div>\r\n                <div className=\"line\">\r\n                    <label className=\"label\">סוג ניתוח:</label>\r\n                    <label className=\"labelData\">{sType}</label>\r\n                    <label className=\"label\">תאריך ניתוח:</label>\r\n                    <label className=\"labelData\" >{sDate}</label>  \r\n                    <button className=\"changeDate\" onClick={() => this.changeDate()}> \r\n                        שינוי התאריך        \r\n                    </button>\r\n                </div>\r\n                {/*<div className=\"line\">*/}\r\n                {/*    <label className=\"label\" >שאלונים:</label> */}\r\n                {/*    <label className=\"labelData\" >{Questionnaires} </label> */}\r\n                {/*    <button className=\"changeDate\" onClick={() => this.changeQuest()}> */}\r\n                {/*        שינוי השאלונים  */}\r\n                {/*    </button>*/}\r\n                {/*</div>*/}\r\n                {this.state.showPopup ? \r\n                    <Popup\r\n                        closePopup={this.togglePopup.bind(this)}\r\n                        handleChange={this.handleChange.bind(this)}\r\n                        handleSubmit={this.handleSubmit.bind(this)}\r\n                    /> : null\r\n                }\r\n                {this.state.showPopupQ ? \r\n                    <PopupQ\r\n                        closePopup={this.togglePopupQ.bind(this)}\r\n                        handleChange={this.handleChange.bind(this)}\r\n                        handleSubmit={this.handleSubmitQ.bind(this)}\r\n                        quest1={this.state.quest1}\r\n                        quest2={this.state.quest2}\r\n                        quest3={this.state.quest3}\r\n                        quest4={this.state.quest4}\r\n                        quest5={this.state.quest5}\r\n                        quest6={this.state.quest6}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientData\r\n\r\nclass Popup extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className='popup'>\r\n            <div className='popup_innerCD' >\r\n                <div className=\"line_x\">\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                </div>\r\n                <h4 id=\"h4C\">שינוי תאריך הניתוח</h4>\r\n                <form  onSubmit={this.props.handleSubmit} id=\"newDate_form\">\r\n                    <div className=\"line_newData\">\r\n                        <label id=\"newD\"> הכנס תאריך ניתוח חדש:</label>\r\n                    </div>\r\n                    <div className=\"line_newData\">\r\n                    <input id=\"new_date\" type=\"date\" name=\"new_date\" onChange={this.props.handleChange}/>\r\n                    </div>\r\n                    <div className=\"line_newData\">\r\n                        <button id=\"sumbitC\" type=\"sumbit\" >שינוי</button>\r\n                    </div>\r\n                    <div className=\"line_newData\">\r\n                        <label id=\"noDate\">*לביטול תאריך ניתוח יש ללחוץ על שינוי בלי קביעת תאריך חדש</label>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  class PopupQ extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className='popup'>\r\n            <div className='popup_innerCQ' >\r\n                <div className=\"line_x\">\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                </div>\r\n                <h4 id=\"h4C\">שינוי שאלונים</h4>\r\n                <form id=\"formQ\" onSubmit={this.props.handleSubmit}>\r\n                    <div className=\"line\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"cInput\" \r\n                            name=\"quest2\"\r\n                            checked={this.props.quest2}\r\n                            onChange={this.props.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            תפקוד גב תחתון  \r\n                        </label>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"cInput\" \r\n                            name=\"quest3\"\r\n                            checked={this.props.quest3}\r\n                            onChange={this.props.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            תפקוד צוואר  \r\n                        </label>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"cInput\" \r\n                            name=\"quest4\"\r\n                            checked={this.props.quest4}\r\n                            onChange={this.props.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            תפקוד גף תחתון    \r\n                        </label>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"cInput\" \r\n                            name=\"quest5\"\r\n                            checked={this.props.quest5}\r\n                            onChange={this.props.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            איכות חיים  \r\n                        </label>\r\n                    </div>\r\n                    <button  id=\"changeQ\" type=\"sumbit\" >שינוי</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, {Component} from \"react\"\r\nimport \"./DisplayButton.css\"\r\nimport Table from \"./Table\"\r\nimport TableAns from \"./TableAns\"\r\nimport Graph from \"./Graph\"\r\nimport TablePer from \"./TablePer\"\r\nimport SleepGraph from \"./SleepGraph\"\r\nimport GraphAns from \"./GraphAns\"\r\nimport PatientData from \"./PatientData\"\r\n\r\n\r\nclass DisplayButton extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            graph: true,\r\n            table : false\r\n        }\r\n\r\n        this.styleLabel = {\r\n            fontSize: \"calc(10px)\",\r\n            color: \"black\",\r\n            margin: \"2vmin 2vmin 2vmin 2vmin\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n        this.clean = function(arr){\r\n            var tempDic = {};\r\n            var temp = [];\r\n            for(var i = 0; i < arr.length; i++){\r\n                var date = new Date(arr[i].ValidTime)\r\n                var dateStr = date.toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/ /g, '-')\r\n                if(tempDic[dateStr] === undefined){\r\n                    tempDic[dateStr] = arr[i];\r\n                    temp.push(arr[i])\r\n                }\r\n            }\r\n            return temp;\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({graph: false, table:false, [name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var arrSteps, arrDis, arrCal, arrWeat, arrSleep;\r\n        var  arr1 = [], arr2 = [], arr3 = [], arr4 = [], arr5 = [], arr6 = [];\r\n        for(var i = 0; i < this.props.dataArr.length; i++){\r\n            if(this.props.dataArr[i].name === \"צעדים\"){\r\n                arrSteps = this.props.dataArr[i].values\r\n            }\r\n            else if(this.props.dataArr[i].name === \"מרחק\"){\r\n                arrDis = this.props.dataArr[i].values\r\n            }\r\n            else if(this.props.dataArr[i].name === \"קלוריות\"){\r\n                arrCal = this.props.dataArr[i].values;\r\n            }\r\n            else if(this.props.dataArr[i].name === \"מזג האוויר\"){\r\n                if(this.props.dataArr[i].values.length && this.props.dataArr[i].values[0].Data && this.props.dataArr[i].values[0].Data.High){\r\n                    for(var j = 0; j < this.props.dataArr[i].values.length; j++){\r\n                        this.props.dataArr[i].values[j].Data = this.props.dataArr[i].values[j].Data.High;\r\n                    }\r\n                }\r\n                arrWeat = this.props.dataArr[i].values;\r\n            }\r\n            else if(this.props.dataArr[i].name === \"שעות שינה\"){\r\n                arrSleep = this.props.dataArr[i].values;\r\n            }\r\n\r\n        }\r\n        \r\n        for(i = 0; i < this.props.periodicAnswers.length; i++){\r\n            if(this.props.periodicAnswers[i].QuestionnaireID === 1){\r\n                arr1 = this.props.periodicAnswers[i].data;\r\n                for(j = 0; j < arr1.length; j++){\r\n                    arr1[j][\"Data\"] = arr1[j][\"Score\"];\r\n                }\r\n            }\r\n            if(this.props.periodicAnswers[i].QuestionnaireID === 2){\r\n                arr2 = this.props.periodicAnswers[i].data;\r\n                for(j = 0; j < arr2.length; j++){\r\n                    arr2[j][\"Data\"] = arr2[j][\"Score\"];\r\n                }\r\n            }\r\n            if(this.props.periodicAnswers[i].QuestionnaireID === 3){\r\n                arr3 = this.props.periodicAnswers[i].data;\r\n                for(j = 0; j < arr3.length; j++){\r\n                    arr3[j][\"Data\"] = arr3[j][\"Score\"];\r\n                }\r\n            }\r\n            if(this.props.periodicAnswers[i].QuestionnaireID === 4){\r\n                arr4 = this.props.periodicAnswers[i].data;\r\n                for(j = 0; j < arr4.length; j++){\r\n                    arr4[j][\"Data\"] = arr4[j][\"Score\"];\r\n                }\r\n            }\r\n            if(this.props.periodicAnswers[i].QuestionnaireID === 5){\r\n                arr5 = this.props.periodicAnswers[i].data;\r\n                for(j = 0; j < arr5.length; j++){\r\n                    arr5[j][\"Data\"] = arr5[j][\"Score\"];\r\n                }\r\n            }\r\n            if(this.props.periodicAnswers[i].QuestionnaireID === 6){\r\n                arr6 = this.props.periodicAnswers[i].data;\r\n                for(j = 0; j < arr6.length; j++){\r\n                    arr6[j][\"Data\"] = arr6[j][\"Score\"];\r\n                }\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                <div className=\"display\">\r\n                    { (this.props.dataArr.length > 0 || this.props.dailyA.length > 0) ? <div><div className=\"checkButton\" id=\"cbRight\">\r\n                    <label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            value=\"1\"\r\n                            name=\"graph\"\r\n                            checked={this.state.graph}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <span>\r\n                            <div id=\"text\">\r\n                                הצג מידע גרפי\r\n                            </div>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"checkButton\" id=\"cbLeft\">\r\n                    <label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            value=\"1\"\r\n                            name=\"table\"\r\n                            checked={this.state.table}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <span>\r\n                            <div id=\"text\">\r\n                                הצג מידע טבלאי  \r\n                            </div>\r\n                        </span>\r\n                    </label>\r\n                </div> </div> : null }\r\n                </div>\r\n                <br />\r\n                <br />\r\n                { ((this.state.graph || this.state.table) && this.props.ready) ? <PatientData user={this.props.user} table={this.state.table}/> : null}\r\n                { (this.state.table && this.props.dataArr.length > 0 && this.props.ready) ? <h3>מדדים</h3> : null }\r\n                { this.state.table ? <div className=\"ex1\"><Table dataArr={this.props.dataArr}\r\n                    steps={this.props.steps}\r\n                    distance={this.props.distance}\r\n                    calories={this.props.calories}\r\n                    weather={this.props.weather}\r\n                    sleep={this.props.sleep}\r\n                    date={this.props.date}\r\n                    showDaily={this.props.showDaily}\r\n                    weekly={this.props.weekly}\r\n                    monthly={this.props.monthly}\r\n                    name={this.props.name}\r\n                    ready={this.props.ready}\r\n                /> </div>: null }\r\n                <br />\r\n                { (this.state.table && this.props.dailyQ && this.props.ready) ? <h3>שאלון יומי</h3> : null }\r\n                { (this.state.table && this.props.dailyQ) ? <TableAns data={this.props.dailyA} \r\n                    date={this.props.date}\r\n                    showDaily={this.props.showDaily}\r\n                    weekly={this.props.weekly}\r\n                    monthly={this.props.monthly}\r\n                    name={this.props.name}\r\n                    ready={this.props.ready}\r\n                    /> : null }\r\n                { (this.state.table && this.props.perQ && this.props.ready) ? <h3>שאלונים תקופתיים</h3> : null }\r\n                { (this.state.table && this.props.perQ) ? <TablePer data={this.props.periodicAnswers} \r\n                    date={this.props.date}\r\n                    showDaily={this.props.showDaily}\r\n                    weekly={this.props.weekly}\r\n                    monthly={this.props.monthly}\r\n                    ready={this.props.ready}\r\n                    name={this.props.name} />: null }\r\n                { (this.state.graph && this.props.steps) ? <Graph data={arrSteps} date={this.props.date} name=\"צעדים\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && this.props.distance) ? <Graph data={arrDis} date={this.props.date} name=\"מרחק\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && this.props.calories) ? <Graph data={arrCal} date={this.props.date} name=\"קלוריות\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && this.props.weather) ? <Graph data={arrWeat} date={this.props.date} name=\"מזג האוויר\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && this.props.sleep) ? <SleepGraph data={arrSleep} date={this.props.date} name=\"שעות שינה\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && this.props.dailyQ) ? <GraphAns data={this.props.dailyA} date={this.props.date} name=\"שאלון יומי\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && arr1.length > 0 && this.props.perQ) ? <Graph data={arr1} date={this.props.date} name=\"Oswestry Disability Index\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && arr2.length > 0 && this.props.perQ) ? <Graph data={arr2} date={this.props.date} name=\"Neck Disability Index\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && arr3.length > 0 && this.props.perQ) ? <Graph data={arr3} date={this.props.date} name=\"Lower Extremity Functional Scale\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && arr4.length > 0 && this.props.perQ) ? <Graph data={arr4} date={this.props.date} name=\"Oswestry low back pain\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && arr5.length > 0 && this.props.perQ) ? <Graph data={arr5} date={this.props.date} name=\"EQ-5D\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n                { (this.state.graph && arr6.length > 0 && this.props.perQ) ? <Graph data={arr6} date={this.props.date} name=\"EQ-5D scale\" showDaily={this.props.showDaily} weekly={this.props.weekly} monthly={this.props.monthly} ready={this.props.ready}/> : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayButton","import React, {Component} from \"react\"\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card'\r\nimport DisplayButton from './DisplayButton';\r\n\r\nclass PatientSearch extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        var date = new Date();\r\n        var three_month = date.setMonth(date.getMonth() - 3).toISOString().split(\"T\")[0];\r\n        var x = date.toISOString().split(\"T\")[0];\r\n        this.state = {\r\n            pName: \"\",\r\n            fName: \"\",\r\n            end_date: x,\r\n            start_date: three_month,\r\n            steps: true,\r\n            distance : true,\r\n            weather: true,\r\n            calories: true,\r\n            sleeping_hours: true,\r\n            dataArr: [],\r\n            periodicAnswers: [],\r\n            showPopup: false,\r\n            textPopup: [],\r\n            dailyA: [],\r\n            numOfUsers: 0,\r\n            dailyQ: true,\r\n            perQ: true,\r\n            x: [],\r\n            date: 0,\r\n            showDaily: true,\r\n            weekly: false,\r\n            monthly: false,\r\n            user: {},\r\n            ready: false,\r\n            todayDate: x,\r\n            // optionsPName: [],\r\n            className: \"normal\",\r\n            // namesDiv: [],\r\n            isFetchingNames: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.getRequest = this.getRequest.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.selectUser = this.selectUser.bind(this);\r\n        this.findUser = this.findUser.bind(this);\r\n        this.fetchNames = this.fetchNames.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem('doctor')) {\r\n            this.fetchNames();\r\n        }\r\n    }\r\n\r\n    async fetchNames(){\r\n        var list = [];\r\n        var namesDiv = [];\r\n        this.setState({isFetchingNames: true});\r\n        var response = await axios.get(\r\n            \" https://moda-medic.herokuapp.com/auth/usersAll/getNames\",\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n        if(response.data.data){\r\n            for(var i = 0; i < response.data.data.length; i++){\r\n                namesDiv.push(response.data.data[i]);\r\n            }\r\n            var names = response.data.data.map(function(item, i){\r\n                return item.first.trim() + \" \" + item.last.trim();\r\n            });\r\n            names = names.sort();\r\n            var uniqueNames = Array.from(new Set(names));\r\n            for(i = 0; i < uniqueNames.length; i++){\r\n                list.push(<option key={uniqueNames[i]}>{uniqueNames[i]}</option>);\r\n            }\r\n        }\r\n        this.setState({\r\n            isFetchingNames: false,\r\n            optionsPName: list,\r\n            namesDiv: namesDiv,\r\n        });\r\n    }\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    findUser(user){\r\n        for(var i = 0; i < this.state.namesDiv.length; i++){\r\n            var name = this.state.namesDiv[i].first.trim() + \" \" + this.state.namesDiv[i].last.trim();\r\n            if(name.toLocaleLowerCase() === user.toLocaleLowerCase()){\r\n                return ([this.state.namesDiv[i].first.trim(), this.state.namesDiv[i].last.trim()])\r\n            }\r\n        }\r\n        return[\",\" , \",\"];\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n        if(name === \"showDaily\"){\r\n            this.setState({\r\n                showDaily: true,\r\n                weekly: false,\r\n                monthly: false\r\n            })\r\n        }\r\n        else if(name === \"weekly\"){\r\n            this.setState({\r\n                showDaily: false,\r\n                weekly: true,\r\n                monthly: false\r\n            })\r\n        }\r\n        else if(name === \"monthly\"){\r\n            this.setState({\r\n                showDaily: false,\r\n                weekly: false,\r\n                monthly: true\r\n            })\r\n        }\r\n    }\r\n\r\n    async getRequest(name,url){\r\n        if(sessionStorage.getItem('doctor')){\r\n            return this.getDoctorRequest(name, url);\r\n        }\r\n        if(sessionStorage.getItem('patient')){\r\n            return this.getPatientRequest(name, url);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async getDoctorRequest(name, url){\r\n        var nameSplit = this.findUser(this.state.pName);\r\n        let getUrl = ' https://moda-medic.herokuapp.com/auth/doctors/' + url + '?FirstName=' + nameSplit[0] + '&LastName=' + nameSplit[1];\r\n        if(this.state.start_date !== \"\"){\r\n            var date = new Date(this.state.start_date)\r\n            let start_time = date.getTime();\r\n            getUrl += (\"&start_time=\" + start_time);\r\n        }\r\n        if(this.state.end_date !== \"\"){\r\n            date = new Date(this.state.end_date)\r\n            date = new Date(date.getTime() + 86400000);\r\n            let end_time = date.getTime();\r\n            getUrl += (\"&end_time=\" + end_time);\r\n        }\r\n        const response = await axios.get(\r\n            getUrl,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n        if(response.data.message === \"Not Found\"){\r\n            return null;\r\n        }\r\n        return({\r\n            values: response.data.data,\r\n            name : name,\r\n            numOfUsers: response.data.data.length\r\n        });\r\n    }\r\n\r\n    async getPatientRequest(name, url){\r\n        let getUrl = ` https://moda-medic.herokuapp.com/auth/patients/${url}`;\r\n        let start_time;\r\n        if(this.state.start_date !== \"\"){\r\n            var date = new Date(this.state.start_date);\r\n            start_time = date.getTime();\r\n            // getUrl += (\"&start_time=\" + start_time);\r\n        }\r\n        let end_time;\r\n        if(this.state.end_date !== \"\"){\r\n            date = new Date(this.state.end_date)\r\n            date = new Date(date.getTime() + 86400000);\r\n            end_time = date.getTime();\r\n            // getUrl += (\"&end_time=\" + end_time);\r\n        }\r\n        const response = await axios.get(\r\n            getUrl,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                },\r\n                params: {\r\n                    start_time: start_time,\r\n                    end_time: end_time\r\n                }\r\n            }\r\n        );\r\n        return({\r\n            values: response.data.data,\r\n            name : name,\r\n            numOfUsers: response.data.data.length\r\n        });\r\n    }\r\n\r\n\r\n        async selectUser(key){\r\n        let arr = this.state.dataArr;\r\n        let d = this.state.dailyA;\r\n        var da = [];\r\n        var user;\r\n        var sDate;\r\n        for(var i = 0; i < this.state.numOfUsers; i++){\r\n            if(d[i] && d[i].UserID[\"BirthDate\"] === key){\r\n                da = d[i].docs;\r\n                sDate = d[i].UserID[\"DateOfSurgery\"];\r\n                user = d[i].UserID;\r\n            }\r\n        }\r\n        for(i = 0; i < this.state.questionnaire.values.length; i++){\r\n            if(this.state.questionnaire.values[i].UserID[\"BirthDate\"] === key){\r\n                this.state.periodicAnswers.push(this.state.questionnaire.values[i][\"docs\"]);\r\n                sDate = this.state.questionnaire.values[i].UserID[\"DateOfSurgery\"];\r\n                user = this.state.questionnaire.values[i].UserID;\r\n            }\r\n        }\r\n        for(i = 0; i < arr.length; i++){\r\n            let values = [];\r\n            if(arr[i]){\r\n                for(var j = 0; j < arr[i].values.length; j++){\r\n                    if(arr[i].values[j].UserID[\"BirthDate\"] === key){\r\n                        values = arr[i].values[j].docs;\r\n                        sDate = arr[i].values[j].UserID[\"DateOfSurgery\"];\r\n                        user = arr[i].values[j].UserID;\r\n                    }\r\n                }\r\n                arr[i].values = values;\r\n            }\r\n        }\r\n        this.setState({\r\n            dataArr: arr,\r\n            dailyA: da,\r\n            date: sDate,\r\n            user: user,\r\n            ready: true,\r\n            className: \"normal\"\r\n        });\r\n        if(this.state.showPopup){\r\n            this.togglePopup();\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        if(event){\r\n            event.preventDefault()\r\n        }\r\n        this.setState({\r\n            ready: false,\r\n            className: \"waiting\",\r\n            periodicAnswers: []\r\n        });\r\n        var numOfUsers = 0;\r\n        var arr = [];\r\n        var  i = 0;\r\n        let response = await this.getRequest(\"צעדים\", \"metrics/getSteps\");\r\n        if(!response){\r\n            window.alert(\"לא קיים מטופל\");\r\n            return;\r\n        }\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"מרחק\", \"metrics/getDistance\")\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"קלוריות\", \"metrics/getCalories\")\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"מזג האוויר\", \"metrics/getWeather\")\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"שעות שינה\", \"metrics/getSleep\");\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"תשובות יומיות\", \"answers/getDailyAnswers\")\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        let responseQ = await this.getRequest(\"שאלון תקופתי\", \"answers/getPeriodicAnswers\")\r\n        var num = 0;\r\n        var id = {};\r\n        for(i = 0; i < responseQ.values.length; i++){\r\n            if(!id[responseQ.values[i].UserID]){\r\n                id[responseQ.values[i].UserID] = true;\r\n                num++;\r\n            }\r\n        }\r\n        if(num > numOfUsers){\r\n            numOfUsers = num;\r\n        }\r\n        this.setState({\r\n            dataArr : arr,\r\n            dailyA: response.values,\r\n            numOfUsers: numOfUsers,\r\n            questionnaire: responseQ\r\n        });\r\n        if(numOfUsers === 1){\r\n            let x = this.state.dailyA[0].UserID[\"BirthDate\"];\r\n            if(!x)\r\n                x = this.state.periodicAnswers[0].UserID[\"BirthDate\"];\r\n            if(!x)\r\n                x = this.state.dataArr[0][0].UserID[\"BirthDate\"];\r\n            this.selectUser(x)\r\n        }\r\n        if(numOfUsers > 1){\r\n            var cards = [];\r\n            for(i = 0; i < numOfUsers; i++){\r\n                let x = this.state.dailyA[i].UserID[\"BirthDate\"];\r\n                if(!x)\r\n                    x = this.state.periodicAnswers[i].UserID[\"BirthDate\"];\r\n                if(!x)\r\n                    x = this.state.dataArr[0][i].UserID[\"BirthDate\"];\r\n                let dateC = new Date(x);\r\n                this.state.x.push(dateC.toLocaleDateString('en-GB', {day: 'numeric', month: 'numeric', year:\"numeric\"}))\r\n                cards.push(\r\n                    <Card className=\"card\" key={this.state.x[i]}  onClick={() => this.selectUser(x)}>\r\n                        <Card.Body className=\"cardBody\">שם פרטי: {this.state.pName.trim()} </Card.Body>\r\n                        <Card.Body className=\"cardBody\">שם משפחה: {this.state.fName.trim()} </Card.Body>\r\n                        <Card.Body className=\"cardBody\">תאריך לידה: {this.state.x[i]}</Card.Body>\r\n                    </Card>\r\n                );\r\n            }\r\n            this.setState({\r\n                text: cards\r\n            });\r\n            this.togglePopup();\r\n        }\r\n    }\r\n    isDoctor(){\r\n        return sessionStorage.getItem('doctor')\r\n    }\r\n    render() {\r\n        require(\"./search.css\");\r\n        var today = (new Date()).toISOString().split(\"T\")[0];\r\n        var searchButton;\r\n\r\n        if (this.isDoctor()) {\r\n            searchButton = <div className=\"search\">\r\n                <label className=\"lSearch\">\r\n                    חפש מטופל:\r\n                </label>\r\n                <input className=\"iSearch\"\r\n                       id=\"pname\"\r\n                       type=\"text\"\r\n                       name=\"pName\"\r\n                       value={this.state.pName}\r\n                       placeholder=\"שם פרטי ומשפחה\"\r\n                       onChange={this.handleChange}\r\n                       list=\"first-list\"\r\n                       required\r\n                />\r\n                <button className=\"bSearch\">\r\n                    חפש\r\n                </button>\r\n            </div>\r\n        } else {\r\n            searchButton = <div><button className=\"bSearch\">חפש</button></div>\r\n        }\r\n        return (\r\n            <div>\r\n                <datalist id=\"first-list\">\r\n                    {this.state.optionsPName}\r\n                </datalist>\r\n                <datalist id=\"last-list\">\r\n                    {this.state.optionsLName}\r\n                </datalist>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {searchButton}\r\n                    <div className=\"dates\">\r\n                        <label className=\"cSearch\">\r\n                            בחר תאריכים: מ\r\n                        </label>\r\n                        <input className=\"dSearch\"\r\n                               type=\"date\"\r\n                               name=\"start_date\"\r\n                               value={this.state.start_date}\r\n                               onChange={this.handleChange}\r\n                               max={this.state.end_date}\r\n                        />\r\n                        <label className=\"aSearch\">\r\n                            עד\r\n                        </label>\r\n                        <input className=\"dSearch\"\r\n                               type=\"date\"\r\n                               name=\"end_date\"\r\n                               value={this.state.end_date}\r\n                               onChange={this.handleChange}\r\n                               max={today}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mdd\">\r\n                        <label className=\"mLabel\">\r\n                            בחר מדדים:\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"steps\"\r\n                               checked={this.state.steps}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            צעדים\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"distance\"\r\n                               checked={this.state.distance}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            מרחק\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"weather\"\r\n                               checked={this.state.weather}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            מזג האוויר\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"calories\"\r\n                               checked={this.state.calories}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            קלוריות\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"sleeping_hours\"\r\n                               checked={this.state.sleeping_hours}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            שעות שינה\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"dailyQ\"\r\n                               checked={this.state.dailyQ}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            שאלון יומי\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"perQ\"\r\n                               checked={this.state.perQ}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            שאלונים תקופתיים\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"mddShow\">\r\n                        <label className=\"mLabel\">\r\n                            בחר אופן הצגה:\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"showDaily\"\r\n                               checked={this.state.showDaily}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            יומי\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"weekly\"\r\n                               checked={this.state.weekly}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            שבועי\r\n                        </label>\r\n                        <input className=\"cInput\"\r\n                               type=\"checkbox\"\r\n                               name=\"monthly\"\r\n                               checked={this.state.monthly}\r\n                               onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"mLabel\">\r\n                            חודשי\r\n                        </label>\r\n                    </div>\r\n                </form>\r\n                <br />\r\n                <DisplayButton\r\n                    dataArr={this.state.dataArr}\r\n                    steps={this.state.steps}\r\n                    distance={this.state.distance}\r\n                    calories={this.state.calories}\r\n                    weather={this.state.weather}\r\n                    sleep={this.state.sleeping_hours}\r\n                    dailyA={this.state.dailyA}\r\n                    periodicAnswers={this.state.periodicAnswers}\r\n                    dailyQ={this.state.dailyQ}\r\n                    perQ={this.state.perQ}\r\n                    date={this.state.date}\r\n                    showDaily={this.state.showDaily}\r\n                    weekly={this.state.weekly}\r\n                    monthly={this.state.monthly}\r\n                    user={this.state.user}\r\n                    name={this.state.pName.trim() + \" \" + this.state.fName.trim()}\r\n                    ready={this.state.ready}\r\n                />\r\n                {this.state.showPopup ?\r\n                    <Popup\r\n                        text={this.state.text}\r\n                        closePopup={this.togglePopup.bind(this)}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientSearch\r\n\r\nclass Popup extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='popup'>\r\n                <div className='popup_inner' >\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                    <h4>:אנא בחר מבין הרשומות הבאות</h4>\r\n                    {this.props.text}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n/*\r\n\r\n                        <input className=\"iSearch\"\r\n                            id=\"fname\"\r\n                            type=\"text\"\r\n                            name=\"fName\"\r\n                            value={this.state.fName}\r\n                            placeholder=\"שם משפחה\"\r\n                            onChange={this.handleChange}\r\n                            list=\"last-list\"\r\n                            required\r\n                        />\r\n                        */","import React from 'react'\r\nimport \"./NavBar.css\"\r\nimport { Navbar,Nav } from 'react-bootstrap'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport { FaUser,FaUserMd } from 'react-icons/fa'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport PatientData from \"./PatientData\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            showPopup: false,\r\n            userInfo: false,\r\n            pass: \"\",\r\n            pass2: \"\",\r\n            diff: false,\r\n            isLogOut: false,\r\n            isMessage: false,\r\n            isPatientInfo: false,\r\n            isInstructions: false,\r\n            isExercises: false,\r\n            isEdit: false,\r\n        };\r\n        this.logout = this.logout.bind(this);\r\n        this.change = this.change.bind(this);\r\n        this.privateInfoShow = this.privateInfoShow.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.changeToEdit = this.changeToEdit.bind(this);\r\n        this.updateUser = this.updateUser.bind(this);\r\n    }\r\n\r\n    goToMessages() {\r\n        this.setState({\r\n            isPatientInfo: false,\r\n            isInstructions: false,\r\n            isMessage: true,\r\n            isQuestionnaires: false,\r\n            isExercises: false\r\n        })\r\n    }\r\n\r\n    goToExercises() {\r\n        this.setState({\r\n            isPatientInfo: false,\r\n            isInstructions: false,\r\n            isMessage: false,\r\n            isExercises: true,\r\n            isQuestionnaires: false\r\n        })\r\n    }\r\n\r\n    goToSearch() {\r\n        this.setState({\r\n            isPatientInfo: true,\r\n            isMessage:false,\r\n            isQuestionnaires: false,\r\n            isInstructions: false,\r\n            isExercises: false\r\n        })\r\n    }\r\n\r\n    goToQuestionnaires() {\r\n        this.setState({\r\n            isPatientInfo: false,\r\n            isMessage: false,\r\n            isInstructions: false,\r\n            isQuestionnaires: true,\r\n            isExercises: false\r\n        })\r\n    }\r\n\r\n    goToInstructions() {\r\n        this.setState({\r\n            isPatientInfo: false,\r\n            isMessage: false,\r\n            isInstructions: true,\r\n            isQuestionnaires: false,\r\n            isExercises: false\r\n        })\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    toggleUserInfo() {\r\n        this.setState({\r\n            userInfo: !this.state.userInfo\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        if(this.state.pass !== this.state.pass2){\r\n            this.setState({\r\n                diff: true\r\n            });\r\n        }\r\n        else{\r\n            let url = ' https://moda-medic.herokuapp.com/auth/usersAll/askChangePassword';\r\n            var token;\r\n            const response = await axios.post(\r\n                url,\r\n                {},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }\r\n            );\r\n            token = response.data.data;\r\n            url = ' https://moda-medic.herokuapp.com/users/passwordChangeCheck/changePassword';\r\n            const responsec = await axios.post(\r\n                url,\r\n                {\r\n                    \"NewPassword\":this.state.pass\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': token\r\n                    }\r\n                }\r\n            );\r\n            if(responsec.data.message){\r\n                window.alert(\"הסיסמא שונתה בהצלחה\");\r\n                this.togglePopup();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    async getInfo(){\r\n        let url = ' https://moda-medic.herokuapp.com/auth/usersAll/userInfo';\r\n        var token;\r\n        const response = await axios.get(\r\n            url,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n        this.setState({currUser: response.data.data})\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"type\");\r\n        sessionStorage.removeItem(\"name\");\r\n        sessionStorage.removeItem(\"doctor\");\r\n        sessionStorage.removeItem(\"patient\");\r\n        sessionStorage.removeItem(\"patientUserId\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"type\");\r\n        localStorage.removeItem(\"name\");\r\n        localStorage.removeItem(\"doctor\");\r\n        localStorage.removeItem(\"patient\");\r\n        this.setState({\r\n            isLogOut: true\r\n        })\r\n    }\r\n\r\n    change(){\r\n        this.togglePopup();\r\n    }\r\n\r\n    privateInfoShow(){\r\n        this.toggleUserInfo()\r\n    }\r\n\r\n    isDoctor(){\r\n        return sessionStorage.getItem('doctor')\r\n    }\r\n\r\n    changeToEdit(){\r\n        this.setState({\r\n            isEdit: !this.state.isEdit\r\n        });\r\n    }\r\n\r\n    updateUser(user){\r\n        this.setState({currUser: user})\r\n    }\r\n\r\n    render() {\r\n        var path = window.location.pathname;\r\n        require(\"./NavBar.css\");\r\n        var iconType;\r\n        if (this.isDoctor()) {\r\n            iconType = <FaUserMd class=\"userIcon\" style={{color: 'white'}} size={25}/>\r\n        }else{\r\n            iconType =  <FaUser class=\"userIcon\" style={{color: 'white'}} size={25}/>\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar class=\"navbar navbar-fixed-top\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n                    <div id=\"buttons\">\r\n                        <button id=\"change\" class=\"btn btn-dark\" type=\"button\" onClick={() => this.goToSearch()}>מדדים אישיים</button>\r\n                        <span>{'    '}            </span>\r\n                        <button id=\"change\" class=\"btn btn-dark\" type=\"button\" onClick={() => this.goToQuestionnaires()}>שאלונים</button>\r\n                        <span>{'              '}</span>\r\n                        <button id=\"change\" class=\"btn btn-dark\" type=\"button\"  onClick={() => this.goToMessages()}>לוח הודעות</button>\r\n                        <button id=\"change\" class=\"btn btn-dark\" type=\"button\" onClick={() => this.goToExercises()}>תרגולים רפואיים</button>\r\n                        <button id=\"change\" class=\"btn btn-dark\" type=\"button\" onClick={()=> this.goToInstructions()}>הדרכות ניתוח</button>\r\n                        {this.state.isMessage ? <Redirect to=\"/messages\" /> : null}\r\n                        {this.state.isPatientInfo ? <Redirect to=\"/search\" /> : null}\r\n                        {this.state.isQuestionnaires ? <Redirect to=\"/questionnaires\" /> : null}\r\n                        {this.state.isQuestionnaires ? this.setState({isQuestionnaires: false}) : null}\r\n                        {this.state.isInstructions ? <Redirect to=\"/instructions\" /> : null}\r\n                        {this.state.isExercises ? <Redirect to=\"/exercises\" /> : null}\r\n                        {this.state.isLogOut ? <Redirect to=\"/\" /> : null}\r\n                        {this.state.showPopup ?\r\n                            <Popup\r\n                                change={this.handleChange.bind(this)}\r\n                                closePopup={this.togglePopup.bind(this)}\r\n                                handleSubmit={this.handleSubmit.bind(this)}\r\n                                diff={this.state.diff}\r\n                            /> : null\r\n                        }\r\n                        {this.state.userInfo && sessionStorage.getItem('patient') ?\r\n                            <UserInfo\r\n                                user = {this.state.currUser}\r\n                                isEdit = {this.state.isEdit}\r\n                                closePopup={this.toggleUserInfo.bind(this)}\r\n                                changeToEdit = {this.changeToEdit}\r\n                                updateUser = {this.updateUser}\r\n                            /> : null\r\n                        }\r\n                        {this.state.userInfo && sessionStorage.getItem('doctor') ?\r\n                            <DoctorInfo\r\n                                user = {this.state.currUser}\r\n                                isEdit = {this.state.isEdit}\r\n                                closePopup={this.toggleUserInfo.bind(this)}\r\n                                changeToEdit = {this.changeToEdit}\r\n                                updateUser = {this.updateUser}\r\n                            /> : null\r\n                        }\r\n                    </div>\r\n                    <NavDropdown  id=\"dropdown-item-button\" style={{color : 'white'}} title = {sessionStorage.getItem(\"name\")}>\r\n                        <NavDropdown.Item as=\"button\" onClick={() => this.change()}>שנה סיסמא</NavDropdown.Item>\r\n                        <NavDropdown.Item as=\"button\" onClick={() => this.logout()}>התנתק</NavDropdown.Item>\r\n                        <NavDropdown.Item as=\"button\" onClick={() => this.privateInfoShow()}>פרטים אישיים</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    {iconType}\r\n                    <Navbar.Brand>\r\n                        <img\r\n                            alt=\"\"\r\n                            src={require(\"./first_logo.png\")}\r\n                            width=\"70\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                    </Navbar.Brand>\r\n                </Navbar>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n\r\nclass Popup extends React.Component {\r\n    render() {\r\n        // require(\"./NavBar.css\");\r\n        return (\r\n            <div className='popup'>\r\n                <div className='popup_inner'>\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                    <h3 id=\"h3\">החלפת סיסמא</h3>\r\n                    <form onSubmit={this.props.handleSubmit}>\r\n                        <div className=\"lineC\">\r\n                            <label>\r\n                                סיסמא חדשה:\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"lineC\">\r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" onChange={this.props.change} required/>\r\n                        </div>\r\n                        <div className=\"lineC\">\r\n                            <label>\r\n                                הקלד את הסיסמא מחדש:\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"lineC\">\r\n                            <input type=\"password\" name=\"pass2\" id=\"pass2\" onChange={this.props.change} required/>\r\n                        </div>\r\n                        <div className=\"lineC\">\r\n                            {this.props.diff ? <label id=\"diffPass\">הסיסמאות שונות</label> : null}\r\n                        </div>\r\n                        <div className=\"lineC\">\r\n                            <input type=\"submit\" value=\"שלח\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass DoctorInfo extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            fName: this.props.user.First_Name,\r\n            lName: this.props.user.Last_Name,\r\n            bday: new Date(this.props.user.BirthDate),\r\n            phone: this.props.user.Phone_Number\r\n        };\r\n        this.handleChangeInfo = this.handleChangeInfo.bind(this);\r\n        this.handleSubmitInfo = this.handleSubmitInfo.bind(this);\r\n    }\r\n    handleChangeInfo(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    async handleSubmitInfo(event) {\r\n        event.preventDefault();\r\n        var bDay = new Date(this.state.bday);\r\n        var now = new Date();\r\n        var dateOfSurgery = new Date(this.state.dateOfSurgery);\r\n        let height_double = Number(this.state.height / 100);\r\n        let bmi = String((Number(this.state.weight)/Math.pow(height_double,2)));\r\n        const response = await axios.put(' https://moda-medic.herokuapp.com/auth/usersAll/doctorUpdate', {\r\n                // UserID: this.state.userName,\r\n                First_Name: this.state.fName,\r\n                Last_Name: this.state.lName,\r\n                Phone_Number: this.state.phone,\r\n                BirthDate: bDay.getTime(),\r\n                ValidTime: now.getTime()\r\n            },\r\n            {headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }})\r\n        this.props.changeToEdit()\r\n        this.props.updateUser(response.data.data)\r\n    }\r\n    render() {\r\n        require(\"./NavBar.css\");\r\n        let bDate = new Date(this.state.bday).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\r\n        var today = new Date();\r\n        var birthday = new Date(this.props.user[\"BirthDate\"]);\r\n        var age = Math.floor((today.getTime() - birthday.getTime())/ 31536000000)\r\n        var today = (new Date()).toISOString().split(\"T\")[0];\r\n        var date = new Date(this.state.bday).toISOString().substr(0,10);\r\n        return (\r\n            <div className='popup'>\r\n                <div className='popup_inner_info'>\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                    {!this.props.isEdit ?\r\n                        <Card class=\"cardInfo\">\r\n                            <Card.Header><b>{this.props.user.First_Name}{' '}{this.props.user.Last_Name}</b></Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item className={\"listItem\"} > תאריך לידה: {bDate} </ListGroup.Item>\r\n                                <ListGroup.Item className={\"listItem\"}> גיל: {age}</ListGroup.Item>\r\n                                {/*<ListGroup.Item className={\"listItem\"}> מין: {this.props.user.Gender} </ListGroup.Item>*/}\r\n                                <ListGroup.Item className={\"listItem\"}> טלפון: {this.props.user.Phone_Number} </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card> : null }\r\n                    {this.props.isEdit ?\r\n                        <form onSubmit={this.handleSubmitInfo} onReset={this.handleReset} id=\"new_user_form\">\r\n                            <br/>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">שם פרטי</label>\r\n                                <input className=\"inputs_in_add_user\" name=\"fName\" type=\"text\" value={this.state.fName} maxLength=\"20\"\r\n                                       onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">שם משפחה </label>\r\n                                <input className=\"inputs_in_add_user\" name=\"lName\" type=\"text\" value={this.state.lName} maxLength=\"20\"\r\n                                       onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">מספר טלפון</label>\r\n                                <input className=\"inputs_in_add_user\" name=\"phone\" type=\"tel\" id=\"phone\" pattern=\"[0-9]{10}\"\r\n                                       value={this.state.phone} onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">תאריך לידה</label>\r\n                                <input className=\"inputs_in_add_user\" name=\"bday\" type=\"date\" max={today}\r\n                                       value={date} onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <input style={{width: 150}} variant=\"info\" type=\"submit\" value=\"שמור\" className=\"submit_and_reset_buttons\"/>\r\n                            </div>\r\n                        </form> : null}\r\n                    {!this.props.isEdit ?\r\n                        <button style={{width: 150, float:'left',position:'relative'}} variant=\"info\" onClick={this.props.changeToEdit}> עריכת פרטים </button> : null}\r\n                    {this.props.isEdit ?\r\n                        <div className=\"divs_in_add\">\r\n                            <button style={{width: 150,position:'relative'}} variant=\"info\" onClick={this.props.changeToEdit}>הצגת פרטים </button></div> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            fName: this.props.user.First_Name,\r\n            lName: this.props.user.Last_Name,\r\n            bday: new Date(this.props.user.BirthDate),\r\n            phone: this.props.user.Phone_Number,\r\n            gender: this.props.user.Gender,\r\n            smoke: this.props.user.Smoke,\r\n            dateOfSurgery:new Date(this.props.user.DateOfSurgery),\r\n            surgeryType: this.props.user.SurgeryType,\r\n            education: this.props.user.Education,\r\n            height: this.props.user.Height,\r\n            weight: this.props.user.Weight,\r\n            bmi:this.props.user.BMI,\r\n        }\r\n        this.handleChangeInfo = this.handleChangeInfo.bind(this);\r\n        this.handleSubmitInfo = this.handleSubmitInfo.bind(this);\r\n        this.onSelectGender = this.onSelectGender.bind(this);\r\n        this.onSelectSmoke = this.onSelectSmoke.bind(this);\r\n        this.onSelectSurgeryType = this.onSelectSurgeryType.bind(this);\r\n        this.onSelectEducation = this.onSelectEducation.bind(this);\r\n    }\r\n    handleChangeInfo(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    async handleSubmitInfo(event) {\r\n        event.preventDefault();\r\n        var bDay = new Date(this.state.bday);\r\n        var now = new Date();\r\n        var dateOfSurgery = new Date(this.state.dateOfSurgery);\r\n        let height_double = Number(this.state.height / 100);\r\n        let bmi = String((Number(this.state.weight)/Math.pow(height_double,2)));\r\n        const response = await axios.put(' https://moda-medic.herokuapp.com/auth/usersAll/patientUpdate', {\r\n                // UserID: this.state.userName,\r\n                First_Name: this.state.fName,\r\n                Last_Name: this.state.lName,\r\n                Phone_Number: this.state.phone,\r\n                Gender:this.state.gender,\r\n                Smoke: this.state.smoke,\r\n                DateOfSurgery: dateOfSurgery.getTime(),\r\n                SurgeryType: this.state.surgeryType,\r\n                Education: this.state.education,\r\n                Height: this.state.height,\r\n                Weight: this.state.weight,\r\n                BMI: bmi,\r\n                BirthDate: bDay.getTime(),\r\n                ValidTime: now.getTime()\r\n            },\r\n            {headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }})\r\n        this.props.changeToEdit()\r\n        this.props.updateUser(response.data.data)\r\n\r\n    }\r\n    onSelectGender(event) {\r\n        let gender;\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        if (selectedIndex == 1) {\r\n            gender = \"נקבה\"\r\n        } else if (selectedIndex == 2) {\r\n            gender = \"זכר\"\r\n        }\r\n        this.setState({\r\n            gender: gender\r\n        });\r\n    }\r\n    onSelectSmoke(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        let smoke;\r\n        if (selectedIndex == 1) {\r\n            smoke = \"מעשן\"\r\n        } else if (selectedIndex == 2) {\r\n            smoke = \"לא מעשן\"\r\n        }\r\n        this.setState({\r\n            smoke: smoke\r\n        });\r\n    }\r\n    onSelectEducation(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        let educationOptions = {1 :\"השכלה אקדמאית\", 2: \"השכלה תיכונית\", 3:\"10-12 שנות לימוד\", 4: \"6-9 שנות לימוד\", 5: \"5 שנות לימוד או פחות\", 6:\"לא מעוניין לענות\"};\r\n        this.setState({\r\n            education: educationOptions[selectedIndex]\r\n        });\r\n    }\r\n\r\n    onSelectSurgeryType(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        let sType;\r\n        if (selectedIndex == 1) {\r\n            sType = \"ניתוח דחוף\"\r\n        }else if (selectedIndex == 2)\r\n        {\r\n            sType = \"ניתוח מתוכנן\"\r\n\r\n        }else if (selectedIndex == 3) {\r\n            sType = \"ללא ניתוח\"\r\n        }\r\n        this.setState({\r\n            surgeryType: sType\r\n        });\r\n        if( selectedIndex !== 3 && selectedIndex !==0){\r\n            this.setState({\r\n                surgeryDateDisplay: true\r\n            });\r\n        }else{\r\n            this.setState({\r\n                surgeryDateDisplay: false\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        require(\"./NavBar.css\");\r\n        let bDate = new Date(this.state.bday).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\r\n        var today = new Date();\r\n        var birthday = new Date(this.props.user[\"BirthDate\"]);\r\n        var age = Math.floor((today.getTime() - birthday.getTime())/ 31536000000)\r\n        let sDate = (new Date(this.state.dateOfSurgery)).toLocaleDateString(undefined, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\r\n        let bmi = parseFloat(this.props.user[\"BMI\"]).toFixed(1);\r\n        let patientListItems;\r\n        if(sessionStorage.getItem(\"patient\")){\r\n            patientListItems =  <div>\r\n                <ListGroup.Item className={\"listItem\"}> גובה: {this.props.user.Height}</ListGroup.Item>\r\n                <ListGroup.Item className={\"listItem\"}> משקל: {this.props.user.Weight}</ListGroup.Item>\r\n                <ListGroup.Item className={\"listItem\"}> BMI:{bmi}</ListGroup.Item>\r\n                <ListGroup.Item className={\"listItem\"}> תאריך ניתוח: {sDate} </ListGroup.Item>\r\n                <ListGroup.Item className={\"listItem\"}> סוג ניתוח: {this.props.user.SurgeryType} </ListGroup.Item>\r\n                <ListGroup.Item className={\"listItem\"}> השכלה: {this.props.user.Education} </ListGroup.Item>\r\n            </div>\r\n        }\r\n        let genderOptions = [<option></option>,<option>נקבה</option>,<option>זכר</option>];\r\n        let surgeryOptions = [<option/>,<option>ניתוח דחוף</option>,<option>ניתוח מתוכנן</option>,<option>ללא ניתוח</option>];\r\n        let smokeOptions = [<option/>,<option>מעשן</option>,<option>לא מעשן</option>];\r\n        let educationOptions = [<option/>,<option>השכלה אקדמאית</option>,<option>השכלה תיכונית</option>,<option>10-12 שנות לימוד</option>,<option>6-9 שנות לימוד</option>,<option>5 שנות לימוד או פחות</option>,<option>לא מעוניין לענות</option>];\r\n        var today = (new Date()).toISOString().split(\"T\")[0];\r\n        var date = new Date(this.state.bday).toISOString().substr(0,10);\r\n        var surgeryDate = new Date(this.state.dateOfSurgery).toISOString().substr(0,10);\r\n        return (\r\n            <div className='popup_info'>\r\n                <div className='popup_inner_info'>\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                    {!this.props.isEdit ?\r\n                        <Card class=\"cardInfo\">\r\n                            <Card.Header><b>{this.props.user.First_Name}{' '}{this.props.user.Last_Name}</b></Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item className={\"listItem\"}> תאריך לידה:{bDate} </ListGroup.Item>\r\n                                <ListGroup.Item className={\"listItem\"}> גיל: {age}</ListGroup.Item>\r\n                                <ListGroup.Item className={\"listItem\"}> מין: {this.props.user.Gender} </ListGroup.Item>\r\n                                {sessionStorage.getItem('doctor') &&\r\n                                <ListGroup.Item className={\"listItem\"}> טלפון: {this.props.user.Phone_Number} </ListGroup.Item>}\r\n                                {patientListItems}\r\n                            </ListGroup>\r\n                        </Card> : null }\r\n                    {this.props.isEdit ?\r\n                        <form onSubmit={this.handleSubmitInfo} onReset={this.handleReset} id=\"new_user_form\">\r\n                            <br/>\r\n                            {sessionStorage.getItem('doctor') && <div>\r\n                                <div className=\"divs_in_add\">\r\n                                    <label className=\"labels_in_add_user\">שם פרטי</label>\r\n                                    <input className=\"inputs_in_add_user\" name=\"fName\" type=\"text\" value={this.state.fName} maxLength=\"20\"\r\n                                           onChange={this.handleChangeInfo} required/>\r\n                                </div>\r\n                                <div className=\"divs_in_add\">\r\n                                    <label className=\"labels_in_add_user\">שם משפחה </label>\r\n                                    <input className=\"inputs_in_add_user\" name=\"lName\" type=\"text\" value={this.state.lName} maxLength=\"20\"\r\n                                           onChange={this.handleChangeInfo} required/>\r\n                                </div>\r\n                                <div className=\"divs_in_add\">\r\n                                    <label className=\"labels_in_add_user\">מספר טלפון</label>\r\n                                    <input className=\"inputs_in_add_user\" name=\"phone\" type=\"tel\" id=\"phone\" pattern=\"[0-9]{10}\"\r\n                                           value={this.state.phone} onChange={this.handleChangeInfo} required/>\r\n                                </div>\r\n                            </div>}\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">תאריך לידה</label>\r\n                                <input className=\"inputs_in_add_user\" name=\"bday\" type=\"date\" max={today}\r\n                                       value={date} onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">משקל (ק\"ג) </label>\r\n                                <input className=\"inputs_in_add_user\" name=\"weight\" type=\"number\" value={this.state.weight}\r\n                                       onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">גובה (ס\"מ) </label>\r\n                                <input className=\"inputs_in_add_user\" name=\"height\" type=\"number\" value={this.state.height}\r\n                                       onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">מין </label>\r\n                                <select value={this.state.gender} className=\"select_in_add_user\" onChange={this.onSelectGender}>\r\n                                    {genderOptions}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">מעשן </label>\r\n                                <select value={this.state.smoke} className=\"select_in_add_user\" onChange={this.onSelectSmoke}>\r\n                                    {smokeOptions}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">השכלה </label>\r\n                                <select value={this.state.education} className=\"select_in_add_user\" onChange={this.onSelectEducation}>\r\n                                    {educationOptions}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">סוג ניתוח </label>\r\n                                <select value={this.state.surgeryType} className=\"select_in_add_user\" onChange={this.onSelectSurgeryType}>\r\n                                    {surgeryOptions}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <label className=\"labels_in_add_user\">תאריך ניתוח</label>\r\n                                <input className=\"inputs_in_add_user\" name=\"dateOfSurgery\" type=\"date\"\r\n                                       value={surgeryDate} onChange={this.handleChangeInfo} required/>\r\n                            </div>\r\n                            <div className=\"divs_in_add\">\r\n                                <input style={{width: 150}} variant=\"info\" type=\"submit\" value=\"שמור\" className=\"submit_and_reset_buttons\"/>\r\n                            </div>\r\n                        </form> : null}\r\n                    {!this.props.isEdit ?\r\n                        <button style={{width: 150, float:'left',position:'relative'}} variant=\"info\" onClick={this.props.changeToEdit}> עריכת פרטים </button> : null}\r\n                    {this.props.isEdit ?\r\n                        <div className=\"divs_in_add\">\r\n                            <button style={{width: 150,position:'relative'}} variant=\"info\" onClick={this.props.changeToEdit}>הצגת פרטים </button></div> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\"\r\nimport Table from \"react-bootstrap/Table\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport axios from \"axios\";\r\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai'\r\n\r\n\r\n\r\nclass MessagesPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages:[],\r\n            content:''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMessagesPatient();\r\n        this.fetchMessagesDoctor();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.patientUserId && this.props.patientUserId !== prevProps.patientUserId) {\r\n            this.fetchMessagesDoctor();\r\n        }\r\n    }\r\n\r\n    async fetchMessagesPatient(){\r\n        if(sessionStorage.getItem('patient')) {\r\n            var response = await axios.get(\r\n                \" https://moda-medic.herokuapp.com/auth/patients/messages\",\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }\r\n            );\r\n            if (response.data.data) {\r\n                this.setState({messages: response.data.data.reverse()});\r\n            }\r\n        }\r\n    }\r\n\r\n    async fetchMessagesDoctor(){\r\n        if(sessionStorage.getItem('doctor') && this.props.patientUserId) {\r\n            let patientId = encodeURIComponent(this.props.patientUserId);\r\n            var response = await axios.get(\r\n                ` https://moda-medic.herokuapp.com/auth/doctors/messages/${patientId}`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }\r\n            );\r\n            if (response.data.data) {\r\n                this.setState({messages: response.data.data.reverse()});\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async addMessage(){\r\n        if (sessionStorage.getItem('patient')) {\r\n            axios.post(' https://moda-medic.herokuapp.com/auth/patients/messages',\r\n                {\r\n                    content: this.state.content,\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }).then(res => {\r\n                this.fetchMessagesPatient();\r\n                this.setState({content:''})\r\n            });\r\n        }\r\n        if (sessionStorage.getItem('doctor')){\r\n            let patientId = encodeURIComponent(this.props.patientUserId);\r\n            axios.post( ` https://moda-medic.herokuapp.com/auth/doctors/messages/${patientId}`,\r\n                {\r\n                    content: this.state.content,\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }).then(res => {\r\n                this.fetchMessagesDoctor();\r\n                this.setState({content:''})\r\n            });\r\n        }\r\n    }\r\n\r\n    async removeMessage(mId){\r\n        if (sessionStorage.getItem('patient')) {\r\n            console.log(\"patient\")\r\n            axios.post(' https://moda-medic.herokuapp.com/auth/patients/messages/removeMessage',\r\n                {\r\n                    MessageId: mId,\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }).then(res => {\r\n                this.fetchMessagesPatient();\r\n                this.fetchMessagesDoctor();\r\n            });\r\n        }\r\n        else if(sessionStorage.getItem('doctor')) {\r\n            axios.delete(` https://moda-medic.herokuapp.com/auth/doctors/messages/removeMessage/${mId}`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }).then(res => {\r\n                // this.fetchMessagesPatient();\r\n                this.fetchMessagesDoctor();\r\n            });\r\n        }\r\n    }\r\n\r\n    // async updateMessage(mId){\r\n    //     console.log(mId)\r\n    //     if (sessionStorage.getItem('patient')) {\r\n    //         axios.put(' https://moda-medic.herokuapp.com/auth/patients/messages/updateMessage',\r\n    //             {\r\n    //                 MessageId: mId,\r\n    //                 Content: this.state.content\r\n    //             },\r\n    //             {\r\n    //                 headers: {\r\n    //                     'Content-Type': 'application/json',\r\n    //                     'x-auth-token': sessionStorage.getItem(\"token\")\r\n    //                 }\r\n    //             }).then(res => {\r\n    //             this.fetchMessagesPatient();\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState({content: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(sessionStorage.getItem('doctor') && this.props.patientUserId == undefined){\r\n            window.alert(\"אנא בחר מטופל לצורך שליחת הודעה\")\r\n        }else {\r\n            if (this.state.content.length > 150) {\r\n                window.alert(\"אורך הודעה עד 150 תוים!\")\r\n            } else {\r\n                var count = 0;\r\n                var dt2 = new Date();\r\n                this.state.messages.forEach(message => {\r\n                    let dt1 = new Date(message.Date);\r\n                    if (Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24)) <= 1) {\r\n                        count = count + 1;\r\n                    }\r\n                });\r\n            }\r\n            if (count > 2 && sessionStorage.getItem('patient')) {\r\n                window.alert(\"כמות ההודעות מוגבלת ל3 הודעות ביום\")\r\n            } else {\r\n                this.addMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        require(\"./MessagesPage.css\");\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <textarea class=\"textarea\" placeholder=\"כתוב את הודעתך כאן\"  onChange={this.handleChange} />\r\n                    <br/>\r\n                    <input style={{marginRight: \"auto\", marginLeft: \"auto\"}} type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                <br/>\r\n                {this.state.messages.length > 0 &&\r\n                <div class=\"tableMessages\">\r\n                    <Table id=\"mdd_message\" striped bordered hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th style={{width: 230}}>תאריך</th>\r\n                            <th style={{width: 180}}>מוען</th>\r\n                            <th style={{width: 620}}>תוכן ההודעה</th>\r\n                            <th style={{width: 100}}></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.messages.map((message) => (\r\n                                <tr>\r\n                                    <td style={{width: 230}}>{new Date(message.Date).toLocaleString()}</td>\r\n                                    <td style={{width: 180}}>{` ${message.FromFirstName} ${message.FromLastName}`}</td>\r\n                                    <td style={{width: 620, textAlign: \"right\"}}>{message.Content}</td>\r\n                                    <td  style={{width: 100}}><AiFillDelete type=\"button\" class=\"trushIcon\" style={{color: 'black'}} size={20} onClick={()=>this.removeMessage(message.MessageId)}/></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <br/>\r\n\r\n                </div>}\r\n                {this.state.messages.length === 0 &&\r\n                <p> אין הודעות </p>\r\n                }\r\n                <img class=\"imageBox\" src=\"https://image.freepik.com/free-photo/top-view-doctor-working-with-laptop_1232-386.jpg\" style={{width: 450, borderColor: \"black\"}}></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesPage;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"nouislider/distribute/nouislider.min.css\";\r\nimport axios from 'axios';\r\nimport * as Survey1 from \"survey-react\";\r\nimport * as widgets from \"surveyjs-widgets\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"survey-react/survey.css\";\r\n\r\n\r\nSurvey1.StylesManager.applyTheme(\"bootstrap\");\r\n\r\nclass SurveyComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            json:{},\r\n            questionnaireId: this.props.match.params.QuestionnaireID\r\n        }\r\n\r\n        window[\"$\"] = window[\"jQuery\"] = $;\r\n        require(\"emotion-ratings/dist/emotion-ratings.js\");\r\n        this.getQuestionnaire=this.getQuestionnaire.bind(this);\r\n        this.sendAnswersToServer=this.sendAnswersToServer.bind(this);\r\n        this.sendParsedResultToServer=this.sendParsedResultToServer.bind(this);\r\n        this.getQuestionnaire();\r\n    }\r\n\r\n    async getQuestionnaire(){\r\n        //to do: fix questionnaireId dynamic\r\n\r\n        let url = ` https://moda-medic.herokuapp.com/questionnaires/getQuestionnaire/${this.state.questionnaireId}`;\r\n        let response =await axios.get(\r\n            url,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            });\r\n\r\n        if(response.data.data){\r\n            this.setState({\r\n                title: response.data.data.QuestionnaireEnglishText,\r\n                description: response.data.data.QuestionnaireText,\r\n\r\n            });\r\n            //      console.log(response.data.data.QuestionnaireEnglishText);\r\n            //    console.log(response.data.data.QuestionnaireText);\r\n            //  console.log(response.data.data.Questions);\r\n            let questions= response.data.data.Questions;\r\n            let elements=[];\r\n            let json={};\r\n            json.title=response.data.data.QuestionnaireEnglishText;\r\n            for (let i=0;i<questions.length;i++){\r\n                let singleQuestion={};\r\n                singleQuestion.title=questions[i].QuestionText;\r\n                if (questions[i].Type === \"EQ5\"){\r\n                    singleQuestion.type=\"nouislider\";\r\n                    singleQuestion.name=response.data.data.QuestionnaireText;\r\n\r\n                }\r\n                else if (questions[i].Type === \"Single\"){\r\n                    singleQuestion.type= \"radiogroup\";\r\n                    singleQuestion.isRequired= true;\r\n                    let choices=[];\r\n                    for (let j=0;j<questions[i].Answers.length;j++){\r\n                        let answer={};\r\n                        answer.answerID= questions[i].Answers[j].answerID;\r\n                        answer.text=questions[i].Answers[j].answerText;\r\n                        choices.push(answer);\r\n                    }\r\n                    singleQuestion.choices=choices;\r\n                }\r\n\r\n                else if (questions[i].Type === \"multi\"){\r\n                    singleQuestion.type=\"checkbox\";\r\n                    singleQuestion.hasNone= true;\r\n                    singleQuestion.colCount= 5;\r\n                    let choices=[];\r\n                    for (let j=0;j<questions[i].Answers.length;j++){\r\n                        let answer={};\r\n                        answer.answerID= questions[i].Answers[j].answerID;\r\n                        answer.text=questions[i].Answers[j].answerText;\r\n                        choices.push(answer);\r\n                    }\r\n                    singleQuestion.choices=choices;\r\n                }\r\n                else if(questions[i].Type === \"VAS\"){\r\n                    singleQuestion.type= \"emotionsratings\";\r\n                    singleQuestion.choices= [ \"1\", \"2\", \"3\", \"4\", \"5\" ];\r\n                }\r\n\r\n                elements.push(singleQuestion);\r\n            }\r\n            json.elements=elements;\r\n            this.setState({json:json});\r\n            // console.log(json);\r\n\r\n        }\r\n\r\n        else{\r\n            console.alert(\"Problem accured. please try again later.\");\r\n        }\r\n\r\n    }\r\n\r\n    async sendParsedResultToServer(result){\r\n        let url = ` https://moda-medic.herokuapp.com/auth/patients/answers/sendAnswers`;\r\n        const response = await axios.post(\r\n            url,\r\n\r\n            result\r\n            ,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n\r\n        var token = response.data.data;\r\n        if(!token){\r\n            this.setState({\r\n                wrongA: true\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                showID: false,\r\n                showWrongUser: false,\r\n                showQ: false,\r\n                showChange: true,\r\n                register: false,\r\n                token: token\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\nasync sendAnswersToServer(serveryResult){\r\n        if (serveryResult!=null){\r\n            const result={};\r\n            //to do fix dynamicly\r\n            result.UserID=localStorage.getItem(\"UserId\");   //not sure if needed\r\n            result.QuestionnaireID=parseInt(this.state.questionnaireId);\r\n            result.ValidTime=new Date().getTime();\r\n            let totalAnswers=[];\r\n            let counter=0;\r\n            for (var i in serveryResult) {\r\n                if (Object.prototype.hasOwnProperty.call(serveryResult, i)) {\r\n\r\n                    let question={};\r\n                    question.QuestionID=counter;\r\n                    counter++;\r\n                    let answers=[];\r\n\r\n                    if (Array.isArray(serveryResult[i])){\r\n                        for(let j=0; j<serveryResult[i].length;j++){\r\n                            answers.push(serveryResult[i][j].answerID);\r\n                        }\r\n\r\n\r\n                    }else {\r\n                        if (Object.prototype.hasOwnProperty.call(serveryResult[i], \"answerID\"))\r\n                            answers.push(serveryResult[i].answerID);\r\n\r\n                        else\r\n                            answers.push(parseInt(serveryResult[i]));\r\n                    }\r\n\r\n                    question.AnswerID=answers;\r\n                    totalAnswers.push(question);\r\n                }\r\n            }\r\n            result.Answers=totalAnswers;\r\n            console.log (result);\r\n            this.sendParsedResultToServer(result);\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        require(\"../Survey.css\");\r\n        widgets.nouislider(Survey1);\r\n        widgets.emotionsratings(Survey1);\r\n\r\n        const survey = new Survey1.Model(this.state.json);\r\n        survey.onComplete.add(\r\n            (result)=> {\r\n                console.log(JSON.stringify(result.data, null, 3));\r\n                this.sendAnswersToServer(result.data);\r\n                window.location.href = \"http://localhost:3000/ModaMedicWeb/questionnaires\";\r\n\r\n            });\r\n\r\n\r\n        return (\r\n// <body style={{alignRight: \"auto\", alignLeft: \"auto\"}}>\r\n            <Survey1.Survey\r\n                model={survey}\r\n                showQuestionNumbers={\"on\"}\r\n            />\r\n// </body>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SurveyComponent;\r\n","import React, {Component} from \"react\"\r\nimport axios from 'axios';\r\nimport \"../TableQuestionnaire.css\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport SurveyComponent from './SurveyComponent';\r\nimport Table from 'react-bootstrap/Table';\r\nimport {borderColor} from \"@material-ui/system\";\r\n//   import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nclass QuestionnaireManger extends Component {\r\n    constructor(props) {\r\n        super()\r\n        if(props.user && sessionStorage.getItem('doctor')) {\r\n            var q2 = false, q3 = false, q4 = false, q5 = false;\r\n            for (var i = 0; i < props.user[\"Questionnaires\"].length; i++) {\r\n                if (props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 1) {\r\n                    q2 = true;\r\n                } else if (props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 2) {\r\n                    q3 = true;\r\n                } else if (props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 3) {\r\n                    q4 = true;\r\n                } else if (props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] === 5) {\r\n                    q5 = true;\r\n                }\r\n            }\r\n        }\r\n        this.state = {\r\n            user: props.user,\r\n            showPopup: false,\r\n            showPopupQ: false,\r\n            new_date: \"\",\r\n            Questionnaires: [],\r\n            quest1: false,\r\n            quest2: q2,\r\n            quest3: q3,\r\n            quest4: q4,\r\n            quest5: q5,\r\n            quest6: false,\r\n            questionnairesArr: [],\r\n            questionnairesArrDoctor: [],\r\n            type: sessionStorage.getItem('type'),\r\n            firstTime: true\r\n        };\r\n\r\n\r\n        this.presentQuestionnaire = this.presentQuestionnaire.bind(this);\r\n        this.presentQuestionnaire();\r\n        this.changeDate = this.changeDate.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.togglePopupQ = this.togglePopupQ.bind(this);\r\n        this.handleSubmitQ = this.handleSubmitQ.bind(this)\r\n    }\r\n\r\n    async presentQuestionnaire(){\r\n        if(sessionStorage.getItem('patient')) {\r\n            let url = ' https://moda-medic.herokuapp.com/auth/usersAll/getUserQuestionnaire';\r\n            let response = await axios.get(\r\n                url,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                });\r\n\r\n            if (response.data.data) {\r\n                //console.log (response.data.data);\r\n                let questionnairesArrTemp = [];\r\n                //run over questionareest\r\n                for (var i = 0; i < response.data.data.length; i++) {\r\n                    questionnairesArrTemp.push([response.data.data[i].QuestionnaireID, response.data.data[i].QuestionnaireText]);\r\n                }\r\n\r\n                this.setState({\r\n                    questionnairesArr: questionnairesArrTemp\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        //     let date = (new Date(this.state.new_date)).getTime();\r\n        //     let id = this.props.user[\"UserID\"];\r\n        //     axios.post(' https://moda-medic.herokuapp.com/auth/usersAll/changeDateOfSurgery',\r\n        //         {\r\n        //             UserID: id,\r\n        //             DateOfSurgery: date\r\n        //         },\r\n        //         {\r\n        //             headers: {\r\n        //                 'Content-Type': 'application/json',\r\n        //                 'x-auth-token': sessionStorage.getItem(\"token\")\r\n        //             }\r\n        //         }).then(res => {\r\n        //         window.alert(\"התאריך שונה בהצלחה\")\r\n        //         this.togglePopup();\r\n        //     });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmitQ(e){\r\n        e.preventDefault();\r\n        if(sessionStorage.getItem('doctor')) {\r\n            var Questionnaires = [];\r\n            if (this.state.quest2) {\r\n                Questionnaires.push({\r\n                    \"QuestionnaireID\": 1,\r\n                    \"QuestionnaireText\": \"תפקוד גב תחתון\"\r\n                })\r\n            }\r\n            if (this.state.quest3) {\r\n                Questionnaires.push({\r\n                    \"QuestionnaireID\": 2,\r\n                    \"QuestionnaireText\": \"תפקוד צוואר\"\r\n                })\r\n            }\r\n            if (this.state.quest4) {\r\n                Questionnaires.push({\r\n                    \"QuestionnaireID\": 3,\r\n                    \"QuestionnaireText\": \"תפקוד גף תחתון\"\r\n                })\r\n            }\r\n            if (this.state.quest5) {\r\n                Questionnaires.push({\r\n                    \"QuestionnaireID\": 5,\r\n                    \"QuestionnaireText\": \"איכות חיים\"\r\n                });\r\n            }\r\n            let id = this.props.user[\"UserID\"];\r\n            axios.post(' https://moda-medic.herokuapp.com/auth/usersAll/changeUserQuestionnaire',\r\n                {\r\n                    UserID: id,\r\n                    Questionnaires: Questionnaires\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }).then(res => {\r\n                window.alert(\"השאלונים שונו בהצלחה\");\r\n                this.setState({\r\n                    questionnairesArrDoctor: Questionnaires.map(q => q.QuestionnaireText),\r\n                    showPopupQ: !this.state.showPopupQ\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    changeQuest(){\r\n        this.togglePopupQ();\r\n    }\r\n\r\n    changeDate(){\r\n        this.togglePopup();\r\n    }\r\n\r\n    togglePopupQ() {\r\n        this.setState({\r\n            showPopupQ: !this.state.showPopupQ\r\n        });\r\n\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    PopupQ() {\r\n        require(\"../PatientData.css\");\r\n        return (\r\n            <div className='popup'>\r\n                <div className='popup_innerCQ' >\r\n                    <div className=\"line_x\">\r\n                        <button onClick={this.togglePopupQ} id=\"x\">x</button>\r\n                    </div>\r\n                    <h4 id=\"h4C\">שינוי שאלונים</h4>\r\n                    <form id=\"formQ\" onSubmit={this.handleSubmitQ}>\r\n                        <div className=\"line\">\r\n                            <input type=\"checkbox\"\r\n                                   className=\"cInput\"\r\n                                   name=\"quest2\"\r\n                                   checked={this.state.quest2}\r\n                                   onChange={this.handleChange}\r\n                            />\r\n                            <label className=\"mLabel\">\r\n                                תפקוד גב תחתון\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"line\">\r\n                            <input type=\"checkbox\"\r\n                                   className=\"cInput\"\r\n                                   name=\"quest3\"\r\n                                   checked={this.state.quest3}\r\n                                   onChange={this.handleChange}\r\n                            />\r\n                            <label className=\"mLabel\">\r\n                                תפקוד צוואר\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"line\">\r\n                            <input type=\"checkbox\"\r\n                                   className=\"cInput\"\r\n                                   name=\"quest4\"\r\n                                   checked={this.state.quest4}\r\n                                   onChange={this.handleChange}\r\n                            />\r\n                            <label className=\"mLabel\">\r\n                                תפקוד גף תחתון\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"line\">\r\n                            <input type=\"checkbox\"\r\n                                   className=\"cInput\"\r\n                                   name=\"quest5\"\r\n                                   checked={this.state.quest5}\r\n                                   onChange={this.handleChange}\r\n                            />\r\n                            <label className=\"mLabel\">\r\n                                איכות חיים\r\n                            </label>\r\n                        </div>\r\n                        <button  id=\"changeQ\" type=\"sumbit\" >שינוי</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        require(\"../Table.css\");\r\n        var first = true;\r\n        if(this.props.user && this.state.firstTime) {\r\n            for (var i = 0; i < this.props.user[\"Questionnaires\"].length; i++) {\r\n                if (this.props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] !== 0 && this.props.user[\"Questionnaires\"][i][\"QuestionnaireID\"] !== 6) {\r\n                    // if (!first) {\r\n                    //     Questionnaires += \", \"\r\n                    // } else {\r\n                    //     first = false;\r\n                    // }\r\n                    this.state.questionnairesArrDoctor.push(this.props.user[\"Questionnaires\"][i][\"QuestionnaireText\"]);\r\n                }\r\n            }\r\n            this.state.firstTime = false;\r\n        }\r\n        // if (Questionnaires.charAt(Questionnaires.length - 1) === \" \") {\r\n        //     Questionnaires = Questionnaires.substring(0, Questionnaires.length - 2);\r\n        // }\r\n\r\n        return(\r\n            <div>\r\n                {this.state.type === 'patient' ?\r\n                    <div style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>\r\n                        {/*<p style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>מטופל יקר, לפניך השאלונים המשוייכים אליך כחלק מטיפולך, אנא לחץ על השאלון המבוקש לצורך מענה.</p>*/}\r\n                        <table id='customers' style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>\r\n                            <thead style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>\r\n                            <h6><b>מטופל יקר,</b></h6>\r\n                            <h6><b>לפניך השאלונים המוגדרים כחלק מטיפולך. אנא לחץ על השאלון המבוקש לצורך מענה</b></h6>\r\n                            <h6><b>תודה על שיתוף הפעולה!</b></h6>\r\n                            </thead>\r\n                            <tr style={{width: \"50%\" , textWeight: \"large\"}}>\r\n                                {this.state.questionnairesArr.map(id => (\r\n                                    <th  id = \"mdd\" scope=\"row\" style={{width: \"100%\", textWeight: \"large\"  }} >\r\n                                        <u>\r\n                                            <Link to={`/userQuestionnaire/${id[0]}`} > {id[1]}\r\n                                            </Link></u>\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </table>\r\n                        <br/>\r\n                        <div >\r\n                        </div>\r\n                    </div> : this.state.type === 'doctor' && this.props.user ?\r\n                        <div style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>\r\n                            <thead style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>\r\n                            <h4><b>לפניך השאלונים המותאמים למטופל הנ\"ל:</b></h4>\r\n                            </thead>\r\n                            <table id='customers' style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>\r\n                                <thead style={{alignRight: \"auto\", alignLeft: \"auto\", textWeight: \"large\"}}>\r\n                                </thead>\r\n                                <tr style={{width: \"50%\" , textWeight: \"large\"}}>\r\n                                    {this.state.questionnairesArrDoctor.map(id => (\r\n                                        <th  id = \"mdd\" scope=\"row\" style={{width: \"100%\", textWeight: \"large\" }} >\r\n                                           <a> {id}</a>\r\n                                        </th>\r\n                                    ))}\r\n                                </tr>\r\n                            </table>\r\n                            {/*<label className=\"labelData\" >{Questionnaires} </label>*/}\r\n                            <button className=\"changeDate\" onClick={() => this.changeQuest()}>\r\n                                שינוי השאלונים\r\n                            </button>\r\n\r\n                        </div>: null}\r\n                <div>\r\n                    <img className={'imageBox'}\r\n                         src={\"https://image.freepik.com/free-photo/doctor-filling-up-life-insurance-form_53876-20493.jpg\"}\r\n                         style={{width: 450, borderColor: \"black\"}}></img>\r\n\r\n                </div>\r\n                {this.state.showPopupQ ?\r\n                    this.PopupQ() : null\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default QuestionnaireManger;","import React, {Component} from \"react\"\r\nimport axios from 'axios';\r\nimport DisplayButton from './DisplayButton';\r\nimport QuestionnaireManger from \"./Questionnaire/QuestionnaireManger\";\r\n\r\nclass PatientSearchNew extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        var date = new Date();\r\n        var first_date = new Date();\r\n        first_date.setMonth(first_date.getMonth() - 3)\r\n        var three_month = first_date.toISOString().split(\"T\")[0];\r\n        // var three_month = first_date.toLocaleDateString().replace('.', \"-\");\r\n        console.log(three_month)\r\n        var x = date.toISOString().split(\"T\")[0];\r\n        this.state = {\r\n            end_date: x,\r\n            start_date: three_month,\r\n            steps: true,\r\n            distance : true,\r\n            weather: true,\r\n            calories: true,\r\n            sleeping_hours: true,\r\n            dataArr: [],\r\n            periodicAnswers: [],\r\n            dailyA: [],\r\n            dailyQ: true,\r\n            perQ: true,\r\n            date: 0,\r\n            showDaily: true,\r\n            weekly: false,\r\n            monthly: false,\r\n            user: {},\r\n            ready: false,\r\n            todayDate: x,\r\n            className: \"normal\",\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.getRequest = this.getRequest.bind(this);\r\n        this.selectUser = this.selectUser.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n        if(name === \"showDaily\"){\r\n            this.setState({\r\n                showDaily: true,\r\n                weekly: false,\r\n                monthly: false\r\n            })\r\n        }\r\n        else if(name === \"weekly\"){\r\n            this.setState({\r\n                showDaily: false,\r\n                weekly: true,\r\n                monthly: false\r\n            })\r\n        }\r\n        else if(name === \"monthly\"){\r\n            this.setState({\r\n                showDaily: false,\r\n                weekly: false,\r\n                monthly: true\r\n            })\r\n        }\r\n    }\r\n\r\n    async getRequest(name,url){\r\n        if(sessionStorage.getItem('doctor')){\r\n            return this.getDoctorRequest(name, url);\r\n        }\r\n        if(sessionStorage.getItem('patient')){\r\n            return this.getPatientRequest(name, url);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async getDoctorRequest(name, url) {\r\n        if (this.props.patientUserId) {\r\n            let getUrl = ' https://moda-medic.herokuapp.com/auth/doctors/' + url + '?UserID=' + this.props.patientUserId;\r\n            if (this.state.start_date !== \"\") {\r\n                var date = new Date(this.state.start_date)\r\n                let start_time = date.getTime();\r\n                getUrl += (\"&start_time=\" + start_time);\r\n            }\r\n            if (this.state.end_date !== \"\") {\r\n                date = new Date(this.state.end_date)\r\n                date = new Date(date.getTime() + 86400000);\r\n                let end_time = date.getTime();\r\n                getUrl += (\"&end_time=\" + end_time);\r\n            }\r\n            const response = await axios.get(\r\n                getUrl,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': sessionStorage.getItem(\"token\")\r\n                    }\r\n                }\r\n            );\r\n            if (response.data.message === \"Not Found\") {\r\n                return null;\r\n            }\r\n            return ({\r\n                values: response.data.data,\r\n                name: name,\r\n                numOfUsers: response.data.data.length\r\n            });\r\n        }\r\n    }\r\n\r\n    async getPatientRequest(name, url){\r\n        let getUrl = ` https://moda-medic.herokuapp.com/auth/patients/${url}`;\r\n        let start_time;\r\n        if(this.state.start_date !== \"\"){\r\n            var date = new Date(this.state.start_date);\r\n            start_time = date.getTime();\r\n            // getUrl += (\"&start_time=\" + start_time);\r\n        }\r\n        let end_time;\r\n        if(this.state.end_date !== \"\"){\r\n            date = new Date(this.state.end_date)\r\n            date = new Date(date.getTime() + 86400000);\r\n            end_time = date.getTime();\r\n        }\r\n        console.log(getUrl)\r\n        const response = await axios.get(\r\n            getUrl,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                },\r\n                params: {\r\n                    start_time: start_time,\r\n                    end_time: end_time\r\n                }\r\n            }\r\n        );\r\n        return({\r\n            values: response.data.data,\r\n            name : name,\r\n            numOfUsers: response.data.data.length\r\n        });\r\n    }\r\n\r\n\r\n    async selectUser(key) {\r\n        let arr = this.state.dataArr;\r\n        let d = this.state.dailyA;\r\n        var da = [];\r\n        var user;\r\n        var sDate;\r\n        for(var i = 0; i < this.state.numOfUsers; i++){\r\n            if(d[i] && d[i].UserID[\"BirthDate\"] === key){\r\n                da = d[i].docs;\r\n                sDate = d[i].UserID[\"DateOfSurgery\"];\r\n                user = d[i].UserID;\r\n            }\r\n        }\r\n        for(i = 0; i < this.state.questionnaire.values.length; i++){\r\n            if(this.state.questionnaire.values[i].UserID[\"BirthDate\"] === key){\r\n                this.state.periodicAnswers.push(this.state.questionnaire.values[i][\"docs\"]);\r\n                sDate = this.state.questionnaire.values[i].UserID[\"DateOfSurgery\"];\r\n                user = this.state.questionnaire.values[i].UserID;\r\n            }\r\n        }\r\n        for(i = 0; i < arr.length; i++){\r\n            let values = [];\r\n            if(arr[i]){\r\n                for(var j = 0; j < arr[i].values.length; j++){\r\n                    if(arr[i].values[j].UserID[\"BirthDate\"] === key){\r\n                        values = arr[i].values[j].docs;\r\n                        sDate = arr[i].values[j].UserID[\"DateOfSurgery\"];\r\n                        user = arr[i].values[j].UserID;\r\n                    }\r\n                }\r\n                arr[i].values = values;\r\n            }\r\n        }\r\n        this.setState({\r\n            dataArr: arr,\r\n            dailyA: da,\r\n            date: sDate,\r\n            user: user,\r\n            ready: true,\r\n            className: \"normal\"\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        if(event){\r\n            event.preventDefault()\r\n        }\r\n\r\n        this.setState({\r\n            ready: false,\r\n            className: \"waiting\",\r\n            periodicAnswers: []\r\n        });\r\n\r\n        var numOfUsers = 0;\r\n        var arr = [];\r\n        let response = await this.getRequest(\"צעדים\", \"metrics/getSteps\");\r\n        if(!response){\r\n            window.alert(\"לא קיים מטופל\");\r\n            return;\r\n        }\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"מרחק\", \"metrics/getDistance\");\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"קלוריות\", \"metrics/getCalories\");\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"מזג האוויר\", \"metrics/getWeather\");\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"שעות שינה\", \"metrics/getSleep\");\r\n        if(response.values[0][\"docs\"].length > 0){\r\n            arr.push(response);\r\n        }\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        response = await this.getRequest(\"תשובות יומיות\", \"answers/getDailyAnswers\");\r\n        if(response.numOfUsers > numOfUsers){\r\n            numOfUsers = response.numOfUsers;\r\n        }\r\n        let responseQ = await this.getRequest(\"שאלון תקופתי\", \"answers/getPeriodicAnswers\");\r\n\r\n        this.setState({\r\n            dataArr : arr,\r\n            dailyA: response.values,\r\n            numOfUsers: numOfUsers,\r\n            questionnaire: responseQ\r\n        });\r\n\r\n        if(numOfUsers === 1) {\r\n            let x = this.state.dailyA[0].UserID[\"BirthDate\"];\r\n            if(!x)\r\n                x = this.state.periodicAnswers[0].UserID[\"BirthDate\"];\r\n            if(!x)\r\n                x = this.state.dataArr[0][0].UserID[\"BirthDate\"];\r\n            this.selectUser(x)\r\n        } else {\r\n            alert(\"More than 1 user found!!!!!\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        require(\"./search.css\");\r\n        var today = (new Date()).toISOString().split(\"T\")[0];\r\n        return (\r\n            <div>\r\n                <div className=\"dates\">\r\n                    <label className=\"cSearch\">\r\n                        בחר תאריכים: מ\r\n                    </label>\r\n                    <input className=\"dSearch\"\r\n                           type=\"date\"\r\n                           name=\"start_date\"\r\n                           value={this.state.start_date}\r\n                           onChange={this.handleChange}\r\n                           max={this.state.end_date}\r\n                    />\r\n                    <label className=\"aSearch\">\r\n                        עד\r\n                    </label>\r\n                    <input className=\"dSearch\"\r\n                           type=\"date\"\r\n                           name=\"end_date\"\r\n                           value={this.state.end_date}\r\n                           onChange={this.handleChange}\r\n                           max={today}\r\n                    />\r\n                </div>\r\n                <div className=\"mdd\">\r\n                    <label className=\"mLabel\">\r\n                        בחר מדדים:\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"steps\"\r\n                           checked={this.state.steps}\r\n                           onChange={this.handleChange}\r\n                    /> <p class=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        צעדים\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"distance\"\r\n                           checked={this.state.distance}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        מרחק\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"weather\"\r\n                           checked={this.state.weather}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        מזג האוויר\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"calories\"\r\n                           checked={this.state.calories}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        קלוריות\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"sleeping_hours\"\r\n                           checked={this.state.sleeping_hours}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        שעות שינה\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"dailyQ\"\r\n                           checked={this.state.dailyQ}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        שאלון יומי\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"perQ\"\r\n                           checked={this.state.perQ}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        שאלונים תקופתיים\r\n                    </label>\r\n                </div>\r\n                <div className=\"mddShow\">\r\n                    <label className=\"mLabel\">\r\n                        בחר אופן הצגה:\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"showDaily\"\r\n                           checked={this.state.showDaily}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        יומי\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"weekly\"\r\n                           checked={this.state.weekly}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        שבועי\r\n                    </label>\r\n                    <input className=\"cInput\"\r\n                           type=\"checkbox\"\r\n                           name=\"monthly\"\r\n                           checked={this.state.monthly}\r\n                           onChange={this.handleChange}\r\n                    />\r\n                    <p className=\"space\"></p>\r\n                    <label className=\"mLabel\">\r\n                        חודשי\r\n                    </label>\r\n                </div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <button>הצג תוצאות</button>\r\n                </form>\r\n                <br />\r\n                <DisplayButton\r\n                    dataArr={this.state.dataArr}\r\n                    steps={this.state.steps}\r\n                    distance={this.state.distance}\r\n                    calories={this.state.calories}\r\n                    weather={this.state.weather}\r\n                    sleep={this.state.sleeping_hours}\r\n                    dailyA={this.state.dailyA}\r\n                    periodicAnswers={this.state.periodicAnswers}\r\n                    dailyQ={this.state.dailyQ}\r\n                    perQ={this.state.perQ}\r\n                    date={this.state.date}\r\n                    showDaily={this.state.showDaily}\r\n                    weekly={this.state.weekly}\r\n                    monthly={this.state.monthly}\r\n                    user={this.state.user}\r\n                    ready={this.state.ready}\r\n                />\r\n                {/*<QuestionnaireManger user={this.state.user}*/}\r\n                {/*/>*/}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientSearchNew\r\n","import React, {Component} from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport axios from \"axios\";\r\nimport {Card} from \"react-bootstrap\";\r\n// ES5 require\r\nimport ImageMapper from \"react-image-mapper\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {BsDownload} from \"react-icons/bs\";\r\nimport {AiFillDelete} from \"react-icons/ai\";\r\n\r\nvar MAP = {\r\n    name: \"my-map\",\r\n    areas: [\r\n        {\r\n            name: \"knee\",\r\n            shape: \"circle\",\r\n            coords: [330, 300, 5],\r\n            preFillColor: \"#ff1313\",\r\n            fillColor: \"white\",\r\n            lineWidth: 1\r\n        },\r\n        {\r\n            name: \"neck\",\r\n            shape: \"circle\",\r\n            coords: [350, 80, 5],\r\n            preFillColor: \"#ff1313\",\r\n            fillColor: \"white\",\r\n            lineWidth: 1\r\n        },\r\n        {\r\n            name: \"back\",\r\n            shape: \"circle\",\r\n            coords: [350, 170, 5],\r\n            preFillColor: \"#ff1313\",\r\n            fillColor: \"white\",\r\n            lineWidth: 1\r\n        },   {\r\n            name: \"shoulder\",\r\n            shape: \"circle\",\r\n            coords: [310, 95, 5],\r\n            preFillColor: \"#ff1313\",\r\n            fillColor: \"white\",\r\n            lineWidth: 1\r\n        }, {\r\n            name: \"elbow\",\r\n            shape: \"circle\",\r\n            coords: [255, 105, 5],\r\n            preFillColor: \"#ff1313\",\r\n            fillColor: \"white\",\r\n            lineWidth: 1\r\n        },{\r\n            name: \"ankle\",\r\n            shape: \"circle\",\r\n            coords: [333, 382, 5],\r\n            preFillColor: \"#ff1313\",\r\n            fillColor: \"white\",\r\n            lineWidth: 1\r\n        },{\r\n            name: \"hip\",\r\n            shape: \"circle\",\r\n            coords: [325, 200, 5],\r\n            preFillColor: \"#ff1313\",\r\n            fillColor: \"white\",\r\n            lineWidth: 1\r\n        }\r\n    ]\r\n};\r\n\r\n// var URL = \"https://cdn1.bbcode0.com/uploads/2021/3/12/44020e8f94bb6f1e1f5daefa99e5dbbd-full.jpg?__cf_chl_jschl_tk__=44f056c180321e3187e8e785fe9ebc8efea1a510-1615559897-0-AYcqoygPVQpfg88iWu4Xkb0s-sdo06kYRqVG_irUgjBbap22wgX3WGpiolYjKZ3M4cms0fNzEtJkKjy8vSgtWGXTBQYx1CVPQ2HdxLMw9kux4rfv_r3r6T7CHIQoP_1_g4WcuKAshfV-kpDefRb0Wq5IJzkr4_kg8jrupQA9PqkYDX7dGPNljLT11XxebURRt3Kkohj-Np1vmDnT8mg6laQlgLDEMHr-pWkZTODWrUDrvgjg0bOGM0XMBW21Rj4Jw7jaLYMEiCltPIKFGBj4fCjzi8ebMV6rnbLSE-uEa4OA7AzwnoZrbXOyWDOWPVYor3OFFCKQ9KS59WnIaaJ2gAAzKKPiux-8kKJIJAmXRvVze9NcyC7hFUtki1qJCiACjeh0OQBH-tR_yzk4yO3QlKk\";\r\nvar URL = \"https://modernorthonj.com/wp-content/uploads/2020/03/body-schematic-transparent-2048x1257.jpg\"\r\n\r\nclass InstructionsSurgery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n        this.state = {\r\n            instructions: undefined,\r\n            instructionsForGrid: [],\r\n            // numPages: null,\r\n            // pageNumber: 1,\r\n\r\n            headerNames: {\r\n                \"knee\": \"פרוטוקולי שיקום - ברך\",\r\n                \"shoulder\": \"פרוטוקולי שיקום - כתף\",\r\n                \"hip\" : \"פרוטוקולי שיקום - ירך\",\r\n                \"ankle\" : \"פרוטוקולי שיקום - קרסול\",\r\n                \"elbow\" : \"פרוטוקולי שיקום - מרפק\",\r\n                \"back\" : \"פרוטוקולי שיקום - גב\",\r\n                \"neck\" : \"פרוטוקולי שיקום - צוואר\"\r\n            },\r\n            categoryToImage: {\r\n                \"knee\": require('./ImagesOrth/ACL.jpg'),\r\n                \"shoulder\": require('./ImagesOrth/REVERSETSR.jpg'),\r\n                \"hip\" : require('./ImagesOrth/Hip.png'),\r\n                \"ankle\" : require('./ImagesOrth/Ankle.jpg'),\r\n                \"elbow\" : require('./ImagesOrth/Elbow.jpg'),\r\n                \"back\" : require('./ImagesOrth/Back.jpg'),\r\n                \"neck\" : require('./ImagesOrth/Neck.jpg'),\r\n            },\r\n\r\n            instructionsByCategory: {},\r\n            showInstructions: false,\r\n            showPopup: false,\r\n            selectedFile: null,\r\n            newInstructionCategory: \"knee\",\r\n            newInstructionTitle: \"\",\r\n            categories: {\r\n                \"ברך\": \"knee\",\r\n                \"גב\": \"back\",\r\n                \"כתף\": \"shoulder\",\r\n                \"קרסול\": \"hip\",\r\n                \"ירך\" :  \"ankle\",\r\n                \"מרפק\":\"elbow\",\r\n                \"צוואר\": \"neck\"\r\n            },\r\n        };\r\n\r\n        this.getInstructions = this.getInstructions.bind(this);\r\n        this.changePdfToShow = this.changePdfToShow.bind(this);\r\n        // this.nextPage = this.nextPage.bind(this);\r\n        // this.previousPage = this.previousPage.bind(this);\r\n        this.getInitialState = this.getInitialState.bind(this);\r\n        this.load = this.load.bind(this);\r\n        this.clicked = this.clicked.bind(this);\r\n        this.clickedOutside = this.clickedOutside.bind(this);\r\n        this.moveOnImage = this.moveOnImage.bind(this);\r\n        this.enterArea = this.enterArea.bind(this);\r\n        this.leaveArea = this.leaveArea.bind(this);\r\n        this.moveOnArea = this.moveOnArea.bind(this);\r\n        this.getTipPosition = this.getTipPosition.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.selectFile = this.selectFile.bind(this);\r\n        this.upload = this.upload.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.onSelectCategoryChosen =  this.onSelectCategoryChosen.bind(this)\r\n        this.handleChange =  this.handleChange.bind(this)\r\n        this.handleSubmit =  this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    getInitialState() {\r\n        return {hoveredArea: null, msg: null, moveMsg: null};\r\n    }\r\n\r\n    load() {\r\n        // this.setState({msg: \"Interact with image !\"});\r\n    }\r\n\r\n    clicked(area) {\r\n        if(area.name === this.state.category) {\r\n            this.setState({\r\n                showInstructions: !this.state.showInstructions,\r\n                category: \"\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                // msg: `You clicked on ${area.shape} at coords ${JSON.stringify(\r\n                //     area.coords\r\n                // )} !`,\r\n                category: area.name,\r\n                showInstructions: true,\r\n            }, this.focusOnInstructions);\r\n        }\r\n    }\r\n\r\n    focusOnInstructions() {\r\n        if(this.state.showInstructions) {\r\n            var elmnt = document.getElementById(\"inst\");\r\n            elmnt.scrollIntoView();\r\n        }\r\n    }\r\n\r\n    clickedOutside(evt) {\r\n        const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY};\r\n        this.setState({\r\n            msg: `You clicked on the image at coords ${JSON.stringify(coords)} !`\r\n        });\r\n    }\r\n\r\n    moveOnImage(evt) {\r\n        const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY};\r\n        this.setState({\r\n            moveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !`\r\n        });\r\n    }\r\n\r\n    enterArea(area) {\r\n        this.setState({\r\n            hoveredArea: area,\r\n            msg: `You entered ${area.shape} ${area.name} at coords ${JSON.stringify(\r\n                area.coords\r\n            )} !`\r\n        });\r\n    }\r\n\r\n    leaveArea(area) {\r\n        this.setState({\r\n            hoveredArea: null,\r\n            msg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(\r\n                area.coords\r\n            )} !`\r\n        });\r\n    }\r\n\r\n    moveOnArea(area, evt) {\r\n        const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY};\r\n        this.setState({\r\n            moveMsg: `You moved on ${area.shape} ${\r\n                area.name\r\n            } at coords ${JSON.stringify(coords)} !`\r\n        });\r\n    }\r\n\r\n    getTipPosition(area) {\r\n        return {top: `${area.center[1]}px`, left: `${area.center[0]}px`};\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getInstructions();\r\n    }\r\n\r\n\r\n    async getInstructions() {\r\n        let respone = await axios.get(' https://moda-medic.herokuapp.com/auth/usersAll/instructions',\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            });\r\n        if (respone.data.data) {\r\n            let instructionsArr = [];\r\n            for (var i = 0; i < respone.data.data.length; i++) {\r\n                instructionsArr.push(respone.data.data[i]);\r\n            }\r\n            let instructionsForGrid = [];\r\n            for (var i = 0; i < instructionsArr.length; i = i + 2) {\r\n                if (instructionsArr[i + 1]) {\r\n                    instructionsForGrid.push({\"obj1\": instructionsArr[i], \"obj2\": instructionsArr[i + 1]});\r\n                } else {\r\n                    instructionsForGrid.push({\"obj1\": instructionsArr[i], \"obj2\": {}});\r\n                }\r\n            }\r\n            this.setState({\r\n                instructions: instructionsArr,\r\n                instructionsForGrid: instructionsForGrid,\r\n                instructionsByCategory: this.groupArrayOfObjects(instructionsArr, \"Category\")\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    groupArrayOfObjects(list, key) {\r\n        return list.reduce(function (rv, x) {\r\n            (rv[x[key]] = rv[x[key]] || []).push(x);\r\n            return rv;\r\n        }, {});\r\n    };\r\n\r\n    changePdfToShow(e) {\r\n        console.log(e);\r\n        if (this.state.pdfToShow === e) {\r\n            this.setState({pdfToShow: null})\r\n        } else {\r\n            this.setState({pdfToShow: e, showPopup: true});\r\n        }\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    onSelectCategoryChosen(event) {\r\n        let value = this.state.categories[event.target.options[event.target.options.selectedIndex].label];\r\n        this.setState({\r\n            newInstructionCategory: value\r\n        });\r\n        // console.log(this.state.categories[event.target.options.selectedIndex])\r\n    }\r\n    // On file select (from the pop up)\r\n    onFileChange = event => {\r\n\r\n        // Update the state\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n\r\n    };\r\n\r\n    downloadFile = (instruction) => {\r\n        axios({\r\n            url: `https://moda-medic.herokuapp.com/auth/usersAll/instructions/${instruction.InstructionId}`,\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n            headers: {\r\n                'x-auth-token': sessionStorage.getItem(\"token\")\r\n            }\r\n        }).then((response) => {\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', `${instruction.Title}.pdf`); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        });\r\n    };\r\n\r\n    uploadFile(category, title, file, onUploadProgress) {\r\n        let formData = new FormData();\r\n        formData.append(\"Category\", category);\r\n        formData.append(\"Title\", title);\r\n        formData.append(\"pdf\", file);\r\n        return axios.post(\"https://moda-medic.herokuapp.com/auth/doctors/instructions\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                'x-auth-token': sessionStorage.getItem(\"token\")\r\n            },\r\n            onUploadProgress,\r\n        });\r\n    }\r\n\r\n    selectFile(event) {\r\n        this.setState({\r\n            selectedFiles: event.target.files,\r\n        });\r\n    }\r\n\r\n    upload() {\r\n        let currentFile = this.state.selectedFiles[0];\r\n        this.setState({\r\n            progress: 0,\r\n            currentFile: currentFile,\r\n        });\r\n\r\n        this.uploadFile(this.state.newInstructionCategory, this.state.newInstructionTitle, currentFile, (event) => {\r\n            this.setState({\r\n                progress: Math.round((100 * event.loaded) / event.total),\r\n            });\r\n        })\r\n            .then((response) => {\r\n                this.setState({\r\n                    message: response.data.message,\r\n                });\r\n                window.alert(\"פרוטוקול הועלה בהצלחה!\");\r\n                this.setState({newInstructionTitle : '',  progress: 0, currentFile: undefined, selectedFiles:undefined});\r\n                this.getInstructions();\r\n\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    progress: 0,\r\n                    message: \"Could not upload the file!\",\r\n                    currentFile: undefined,\r\n                });\r\n            });\r\n\r\n        this.setState({\r\n            selectedFiles: undefined,\r\n        });\r\n    }\r\n\r\n    // On file upload (click the upload button)\r\n    onFileUpload = () => {\r\n        // Create an object of formData\r\n        const formData = new FormData();\r\n        // Update the formData object\r\n        formData.append(\r\n            \"myFile\",\r\n            this.state.selectedFile,\r\n            this.state.selectedFile.name\r\n        );\r\n\r\n        // Details of the uploaded file\r\n        console.log(this.state.selectedFile);\r\n        // Request made to the backend api\r\n        // Send formData object\r\n        // axios.post(\"api/uploadfile\", formData);\r\n    };\r\n\r\n    // File content to be displayed after\r\n    // file upload is complete\r\n    fileData = () => {\r\n        if (this.state.selectedFile) {\r\n            return (\r\n                <div>\r\n                    <h2>File Details:</h2>\r\n                    <p>File Name: {this.state.selectedFile.name}</p>\r\n                    <p>File Type: {this.state.selectedFile.type}</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <br />\r\n                    <h4>Choose before Pressing the Upload button</h4>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    async removeInstruction(eId){\r\n        if(sessionStorage.getItem('doctor')) {\r\n            const r = window.confirm(\"האם אתה בטוח שאתה רוצה למחוק את הפרוטוקול?\");\r\n            if (r) {\r\n                await axios.delete(` https://moda-medic.herokuapp.com/auth/doctors/instructions/${eId}`,\r\n                    {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'x-auth-token': sessionStorage.getItem(\"token\")\r\n                        }\r\n                    });\r\n                this.getInstructions()\r\n            }\r\n        }\r\n    }\r\n    handleChange(e) {\r\n        if (e.target.name === \"newInstructionTitle\") {\r\n            this.setState({[e.target.name]: e.target.value})}\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.upload();\r\n    }\r\n\r\n    renderUploadFile() {\r\n        const {\r\n            selectedFiles,\r\n            currentFile,\r\n            progress,\r\n            message,\r\n        } = this.state;\r\n        let optionItems = Object.keys(this.state.categories).map((category) =>\r\n            <option key={category} >{category}</option>\r\n        );\r\n        return <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div className=\"divs_in_add_pdf\">\r\n                <label className=\"labels_in_add_instructions\">כותרת הפרוטוקול: </label>\r\n                <input className=\"inputs_in_add_instructions\" name=\"newInstructionTitle\" type=\"text\"\r\n                       value={this.state.newInstructionTitle} onChange={e => this.handleChange(e)} required/>\r\n            </div>\r\n            <div className=\"divs_in_add_pdf\">\r\n                <label className=\"labels_in_add_instructions\">קטגוריית הפרוטוקול:    </label>\r\n                <select  className=\"select_in_add_instructions\" onChange={this.onSelectCategoryChosen} required>\r\n                    {optionItems}\r\n                </select>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            {currentFile && (\r\n                <div className=\"progress\">\r\n                    <div\r\n                        className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow={progress}\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        style={{ width: progress + \"%\" }}\r\n                    >\r\n                        {progress}%\r\n                    </div>\r\n                </div>\r\n            )}\r\n                <br/>\r\n                <br/>\r\n            <label className=\"btn btn-default\">\r\n                <input type=\"file\" onChange={this.selectFile} />\r\n            </label>\r\n\r\n            <button className=\"btn btn-primary\"\r\n                    disabled={!selectedFiles}\r\n                   type={\"submit\"}\r\n            >\r\n                העלאת הפרוטוקל\r\n            </button>\r\n            <div className=\"alert alert-light\" role=\"alert\">\r\n                {message}\r\n            </div>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        // const { pageNumber, numPages } = this.state;\r\n        // require(\"./MessagesPage.css\");\r\n\r\n        require(\"./InstructionsSurgery.css\");\r\n        return (\r\n            <div className=\"presenter\">\r\n\r\n                <Grid container spacing={2} >\r\n                    <Grid item xs={6} >\r\n                        <br/>\r\n                        {sessionStorage.getItem('patient') &&\r\n                        <img style={{width: '100%', marginLeft:\"auto\"}} src={require('./ImagesOrth/INSTRUCTIONS.PNG')} />}\r\n                        {sessionStorage.getItem('doctor') && this.renderUploadFile()}\r\n                    </Grid>\r\n                    <Grid item xs={6} >\r\n                        <div>\r\n                            <div style={{ width: '100%', position: \"relative\"}}>\r\n                                <ImageMapper\r\n                                    src={URL}\r\n                                    map={MAP}\r\n                                    width={700}\r\n                                    // height={700}\r\n                                    onLoad={() => this.load()}\r\n                                    onClick={area => this.clicked(area)}\r\n                                    // onMouseEnter={area => this.enterArea(area)}\r\n                                    // onMouseLeave={area => this.leaveArea(area)}\r\n                                    // onMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}\r\n                                    // onImageClick={evt => this.clickedOutside(evt)}\r\n                                    // onImageMouseMove={evt => this.moveOnImage(evt)}\r\n                                    lineWidth={4}\r\n                                    strokeColor={\"white\"}\r\n                                />\r\n                                {this.state.hoveredArea && (\r\n                                    <span\r\n                                        className=\"tooltip\"\r\n                                        style={{...this.getTipPosition(this.state.hoveredArea)}}\r\n                                    >\r\n\t\t\t\t\t\t\t\t{this.state.hoveredArea && this.state.hoveredArea.name}\r\n\t\t\t\t\t\t\t</span>\r\n                                )}\r\n                            </div>\r\n                            <pre className=\"message\">{this.state.msg ? this.state.msg : null}</pre>\r\n                            <pre>{this.state.moveMsg ? this.state.moveMsg : null}</pre>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <div id=\"inst\">\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <h2 className=\"insth2\">{this.state.headerNames[this.state.category]}</h2>\r\n                </div>\r\n                <div >\r\n                    {this.state.category && !this.state.instructionsByCategory[this.state.category] && <div><h3>אין פרוטוקולים בתחום זה</h3></div>}\r\n                    <Grid container spacing={2} >\r\n                        {this.state.showInstructions && this.state.instructionsByCategory[this.state.category] &&\r\n                        this.state.instructionsByCategory[this.state.category].map((instruction) => {\r\n                            return <Grid item xs={5} style={{marginLeft:50}}>\r\n                                <Card id=\"cardInstruction\">\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"200\"\r\n                                        image={this.state.categoryToImage[instruction.Category]}\r\n                                        title=\"Contemplative Reptile\"\r\n                                        style={{borderColor: 'black'}}\r\n                                    />\r\n                                    <Card.Header>\r\n                                        <button onClick={() => this.downloadFile(instruction)}>\r\n                                            <b>{instruction.Title}</b>\r\n                                            <BsDownload style={{float:'left'}}/>\r\n                                        </button>\r\n                                    </Card.Header>\r\n                                </Card>\r\n                                {sessionStorage.getItem('doctor') &&\r\n                                <AiFillDelete type=\"button\" class=\"trushIcon\" style={{color: 'black'}} size={20}\r\n                                              onClick={() => this.removeInstruction(instruction.InstructionId)}/>\r\n                                }\r\n                            </Grid>\r\n                        })\r\n                        }\r\n                    </Grid>\r\n                </div>\r\n            </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default InstructionsSurgery;\r\n\r\n","import React, {Component} from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport axios from \"axios\";\r\nimport YouTube from \"react-youtube\";\r\n//\r\n// import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {AiFillDelete} from \"react-icons/ai\";\r\n\r\nclass ExercisesPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exercises: undefined,\r\n            exercisesGrid: undefined,\r\n            newExerciseUrl: '',\r\n            newExerciseCategory: 'ברך',\r\n            categories: ['ברך','גב','כתף','קרסול','ירך','מרפק','גב']};\r\n        this.getExercises = this.getExercises.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onSelectCategoryChosen = this.onSelectCategoryChosen.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getExercises();\r\n    }\r\n\r\n    async getExercises(){\r\n        let respone = await axios.get(' https://moda-medic.herokuapp.com/auth/usersAll/exercises',\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                },\r\n            });\r\n        this.setState({exercises: respone.data.data})\r\n\r\n        let exercisesForGrid = [];\r\n        for (var i = 0; i < this.state.exercises.length; i = i + 2) {\r\n            if (this.state.exercises[i + 1]) {\r\n                exercisesForGrid.push({\"obj1\": this.state.exercises[i], \"obj2\": this.state.exercises[i + 1]});\r\n            } else {\r\n                exercisesForGrid.push({\"obj1\": this.state.exercises[i], \"obj2\": {}});\r\n            }\r\n            // }\r\n            this.setState({exercisesGrid: exercisesForGrid})\r\n        }\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.addExercise();\r\n        this.setState({newExerciseUrl : ''})\r\n        this.getExercises()\r\n        // if(response.data.data === null){\r\n        //     window.alert('אנא מלא את הטופס כראוי')\r\n        // }\r\n    }\r\n\r\n     addExercise(){\r\n        const urlExe = new URL(this.state.newExerciseUrl);\r\n        var urlId = urlExe.searchParams.get('v');\r\n        for(var i=0; i<this.state.exercises.length; i++){\r\n            if (this.state.exercises[i].Video === urlId){\r\n                window.alert('הסרטון כבר קיים במאגר');\r\n                this.setState({newExerciseUrl : ''})\r\n                return;\r\n            }\r\n        }\r\n        let url = ` https://moda-medic.herokuapp.com/auth/doctors/exercises`;\r\n        axios.post(url,\r\n            {\r\n                category: this.state.newExerciseCategory,\r\n                url : urlId\r\n            },{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }});\r\n        window.alert(\"הסרטון נוסף בהצלחה!\")\r\n         this.getExercises()\r\n     }\r\n    handleChange(e) {\r\n        if (e.target.name === \"newExerciseUrl\") {\r\n            this.setState({[e.target.name]: e.target.value})}\r\n    }\r\n\r\n    onSelectCategoryChosen(event) {\r\n        this.setState({\r\n            newExerciseCategory  : this.state.categories[event.target.options.selectedIndex]\r\n        });\r\n    }\r\n\r\n    async removeExercise(eId){\r\n        if(sessionStorage.getItem('doctor')) {\r\n            const r = window.confirm(\"האם אתה בטוח שאתה רוצה למחוק את הסרטון?\");\r\n            if (r == true) {\r\n                await axios.delete(` https://moda-medic.herokuapp.com/auth/doctors/exercises/removeExercise/${eId}`,\r\n                    {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'x-auth-token': sessionStorage.getItem(\"token\")\r\n                        }\r\n                    });\r\n                this.getExercises()\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        require(\"./ExercisesPage.css\");\r\n        let group = undefined;\r\n        var forPatient = \"מטופל/ת יקר/ה!\\nלפניך מאגר תרגולי פיזיותרפיה המחולקים לקטגוריות.\\nשים לב! יש להתייעץ עם הרופא המטפל לפני ביצוע התרגולים הביתיים.\\n החלמה מהירה ובריאות שלמה!\"\r\n        if (this.state.exercises) {\r\n            group = this.state.exercises.reduce((r, a) => {\r\n                r[a.Category] = [...r[a.Category] || [], a];\r\n                return r;\r\n            }, {});\r\n        }\r\n        const opts = {\r\n            height: '350',\r\n            width: '400',\r\n            playerVars: {\r\n                // https://developers.google.com/youtube/player_parameters\r\n                autoplay: 0,\r\n            },\r\n        };\r\n        let optionItems = this.state.categories.map((category) =>\r\n            <option key={category} >{category}</option>\r\n        );\r\n        return (\r\n            <div>\r\n                {sessionStorage.getItem('doctor') && <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"divs_in_add\">\r\n                            <h5>מטפל/ת יקר/ה,</h5>\r\n                            <h5>על מנת להוסיף סרטון למאגר, אנא העתק את קישור ה-Youtube לחלון הנכון ובחר את האיבר השייך לטיפול בסרטון זה.</h5>\r\n                            <h5>על מנת למחוק סרטון, יש ללחוץ על כפתור המחיקה תחת הסרטון הרלוונטי.</h5>\r\n                            <label className=\"labels_in_add_user\">כתובת הסרטון:</label>\r\n                            <input className=\"inputs_in_add_user\" name=\"newExerciseUrl\" type=\"url\"\r\n                                   value={this.state.newExerciseUrl} onChange={e => this.handleChange(e)} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">קטגוריית הסרטון: </label>\r\n                            <select className=\"select_in_add_user\" onChange={this.onSelectCategoryChosen}>\r\n                                {optionItems}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <input type=\"submit\" value=\"הוסף\" className=\"submit_and_reset_buttons\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>}\r\n                {sessionStorage.getItem('patient') && <div>\r\n                    <a><b>מטופל/ת יקר/ה!</b></a><br/>\r\n                    <a><b>לפניך מאגר תרגולי פיזיותרפיה המחולקים לקטגוריות.</b></a><br/>\r\n                    <a><b>שים לב! יש להתייעץ עם הרופא המטפל לפני ביצוע התרגולים הביתיים.</b></a><br/>\r\n                    <a><b>החלמה מהירה ובריאות שלמה!</b></a>\r\n                </div>}\r\n\r\n                <hr style={{color: \"darkgrey\", backgroundColor: \"darkgrey\", height: 3}}/>\r\n                {group && Object.keys(group).map((keyName, keyIndex) => (\r\n                    <div>\r\n                        <div>\r\n                            <Grid item xs={7} >\r\n                                <div>\r\n                                    <h2 className=\"exh2\"><b>תרגילי {keyName}</b></h2>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid container spacing={3} style={{width: '100%', height:'100%'}} >\r\n                                {group[keyName].map(exercise => <Grid item xs={6} style={{width: '100%', height:'100%'}}>\r\n                                        <YouTube  videoId={exercise.Video} opts={opts} onReady={this._onReady}/>\r\n                                        {sessionStorage.getItem('doctor') &&\r\n                                        <AiFillDelete type=\"button\" class=\"trushIcon\" style={{color: 'black'}} size={20}\r\n                                                      onClick={() => this.removeExercise(exercise.ExerciseId)}/>\r\n                                        }\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n                            <hr style={{color: \"darkgrey\", backgroundColor: \"darkgrey\", height: 3}}/>\r\n                        </div>\r\n                    </div>))}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExercisesPage;\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport \"./Logo\";\r\nimport \"./Search\";\r\nimport \"./PatientSearch\";\r\n\r\n\r\nimport Logo from './Logo';\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport MessagesPage from \"./MessagesPage\";\r\nimport PatientSearchNew from \"./PatientSearchNew\";\r\nimport QuestionnairesManger from \"./Questionnaire/QuestionnaireManger\";\r\nimport {Route} from \"react-router-dom\";\r\nimport SurveyComponent from \"./Questionnaire/SurveyComponent\";\r\nimport InstructionsSurgery from \"./InstructionsSurgery\";\r\nimport ExercisesPage from \"./ExercisesPage\";\r\n\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            optionsPName: [],\r\n            namesDiv: [],\r\n            isFetchingNames: false,\r\n            users: [],\r\n            pName:'',\r\n            encrypName:'',\r\n            showPopup: false,\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.fetchNamesForResearch = this.fetchNamesForResearch.bind(this);\r\n        this.handlePName = this.handlePName.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.isDoctor()) {\r\n            this.fetchNamesForResearch()\r\n                .then(() => console.log(\"Fetch names successfully\"));\r\n        }\r\n    }\r\n\r\n    async fetchNamesForResearch(){\r\n        var list = [];\r\n        var users = [];\r\n        var namesDiv = [];\r\n        this.setState({isFetchingNames: true});\r\n        var response = await axios.get(\r\n            \" https://moda-medic.herokuapp.com/auth/doctors/metrics/getUsers\",\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n        if(response.data.data){\r\n            var names = [];\r\n            for(var i = 0; i < response.data.data.length; i++){\r\n                let user = response.data.data[i];\r\n                namesDiv.push({UserID: user.UserID});\r\n                users.push(user);\r\n                // names.push(user.UserID)\r\n            }\r\n            // names = names.sort();\r\n            // var uniqueNames = Array.from(new Set(names));\r\n            // for(i = 0; i < uniqueNames.length; i++){\r\n            //     list.push(<option key={uniqueNames[i]}>{uniqueNames[i]}</option>);\r\n            // }\r\n        }\r\n        this.setState({\r\n            isFetchingNames: false,\r\n            // optionsPName: list,\r\n            namesDiv: namesDiv,\r\n            users: users\r\n        });\r\n    }\r\n    async fetchNames(){\r\n        var list = [];\r\n        var users = [];\r\n        var namesDiv = [];\r\n        this.setState({isFetchingNames: true});\r\n        var response = await axios.get(\r\n            \" https://moda-medic.herokuapp.com/auth/doctors/metrics/getUsers\",\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n        if(response.data.data){\r\n            var names = [];\r\n            for(var i = 0; i < response.data.data.length; i++){\r\n                let user = response.data.data[i];\r\n                namesDiv.push({first: user.First_Name, last: user.Last_Name});\r\n                users.push(user);\r\n                names.push(user.First_Name.trim() + \" \" + user.Last_Name.trim())\r\n            }\r\n            names = names.sort();\r\n            var uniqueNames = Array.from(new Set(names));\r\n            for(i = 0; i < uniqueNames.length; i++){\r\n                list.push(<option key={uniqueNames[i]}>{uniqueNames[i]}</option>);\r\n            }\r\n        }\r\n        this.setState({\r\n            isFetchingNames: false,\r\n            optionsPName: list,\r\n            namesDiv: namesDiv,\r\n            users: users\r\n        });\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    handlePName(event) {\r\n        this.setState({pName: event.target.value});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        if(event){\r\n            event.preventDefault()\r\n        }\r\n         await axios.post( ` https://moda-medic.herokuapp.com/auth/doctors/metrics/userId`,\r\n            {\r\n                UserID: this.state.pName,\r\n            },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': sessionStorage.getItem(\"token\")\r\n                }\r\n            }).then(res => {\r\n            this.setState({encrypName: res.data.data})\r\n        });\r\n        let usersByName = [];\r\n        this.state.users.forEach(user => {\r\n            if(this.state.encrypName === user.UserID) {\r\n                console.log(`found user ${user}`);\r\n                usersByName.push(user);\r\n            }\r\n        });\r\n        let cards = [];\r\n        for(let i = 0; i < usersByName.length; i++){\r\n            let user = usersByName[i];\r\n            let dateC = new Date(user.BirthDate).toLocaleDateString('en-GB', {day: 'numeric', month: 'numeric', year:\"numeric\"});\r\n            cards.push(\r\n                <Card className=\"cardApp\" key={user.UserID}  onClick={() => {\r\n                    this.setState({patientUserId: user.UserID, user: user});\r\n                    this.togglePopup();\r\n                }}>\r\n                    <Card.Body className=\"cardBody\">מזהה מטופל: {this.state.pName.trim()} </Card.Body>\r\n                    {/*<Card.Body className=\"cardBody\">שם מלא: {this.state.pName.trim()} </Card.Body>*/}\r\n                    {/*<Card.Body className=\"cardBody\">תאריך לידה: {dateC}</Card.Body>*/}\r\n                </Card>\r\n            );\r\n        }\r\n        this.setState({\r\n            text: cards\r\n        });\r\n        this.togglePopup();\r\n    }\r\n\r\n    isDoctor() {\r\n        return sessionStorage.getItem('doctor');\r\n    }\r\n\r\n    searchPatient() {\r\n        require(\"./search.css\");\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {/*<datalist id=\"first-list\">{this.state.optionsPName}</datalist>*/}\r\n                    <div className=\"search\">\r\n                        <label className=\"lSearch\">\r\n                            חפש מטופל:\r\n                        </label>\r\n                        <input className=\"iSearch\"\r\n                               id=\"pname\"\r\n                               type=\"text\"\r\n                               name=\"pName\"\r\n                               value={this.state.pName}\r\n                               placeholder=\"מספר מטופל\"\r\n                               onChange={this.handlePName}\r\n                               list=\"first-list\"\r\n                               required\r\n                        />\r\n                        <button type=\"submit\" className=\"bSearch\">\r\n                            חפש\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <br />\r\n                {this.state.showPopup ?\r\n                    <Popup\r\n                        text={this.state.text}\r\n                        closePopup={this.togglePopup.bind(this)}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    getActiveComponent() {\r\n        if(this.props.component === 'search') {\r\n            return <PatientSearchNew patientUserId={this.state.patientUserId}/>;\r\n        } else if(this.props.component === 'messages') {\r\n            return <MessagesPage patientUserId={this.state.patientUserId}/>\r\n        } else if(this.props.component === 'questionnaires'){\r\n            return <QuestionnairesManger user = {this.state.user}/>\r\n        } else if(this.props.component === 'survey'){\r\n            return <SurveyComponent {...this.props}/>\r\n        } else if(this.props.component === 'instructions'){\r\n            return <InstructionsSurgery {...this.props}/>\r\n        } else if(this.props.component === 'exercises'){\r\n            return <ExercisesPage {...this.props}/>\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkIfNotSearchNeeded(){\r\n        if(this.props.component === 'instructions' || this.props.component === 'exercises'){\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n    render() {\r\n        require(\"./App.css\");\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <Logo />\r\n                        {this.isDoctor() && this.checkIfNotSearchNeeded() && this.searchPatient()}\r\n                        {this.getActiveComponent()}\r\n                        <br />\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\nclass Popup extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='popupApp'>\r\n                <div className='popup_inner_App' >\r\n                    <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                    <h4>אנא בחר מבין הרשומות הבאות:</h4>\r\n                    {this.props.text}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Select from 'react-select';\r\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {FcInfo} from \"react-icons/fc\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n\r\nconst initialState = {\r\n    userName: \"\",\r\n    fName: \"\",\r\n    lName: \"\",\r\n    password: \"\",\r\n    bday: new Date(),\r\n    questionsID: [],\r\n    questionsText: [],\r\n    questions :[],\r\n    answerUserQuestion: \"\",\r\n    quesionChosen: 0,\r\n    code: \"\",\r\n    type: '',\r\n    questionnairesID:[],\r\n    questionnairesText:[],\r\n    gender: \"\",\r\n    smoke: \"\",\r\n    dateOfSurgery:\"\",\r\n    surgeryType: \"\",\r\n    education: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    bmi:\"\",\r\n    // questionnaires: [],\r\n    questionnairesChosen:0,\r\n};\r\n\r\nclass AddUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            fName: \"\",\r\n            lName: \"\",\r\n            password: \"\",\r\n            bday: new Date(),\r\n            phone: \"\",\r\n            questionsID: [],\r\n            questionsText: [],\r\n            questions :[],\r\n            answerUserQuestion: \"\",\r\n            code: \"\",\r\n            questionnaires: [],\r\n            questionnairesID:[],\r\n            questionnairesText:[],\r\n            questionnairesChosen:0,\r\n            quesionChosen: 0,\r\n            gender: \"\",\r\n            smoke: \"\",\r\n            dateOfSurgery:\"\",\r\n            surgeryType: \"\",\r\n            education: \"\",\r\n            height: \"\",\r\n            weight: \"\",\r\n            bmi:\"\",\r\n            surgeryDateDisplay: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.onSelectQuesionChosen = this.onSelectQuesionChosen.bind(this);\r\n        this.onSelectGender = this.onSelectGender.bind(this);\r\n        this.onSelectSmoke = this.onSelectSmoke.bind(this);\r\n        this.onSelectSurgeryType = this.onSelectSurgeryType.bind(this);\r\n        this.onSelectEducation = this.onSelectEducation.bind(this);\r\n        this.onSelectQuestionnairesChosen = this.onSelectQuestionnairesChosen.bind(this);\r\n    }\r\n\r\n    onSelectQuesionChosen(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        this.setState({\r\n            quesionChosen: selectedIndex\r\n        });\r\n    }\r\n    onSelectGender(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        this.setState({\r\n            gender: selectedIndex\r\n        });\r\n    }\r\n    onSelectSmoke(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        this.setState({\r\n            smoke: selectedIndex\r\n        });\r\n    }\r\n    onSelectEducation(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        this.setState({\r\n            education: selectedIndex\r\n        });\r\n    }\r\n\r\n    onSelectSurgeryType(event) {\r\n        const selectedIndex = event.target.options.selectedIndex;\r\n        console.log(selectedIndex)\r\n        this.setState({\r\n            surgeryType: selectedIndex\r\n        });\r\n        if( selectedIndex !== 3 && selectedIndex !==0){\r\n            this.setState({\r\n                surgeryDateDisplay: true\r\n            });\r\n        }else{\r\n            this.setState({\r\n                surgeryDateDisplay: false\r\n            });\r\n        }\r\n\r\n    }\r\n    onSelectQuestionnairesChosen(selected) {\r\n        console.log(selected)\r\n        // const selectedIndex = event.target.options.selectedIndex;\r\n        let chosen = [];\r\n        let questionnaires = this.state.questionnaires;\r\n        selected.forEach(selectQuestionnaire => {\r\n            questionnaires.forEach(questionnaire => {\r\n                if(selectQuestionnaire == questionnaire.QuestionnaireText){\r\n                    chosen.push(questionnaire)\r\n                }\r\n            })\r\n        });\r\n        this.setState({\r\n            questionnairesChosen: Array.from(new Set(chosen))\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let initialQuestions = [];\r\n        let initQuestionsID = [];\r\n        let initQuestionsText = [];\r\n\r\n        fetch(' https://moda-medic.herokuapp.com/users/getVerifications')\r\n            .then(response => {\r\n                return response.json();\r\n            }).then(results => {\r\n\r\n            initialQuestions = results.data;\r\n\r\n            for(var i = 0; i < initialQuestions.length; i++) {\r\n                var obj = initialQuestions[i];\r\n                initQuestionsID.push(obj.QuestionID);\r\n                initQuestionsText.push(obj.QuestionText);\r\n\r\n            }\r\n\r\n            this.setState({\r\n                questionsID: initQuestionsID,\r\n                questionsText: initQuestionsText,\r\n                questions: initialQuestions,\r\n            });\r\n        });\r\n        // if(this.state.type === \"patient\"){\r\n        let initQuestionnairesID = [];\r\n        let initQuestionnairesText = [];\r\n        let initQuestionnaires = [];\r\n        fetch(' https://moda-medic.herokuapp.com/questionnaires/all')\r\n            .then(response => {\r\n                return response.json();\r\n            }).then(results => {\r\n\r\n            initQuestionnaires = results.data;\r\n\r\n            for(var i = 0; i < initQuestionnaires.length; i++) {\r\n                var obj = initQuestionnaires[i];\r\n                if(obj.QuestionnaireID !== 0 && obj.QuestionnaireID !==6 && obj.QuestionnaireID !== 5) {\r\n                    initQuestionnairesID.push(obj.QuestionnaireID);\r\n                    initQuestionnairesText.push(obj.QuestionnaireText);\r\n                }\r\n            }\r\n            this.setState({\r\n                questionnaires: initQuestionnaires,\r\n                questionnairesID: initQuestionnairesID,\r\n                questionnairesText: initQuestionnairesText\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        var bDay = new Date(this.state.bday);\r\n        var now = new Date();\r\n        // var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\r\n        // if(!regex.test(this.state.password)){\r\n        //     window.alert('הסיסמא צריכה להכיל לפחות 8 תווים,אות אנגלית קטנה, אות אנגלית גדולה ומספר')\r\n        //     return\r\n        // }\r\n        if(this.state.type === 'doctor') {\r\n            axios.post(' https://moda-medic.herokuapp.com/users/doctorRegister', {\r\n                UserID: this.state.userName,\r\n                Password: this.state.password,\r\n                First_Name: this.state.fName,\r\n                Last_Name: this.state.lName,\r\n                Phone_Number: this.state.phone,\r\n                BirthDate: bDay.getTime(),\r\n                Code: this.state.code,\r\n                VerificationQuestion: this.state.quesionChosen,\r\n                VerificationAnswer: this.state.answerUserQuestion,\r\n                ValidTime: now.getTime()\r\n            }).then(res => {\r\n                if (res.data.message === \"Wrong Code\") {\r\n                    window.alert(\"קוד האימות אינו נכון\");\r\n                } else if (res.data.message === \"Taken Email\") {\r\n                    window.alert(\"כתובת הדואל כבר רשומה במערכת\");\r\n                } else {\r\n                    window.alert(\"ההרשמה בוצעה בהצלחה נא לבצע התחברות\");\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n        }\r\n        if(this.state.type === 'patient') {\r\n            var dateOfSurgery = new Date(this.state.dateOfSurgery);\r\n            let gender;\r\n            if (this.state.gender == 1) {\r\n                gender = \"נקבה\"\r\n            } else if (this.state.gender == 2) {\r\n                gender = \"זכר\"\r\n            }\r\n            let smoke;\r\n            if (this.state.smoke == 1) {\r\n                smoke = \"מעשן\"\r\n            } else if (this.state.smoke == 2) {\r\n                smoke = \"לא מעשן\"\r\n            }\r\n            let sType;\r\n            if (this.state.surgeryType ==1) {\r\n                sType = \"ניתוח דחוף\"\r\n            }else if (this.state.surgeryType == 2)\r\n            {\r\n                sType = \"ניתוח מתוכנן\"\r\n\r\n            }else if (this.state.surgeryType == 3) {\r\n                sType = \"ללא ניתוח\"\r\n            }\r\n            let education;\r\n            let educationOptions = {1 :\"השכלה אקדמאית\", 2: \"השכלה תיכונית\", 3:\"10-12 שנות לימוד\", 4: \"6-9 שנות לימוד\", 5: \"5 שנות לימוד או פחות\", 6:\"לא מעוניין לענות\"};\r\n            for (var key in educationOptions) {\r\n                if(key == this.state.education){\r\n                    education = educationOptions[key]\r\n                }\r\n            }\r\n            let height_double = Number(this.state.height / 100);\r\n            let bmi = String((Number(this.state.weight)/Math.pow(height_double,2)));\r\n            axios.post(' https://moda-medic.herokuapp.com/users/patientRegister', {\r\n                UserID: this.state.userName,\r\n                Password: this.state.password,\r\n                First_Name: \"מטופל\",\r\n                Last_Name: this.state.userName,\r\n                Phone_Number: \"\",\r\n                Gender:gender,\r\n                Smoke: smoke,\r\n                DateOfSurgery: dateOfSurgery.getTime(),\r\n                SurgeryType: sType,\r\n                Education: education,\r\n                Height: this.state.height,\r\n                Weight: this.state.weight,\r\n                BMI: bmi,\r\n                BMI_NUMBER: parseFloat(bmi),\r\n                BirthDate: bDay.getTime(),\r\n                Code: this.state.code,\r\n                Questionnaires: this.state.questionnairesChosen,\r\n                VerificationQuestion: this.state.quesionChosen,\r\n                VerificationAnswer: this.state.answerUserQuestion,\r\n                ValidTime: now.getTime()\r\n            }).then(res => {\r\n                if (res.data.message === \"Wrong Code\") {\r\n                    window.alert(\"קוד האימות אינו נכון\");\r\n                } else if (res.data.message === \"Taken Email\") {\r\n                    window.alert(\"כתובת הדואל כבר רשומה במערכת\");\r\n                } else {\r\n                    window.alert(\"ההרשמה בוצעה בהצלחה נא לבצע התחברות\");\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleReset(event) {\r\n        this.setState (initialState);\r\n        let initialQuestions = [];\r\n        let initQuestionsID = [];\r\n        let initQuestionsText = [];\r\n        fetch(' https://moda-medic.herokuapp.com/users/getVerifications')\r\n            .then(response => {\r\n                return response.json();\r\n            }).then(results => {\r\n\r\n            initialQuestions = results.data;\r\n            console.log(initialQuestions);\r\n\r\n            for(var i = 0; i < initialQuestions.length; i++) {\r\n                var obj = initialQuestions[i];\r\n\r\n                initQuestionsID.push(obj.QuestionID);\r\n                initQuestionsText.push(obj.QuestionText);\r\n            }\r\n\r\n            this.setState({\r\n                questionsID: initQuestionsID,\r\n                questionsText: initQuestionsText,\r\n                questions: initialQuestions\r\n            });\r\n        });\r\n\r\n        let initQuestionnairesID = [];\r\n        let initQuestionnairesText = [];\r\n        let initQuestionnaires = [];\r\n        fetch(' https://moda-medic.herokuapp.com/questionnaires/all')\r\n            .then(response => {\r\n                return response.json();\r\n            }).then(results => {\r\n\r\n            initQuestionnaires = results.data;\r\n\r\n            for(var i = 0; i < initQuestionnaires.length; i++) {\r\n                var obj = initQuestionnaires[i];\r\n\r\n                initQuestionnairesID.push(obj.QuestionnaireID);\r\n                initQuestionnairesText.push(obj.QuestionnaireText);\r\n            }\r\n            this.setState({\r\n                questionnaires: initQuestionnaires,\r\n                questionnairesID: initQuestionnairesID,\r\n                questionnairesText: initQuestionnairesText\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    isDoctor(){\r\n        this.setState({type: 'doctor'})\r\n    }\r\n    isPatient(){\r\n        this.setState({type: 'patient'})\r\n    }\r\n    render() {\r\n        require(\"./AddUser.css\");\r\n        let quesions = this.state.questionsText;\r\n        let optionItems = quesions.map((question) =>\r\n            <option key={question} >{question}</option>\r\n        );\r\n        let questionnaires = this.state.questionnairesText;\r\n        if (questionnaires.length === 0){\r\n            this.componentDidMount();\r\n            questionnaires = this.state.questionnairesText;\r\n        }\r\n        // let questionnairesOption = questionnaires.map((questionnaire) =>\r\n        //     <option key={questionnaire} >{questionnaire}</option>\r\n        // );\r\n        let questionnairesOption =[];\r\n        questionnaires.forEach(questionnaire => {\r\n            questionnairesOption.push(questionnaire)\r\n            // questionnairesOption.push({value: questionnaire, label: questionnaire})\r\n        });\r\n        // let questionnairesOption = questionnaires.map((questionnaire) => {value: {questionnaire}, label: {questionnaire}});\r\n        let genderOptions = [<option></option>,<option>נקבה</option>,<option>זכר</option>];\r\n        let surgeryOptions = [<option/>,<option>ניתוח דחוף</option>,<option>ניתוח מתוכנן</option>,<option>ללא ניתוח</option>];\r\n        let smokeOptions = [<option/>,<option>מעשן</option>,<option>לא מעשן</option>];\r\n        let educationOptions = [<option/>,<option>השכלה אקדמאית</option>,<option>השכלה תיכונית</option>,<option>10-12 שנות לימוד</option>,<option>6-9 שנות לימוד</option>,<option>5 שנות לימוד או פחות</option>,<option>לא מעוניין לענות</option>];\r\n        var today = (new Date()).toISOString().split(\"T\")[0];\r\n        return (\r\n            <div>\r\n                <label className=\"buttonsChoose\">\r\n                    <Button style={{width: 150, floatButtom:'auto'}} className=\"docbutton\" variant=\"info\" onClick={() => this.isDoctor()}> דוקטור </Button>\r\n                    {'                                                                '}\r\n                    <Button style={{width: 150}} className=\"docbutton\" variant=\"info\" onClick={() => this.isPatient()}> מטופל </Button>\r\n                </label>\r\n                {this.state.type === 'doctor' ?\r\n                    <form onSubmit={this.handleSubmit} onReset={this.handleReset} id=\"new_user_form\">\r\n                        <div className=\"divs_in_add\">\r\n                            <label for= \"email\" className=\"labels_in_add_user\">כתובת דוא\"ל</label>\r\n                            <input className=\"inputs_in_add_user\" name=\"userName\" type=\"email\"\r\n                                   value={this.state.userName} onChange={e => this.handleChange(e)} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">שם פרטי</label>\r\n                            <input className=\"inputs_in_add_user\" name=\"fName\" type=\"text\" value={this.state.fName}\r\n                                   minLength=\"2\" maxLength=\"20\" onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">שם משפחה </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"lName\" type=\"text\" value={this.state.lName}\r\n                                   minLength=\"2\" maxLength=\"20\" onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">סיסמה </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"password\" type=\"password\" minlength=\"8\"\r\n                                   maxLength=\"12\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\" value={this.state.password} onChange={this.handleChange} message={\"הסיסמא צריכה להכיל לפחות 8 תווים, לפחות תו אחד באות אנגלית קטנה, תו אחד באות אנגלית אות אנגלית גדולה ותו אחד כמספר.\"} required/>\r\n                            <Tooltip title=\"הסיסמא צריכה להכיל לפחות 8 תווים,אות אנגלית קטנה, אות אנגלית גדולה ומספר\">\r\n                                <IconButton >\r\n                                    <FcInfo></FcInfo>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">מספר טלפון</label>\r\n                            <input className=\"inputs_in_add_user\" name=\"phone\" type=\"tel\" id=\"phone\" pattern=\"[0-9]{10}\"\r\n                                   value={this.state.phone} onChange={this.handleChange} required/>\r\n                            <Tooltip title=\"מספר טלפון המכיל מספרים בלבד\">\r\n                                <IconButton >\r\n                                    <FcInfo></FcInfo>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">תאריך לידה</label>\r\n                            <input className=\"inputs_in_add_user\" name=\"bday\" type=\"date\" max={today}\r\n                                   value={this.state.bday} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">קוד אימות </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"code\" type=\"text\" value={this.state.code}\r\n                                   onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">שאלת אימות </label>\r\n                            <select className=\"select_in_add_user\" onChange={this.onSelectQuesionChosen}>\r\n                                {optionItems}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">תשובה </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"answerUserQuestion\" type=\"text\"\r\n                                   value={this.state.answerUserQuestion} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <input type=\"submit\" value=\"הירשם\" className=\"submit_and_reset_buttons\"/>\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                    </form>\r\n                    : null}\r\n                {this.state.type === 'patient' ?\r\n                    <form onSubmit={this.handleSubmit} onReset={this.handleReset} id=\"new_user_form\">\r\n                        <div className=\"divs_in_add\">\r\n                            <label for=\"email\" className=\"labels_in_add_user\">מזהה מטופל: </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"userName\" type=\"text\"\r\n                                   value={this.state.userName} onChange={e => this.handleChange(e)} required/>\r\n                        </div>\r\n                        {/*<div className=\"divs_in_add\">*/}\r\n                        {/*    <label className=\"labels_in_add_user\">שם פרטי</label>*/}\r\n                        {/*    <input className=\"inputs_in_add_user\" name=\"fName\" type=\"text\" value={this.state.fName}  minLength=\"2\" maxLength=\"20\"*/}\r\n                        {/*           onChange={this.handleChange} required/>*/}\r\n                        {/*</div>*/}\r\n                        {/*<div className=\"divs_in_add\">*/}\r\n                        {/*    <label className=\"labels_in_add_user\">שם משפחה </label>*/}\r\n                        {/*    <input className=\"inputs_in_add_user\" name=\"lName\" type=\"text\" value={this.state.lName}  minLength=\"2\" maxLength=\"20\"*/}\r\n                        {/*           onChange={this.handleChange} required/>*/}\r\n                        {/*</div>*/}\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">סיסמה </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"password\" type=\"password\" minlength=\"8\"\r\n                                   maxLength=\"12\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\r\n                                   value={this.state.password} onChange={this.handleChange} required/>\r\n                            <Tooltip title=\"הסיסמא צריכה להכיל לפחות 8 תווים,אות אנגלית קטנה, אות אנגלית גדולה ומספר\">\r\n                                <IconButton >\r\n                                    <FcInfo></FcInfo>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        {/*<div className=\"divs_in_add\">*/}\r\n                        {/*    <label className=\"labels_in_add_user\">מספר טלפון</label>*/}\r\n                        {/*    <input className=\"inputs_in_add_user\" name=\"phone\" type=\"tel\" id=\"phone\" pattern=\"[0-9]{10}\"*/}\r\n                        {/*           value={this.state.phone} onChange={this.handleChange} required/>*/}\r\n                        {/*    <Tooltip title=\"מספר טלפון המכיל מספרים בלבד\">*/}\r\n                        {/*        <IconButton >*/}\r\n                        {/*            <FcInfo></FcInfo>*/}\r\n                        {/*        </IconButton>*/}\r\n                        {/*    </Tooltip>*/}\r\n                        {/*</div>*/}\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">תאריך לידה</label>\r\n                            <input className=\"inputs_in_add_user\" name=\"bday\" type=\"date\" max={today}\r\n                                   value={this.state.bday} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">משקל (ק\"ג) </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"weight\" type=\"number\" value={this.state.weight}\r\n                                   onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">גובה (ס\"מ) </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"height\" type=\"number\" minLength=\"3\" value={this.state.height}\r\n                                   onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">מין </label>\r\n                            <select className=\"select_in_add_user\" onChange={this.onSelectGender}>\r\n                                {genderOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">מעשן </label>\r\n                            <select className=\"select_in_add_user\" onChange={this.onSelectSmoke}>\r\n                                {smokeOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">השכלה </label>\r\n                            <select className=\"select_in_add_user\" onChange={this.onSelectEducation}>\r\n                                {educationOptions}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">סוג ניתוח </label>\r\n                            <select className=\"select_in_add_user\" onChange={this.onSelectSurgeryType}>\r\n                                {surgeryOptions}\r\n                            </select>\r\n                        </div>{this.state.surgeryDateDisplay &&\r\n                    <div className=\"divs_in_add\">\r\n                        <label className=\"labels_in_add_user\">תאריך ניתוח</label>\r\n                        <input className=\"inputs_in_add_user\" name=\"dateOfSurgery\" type=\"date\"\r\n                               value={this.state.DateOfSurgery} onChange={this.handleChange} required/>\r\n                    </div>}\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">קוד אימות </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"code\" type=\"text\" value={this.state.code}\r\n                                   onChange={this.handleChange} required/>\r\n                            <Tooltip title=\"קוד האימות שהוגדר מבית החולים המטפל\">\r\n                                <IconButton >\r\n                                    <FcInfo></FcInfo>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">שאלת אימות </label>\r\n                            <select className=\"select_in_add_user\" onChange={this.onSelectQuesionChosen}>\r\n                                {optionItems}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"divs_in_add\">\r\n                            <label className=\"labels_in_add_user\">תשובה </label>\r\n                            <input className=\"inputs_in_add_user\" name=\"answerUserQuestion\" type=\"text\"\r\n                                   value={this.state.answerUserQuestion} onChange={this.handleChange} required/>\r\n                        </div>\r\n                        <div className=\"divs_in_add_drop\">\r\n                            <label className=\"labels_in_add_user\">שאלונים רפואיים </label>\r\n                            <DropdownMultiselect id=\"add_user_dropdown\" options={questionnairesOption} handleOnChange={(selected) => {\r\n                                this.onSelectQuestionnairesChosen(selected)\r\n                            }} name=\"questionnaires\" placeholder=\"לא נבחר שאלון\"  style={{borderColor: 'black', width:80}}/>\r\n                        </div>\r\n                        <div style={{width:50, height:300}}>\r\n                            <input type=\"submit\" value=\"הירשם\" className=\"submit_and_reset_buttons\"/>\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                    </form>\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUser;","import React, {Component} from 'react';\r\n\r\nimport './Login.css';\r\nimport axios from 'axios';\r\nimport Adduser from'./AddUser';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ID: '',\r\n            password: '',\r\n            wrong: false,\r\n            showPopup: false,\r\n            name: \"\",\r\n            doctor: false,\r\n            patient: false,\r\n            showID: false,\r\n            showWrongUser: false,\r\n            showQ: false,\r\n            showChange: false,\r\n            id: \"\",\r\n            question: \"\",\r\n            answer: \"\",\r\n            date: \"\",\r\n            wrongA: false,\r\n            diff: false,\r\n            token: \"\",\r\n            pass: \"\",\r\n            pass2: \"\",\r\n            remember: false,\r\n            register: false\r\n        };\r\n        if(localStorage.getItem(\"doctor\")){\r\n            sessionStorage.setItem(\"token\", localStorage.getItem(\"token\"));\r\n            sessionStorage.setItem(\"name\", localStorage.getItem(\"name\"));\r\n            sessionStorage.setItem(\"type\", localStorage.getItem(\"type\"));\r\n            sessionStorage.setItem(\"doctor\", localStorage.getItem(\"doctor\"));\r\n        }\r\n        else if(localStorage.getItem(\"patient\")){\r\n            sessionStorage.setItem(\"token\", localStorage.getItem(\"token\"));\r\n            sessionStorage.setItem(\"name\", localStorage.getItem(\"name\"));\r\n            sessionStorage.setItem(\"type\", localStorage.getItem(\"type\"));\r\n            sessionStorage.setItem(\"patient\", localStorage.getItem(\"patient\"));\r\n        }\r\n        this.change = this.change.bind(this);\r\n        this.sumbit = this.sumbit.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n        this.forget = this.forget.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handle = this.handle.bind(this);\r\n        this.changePass = this.changePass.bind(this);\r\n        this.register = this.register.bind(this);\r\n    }\r\n\r\n    change(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup,\r\n            wrongA: false,\r\n            diff: false\r\n        });\r\n    }\r\n\r\n    forget(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            showID: true,\r\n            showWrongUser: false,\r\n            showQ: false,\r\n            showChange: false,\r\n            register: false\r\n        })\r\n        this.togglePopup();\r\n    }\r\n\r\n    async handleSubmit(e){\r\n        e.preventDefault();\r\n        let url = ' https://moda-medic.herokuapp.com/users/forgotPassword';\r\n        const response = await axios.post(\r\n            url,\r\n            {\r\n                UserID: this.state.id\r\n            }\r\n        );\r\n        if(response.data.data === null){\r\n            this.setState({\r\n                wrongA: true\r\n            })\r\n        }\r\n        else{\r\n            var qID = response.data.data;\r\n            const response1 = await axios.get(\" https://moda-medic.herokuapp.com/users/getVerificationQuestion?QuestionID=\" + qID);\r\n            this.setState({\r\n                showID: false,\r\n                showWrongUser: false,\r\n                showQ: true,\r\n                showChange: false,\r\n                register: false,\r\n                wrongA: false,\r\n                question: response1.data.data[\"QuestionText\"]\r\n            });\r\n        }\r\n    }\r\n\r\n    async handle(e){\r\n        e.preventDefault();\r\n        var date = new Date(this.state.date);\r\n        var dateLong = date.getTime();\r\n        let url = ' https://moda-medic.herokuapp.com/users/checkVerification';\r\n        const response = await axios.post(\r\n            url,\r\n            {\r\n                UserID: this.state.id,\r\n                VerificationAnswer: this.state.answer,\r\n                BirthDate: dateLong\r\n            }\r\n        );\r\n        var token = response.data.data;\r\n        if(!token){\r\n            this.setState({\r\n                wrongA: true\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                showID: false,\r\n                showWrongUser: false,\r\n                showQ: false,\r\n                showChange: true,\r\n                register: false,\r\n                token: token\r\n            })\r\n        }\r\n    }\r\n\r\n    async changePass(event){\r\n        event.preventDefault();\r\n        if(this.state.pass !== this.state.pass2){\r\n            this.setState({\r\n                diff: true\r\n            });\r\n        }\r\n        else{\r\n            var token = this.state.token;\r\n            var url = ' https://moda-medic.herokuapp.com/users/passwordChangeCheck/changePassword';\r\n            const response = await axios.post(\r\n                url,\r\n                {\r\n                    \"NewPassword\":this.state.pass\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'x-auth-token': token\r\n                    }\r\n                }\r\n            );\r\n            if(response.data.message){\r\n                window.alert(\"הסיסמא שונתה בהצלחה\");\r\n                this.togglePopup();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    register(e){\r\n        this.setState({\r\n            register: true,\r\n            showID: false,\r\n            showWrongUser: false,\r\n            showQ: false,\r\n            showChange: false,\r\n        })\r\n        this.togglePopup();\r\n    }\r\n\r\n    sumbit(e){\r\n        e.preventDefault();\r\n        axios.post(' https://moda-medic.herokuapp.com/users/login', {\r\n            UserID: this.state.ID,\r\n            Password: this.state.password\r\n        }).then(res => {\r\n            if(res.data.data == null){\r\n                this.setState({wrong: true})\r\n            }\r\n            else if(res.data.data.type[0] === \"patient\"){\r\n                sessionStorage.setItem(\"token\", res.data.data.token);\r\n                sessionStorage.setItem(\"name\", res.data.data.name);\r\n                sessionStorage.setItem(\"type\", res.data.data.type);\r\n                this.setState({\r\n                    patient: sessionStorage.getItem(\"type\").includes(\"patient\")\r\n                });\r\n                sessionStorage.setItem(\"patient\", this.state.patient);\r\n                window.location.reload(false);\r\n                if(this.state.remember){\r\n                    localStorage.setItem(\"token\", res.data.data.token);\r\n                    localStorage.setItem(\"name\", res.data.data.name);\r\n                    localStorage.setItem(\"type\", res.data.data.type);\r\n                    localStorage.setItem(\"patient\", this.state.patient);\r\n                }\r\n                // this.setState({name: res.data.data.name,\r\n                //     ID: \"\",\r\n                //     password: \"\",\r\n                //     wrong: false,\r\n                //     showID: false,\r\n                //     showWrongUser: true,\r\n                //     showQ: false,\r\n                //     showChange: false,\r\n                //     register: false\r\n                // });\r\n                // this.togglePopup();\r\n            }\r\n            else{\r\n                sessionStorage.setItem(\"token\", res.data.data.token);\r\n                sessionStorage.setItem(\"name\", res.data.data.name);\r\n                sessionStorage.setItem(\"type\", res.data.data.type);\r\n                this.setState({\r\n                    doctor: sessionStorage.getItem(\"type\").includes(\"doctor\")\r\n                });\r\n                sessionStorage.setItem(\"doctor\", this.state.doctor);\r\n                window.location.reload(false);\r\n                if(this.state.remember){\r\n                    localStorage.setItem(\"token\", res.data.data.token);\r\n                    localStorage.setItem(\"name\", res.data.data.name);\r\n                    localStorage.setItem(\"type\", res.data.data.type);\r\n                    localStorage.setItem(\"doctor\", this.state.doctor);\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        require(\"./Login.css\");\r\n        return(\r\n            <div>\r\n                <form onSubmit={e => this.sumbit(e)}>\r\n                    {/*<label>כתובת דוא\"ל:</label>*/}\r\n                    <label>שם משתמש:</label>\r\n                    <input type=\"text\" className=\"inputs\" name=\"ID\" onChange={e => this.change(e)} value={this.state.ID} required/>\r\n                    <label>סיסמה:</label>\r\n                    <input type=\"password\"  className=\"inputs\" name=\"password\"  onChange={e => this.change(e)} value={this.state.password} required/>\r\n                    {this.state.wrong ? <label id=\"wrong\">שם המשתמש או הסיסמה לא נכונים</label> :  <label></label> }\r\n                    <input type=\"checkbox\" id=\"remember\" name=\"remember\" onChange={e => this.change(e)} value={this.state.remember}/>\r\n                    <label>זכור אותי</label>\r\n                    <button type=\"submit\">התחבר</button>\r\n                    <label id=\"forget\"  onClick={(e) => this.forget(e)}>שכחת סיסמה?</label>\r\n                    <label id=\"register\"  onClick={(e) => this.register(e)}>הירשם</label>\r\n                </form>\r\n\r\n                {this.state.showPopup ?\r\n                    <Popup\r\n                        text={this.state.name}\r\n                        closePopup={this.togglePopup.bind(this)}\r\n                        showID={this.state.showID}\r\n                        showWrongUser={this.state.showWrongUser}\r\n                        showQ={this.state.showQ}\r\n                        showChange={this.state.showChange}\r\n                        handleSubmit={this.handleSubmit.bind(this)}\r\n                        change={this.change.bind(this)}\r\n                        handle={this.handle.bind(this)}\r\n                        question={this.state.question}\r\n                        wrongA={this.state.wrongA}\r\n                        diff={this.state.diff}\r\n                        changePass={this.changePass.bind(this)}\r\n                        register={this.state.register}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\nclass Popup extends React.Component {\r\n    render() {\r\n        var today = (new Date()).toISOString().split(\"T\")[0];\r\n        return (\r\n            <div>\r\n                {/*{ this.props.showWrongUser ?*/}\r\n                {/*    <div className='popup'>*/}\r\n                {/*        <div className='popup_innerWrong' >*/}\r\n                {/*            <button onClick={this.props.closePopup} id=\"x\">x</button>*/}\r\n                {/*            <h3>,שלום {this.props.text}</h3>*/}\r\n                {/*            <p id=\"wrongType\"> אין לך את ההרשאות המתאימות על מנת להיכנס לאתר</p>*/}\r\n                {/*        </div>*/}\r\n                {/*    </div> : null*/}\r\n                {/*}*/}\r\n                { this.props.showID ?\r\n                    <div className='popup'>\r\n                        <div className='popup_innerEmail' >\r\n                            <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                            <h3 id=\"h3\">שכחתי סיסמא</h3>\r\n                            <form onSubmit={this.props.handleSubmit}>\r\n                                <label  id=\"lid\">\r\n                                    אנא הזן שם משתמש:\r\n                                </label>\r\n                                <input type=\"text\" className=\"inputs\" name=\"id\" id=\"id\" onChange={this.props.change} required/>\r\n                                {this.props.wrongA ? <label className=\"error\">שם המשתמש לא קיימת</label> : null}\r\n                                <div className=\"lineC\">\r\n                                    <input type=\"submit\" value=\"המשך\" id=\"con\"/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n                { this.props.showQ ?\r\n                    <div className='popup'>\r\n                        <div className='popup_innerEmail' >\r\n                            <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                            <h3 id=\"h3\">שכחתי סיסמא</h3>\r\n                            <form onSubmit={this.props.handle}>\r\n                                <div className=\"lineC\">\r\n                                    <label  id=\"lq\">\r\n                                        {this.props.question}\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"lineC\">\r\n                                    <input type=\"text\"  name=\"answer\" id=\"answer\" onChange={this.props.change} required/>\r\n                                </div>\r\n                                <div className=\"lineC\">\r\n                                    <label  id=\"ldate\">\r\n                                        הכנס את תאריך יום הולדת שלך:\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"lineC\">\r\n                                    <input type=\"date\" name=\"date\" id=\"date\" max={today} onChange={this.props.change} required/>\r\n                                </div>\r\n                                <div className=\"lineC\">\r\n                                    {this.props.wrongA ? <label className=\"error\">שאלת אימות לא נכונה או תאריך לידה שגוי</label> : null}\r\n                                </div>\r\n                                <div className=\"lineC\">\r\n                                    <input type=\"submit\" value=\"המשך\" id=\"con\"/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n                { this.props.showChange ?\r\n                    <div className='popup'>\r\n                        <div className='popup_innerEmail' >\r\n                            <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                            <h3 id=\"h3\">שכחתי סיסמא</h3>\r\n                            <form onSubmit={this.props.changePass}>\r\n                                <label  id=\"lpass\">\r\n                                    סיסמא חדשה:\r\n                                </label>\r\n                                <input type=\"password\" className=\"inputs\" name=\"pass\" id=\"pass\" onChange={this.props.change} required/>\r\n                                <label id=\"lpass2\">\r\n                                    הקלד את הסיסמא מחדש:\r\n                                </label>\r\n                                <input type=\"password\" className=\"inputs\" name=\"pass2\" id=\"pass2\" onChange={this.props.change} required/>\r\n                                {this.props.diff ? <label className=\"error\">הסיסמאות שונות</label> : null}\r\n                                <input type=\"submit\" value=\"שלח\" id=\"send\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n                { this.props.register ?\r\n                    <div className='popup'>\r\n                        <div className='popup_innerAdd' >\r\n                            <button onClick={this.props.closePopup} id=\"x\">x</button>\r\n                            <br/>\r\n                            <h3>הרשמה</h3>\r\n                            <Adduser />\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport \"./HomeLogin.css\"\r\nimport Login from \"./Login\"\r\nimport Logo from \"./Logo\"\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass HomeLogin extends Component{\r\n\r\n    render(){\r\n        var path = window.location.pathname;\r\n        if(path.includes(\"search\")){\r\n            window.location.pathname = path.replace(\"search\", \"\");\r\n        }\r\n        return(\r\n            <div>\r\n\r\n                <div className=\"Home\">\r\n                    {sessionStorage.getItem(\"token\") ?  <Redirect from={path} to=\"/search\" /> : null  }\r\n                    <br />\r\n                    <header className=\"Home-header\">\r\n                        <Logo />\r\n                        <Login />\r\n                    </header>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeLogin;","import React, {Component} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport App from './App';\r\nimport HomeLogin from './HomeLogin';\r\nimport Questionnaire from './Questionnaire/SurveyComponent';\r\nimport QuestionnairesManger from './Questionnaire/QuestionnaireManger';\r\nimport SurveyComponent from './Questionnaire/SurveyComponent';\r\n\r\nclass Home extends Component{\r\n    /*\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    */\r\n\r\n    render(){\r\n\r\n        document.body.setAttribute('dir', 'rtl')\r\n        return(\r\n            <Router basename={window.location.pathname || ''}>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <HomeLogin />\r\n                    </Route>\r\n                    <Route exact path=\"/search\">\r\n                        <App component='search'/>\r\n                    </Route>\r\n                    <Route exact path=\"/messages\">\r\n                        <App component='messages'/>\r\n                    </Route>\r\n                    <Route exact path=\"/questionnaires\">\r\n                        <App component='questionnaires'/>\r\n                    </Route>\r\n                    <Route exact path=\"/instructions\">\r\n                        <App component='instructions'/>\r\n                    </Route>\r\n                    <Route exact path=\"/exercises\">\r\n                        <App component='exercises'/>\r\n                    </Route>\r\n                    <Route path='/userQuestionnaire/:QuestionnaireID' render={(props) => <App component='survey' {...props}/>}>\r\n                        {/*<App component='survey'/>*/}\r\n                    </Route>\r\n                </Switch>\r\n              </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Home from './Home';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Home />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}